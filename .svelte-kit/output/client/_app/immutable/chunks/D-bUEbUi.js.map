{"version":3,"file":"D-bUEbUi.js","sources":["../../../../../../src/lib/stores/index.ts"],"sourcesContent":["import { APP_NAME } from '$lib/constants';\nimport { type Writable, writable } from 'svelte/store';\nimport type { ModelConfig } from '$lib/apis';\nimport type { Banner } from '$lib/types';\nimport type { Socket } from 'socket.io-client';\n\nimport emojiShortCodes from '$lib/emoji-shortcodes.json';\n\n// Backend\nexport const WEBUI_NAME = writable(APP_NAME);\nexport const config: Writable<Config | undefined> = writable(undefined);\nexport const user: Writable<SessionUser | undefined> = writable(undefined);\n\n// Electron App\nexport const isApp = writable(false);\nexport const appInfo = writable(null);\nexport const appData = writable(null);\n\n// Frontend\nexport const MODEL_DOWNLOAD_POOL = writable({});\n\nexport const mobile = writable(false);\n\nexport const socket: Writable<null | Socket> = writable(null);\nexport const activeUserIds: Writable<null | string[]> = writable(null);\nexport const USAGE_POOL: Writable<null | string[]> = writable(null);\n\nexport const userAPIKey: Writable<string | null> = writable(null);\n\nexport const theme = writable('system');\n\nexport const shortCodesToEmojis = writable(\n\tObject.entries(emojiShortCodes).reduce((acc, [key, value]) => {\n\t\tif (typeof value === 'string') {\n\t\t\tacc[value] = key;\n\t\t} else {\n\t\t\tfor (const v of value) {\n\t\t\t\tacc[v] = key;\n\t\t\t}\n\t\t}\n\n\t\treturn acc;\n\t}, {})\n);\n\nexport const TTSWorker = writable(null);\n\nexport const chatId = writable('');\nexport const chatTitle = writable('');\n\nexport const channels = writable([]);\nexport const chats = writable([]);\nexport const pinnedChats = writable([]);\nexport const tags = writable([]);\n\nexport const models: Writable<Model[]> = writable([]);\n\nexport const prompts: Writable<null | Prompt[]> = writable(null);\nexport const knowledge: Writable<null | Document[]> = writable(null);\nexport const tools = writable(null);\nexport const functions = writable(null);\n\nexport const banners: Writable<Banner[]> = writable([]);\n\nexport const settings: Writable<Settings> = writable({});\n\nexport const showSidebar = writable(false);\nexport const showSettings = writable(false);\nexport const showArchivedChats = writable(false);\nexport const showChangelog = writable(false);\n\nexport const showControls = writable(false);\nexport const showOverview = writable(false);\nexport const showArtifacts = writable(false);\nexport const showCallOverlay = writable(false);\n\nexport const temporaryChatEnabled = writable(false); //DIYfalse\nexport const scrollPaginationEnabled = writable(false);\nexport const currentChatPage = writable(1);\n\nexport const isLastActiveTab = writable(true);\nexport const playingNotificationSound = writable(false);\n\nexport type Model = OpenAIModel | OllamaModel;\n\ntype BaseModel = {\n\tid: string;\n\tname: string;\n\tinfo?: ModelConfig;\n\towned_by: 'ollama' | 'openai' | 'arena';\n};\n\nexport interface OpenAIModel extends BaseModel {\n\towned_by: 'openai';\n\texternal: boolean;\n\tsource?: string;\n}\n\nexport interface OllamaModel extends BaseModel {\n\towned_by: 'ollama';\n\tdetails: OllamaModelDetails;\n\tsize: number;\n\tdescription: string;\n\tmodel: string;\n\tmodified_at: string;\n\tdigest: string;\n\tollama?: {\n\t\tname?: string;\n\t\tmodel?: string;\n\t\tmodified_at: string;\n\t\tsize?: number;\n\t\tdigest?: string;\n\t\tdetails?: {\n\t\t\tparent_model?: string;\n\t\t\tformat?: string;\n\t\t\tfamily?: string;\n\t\t\tfamilies?: string[];\n\t\t\tparameter_size?: string;\n\t\t\tquantization_level?: string;\n\t\t};\n\t\turls?: number[];\n\t};\n}\n\ntype OllamaModelDetails = {\n\tparent_model: string;\n\tformat: string;\n\tfamily: string;\n\tfamilies: string[] | null;\n\tparameter_size: string;\n\tquantization_level: string;\n};\n\ntype Settings = {\n\tmodels?: string[];\n\tconversationMode?: boolean;\n\tspeechAutoSend?: boolean;\n\tresponseAutoPlayback?: boolean;\n\taudio?: AudioSettings;\n\tshowUsername?: boolean;\n\tnotificationEnabled?: boolean;\n\ttitle?: TitleSettings;\n\tsplitLargeDeltas?: boolean;\n\tchatDirection: 'LTR' | 'RTL';\n\n\tsystem?: string;\n\trequestFormat?: string;\n\tkeepAlive?: string;\n\tseed?: number;\n\ttemperature?: string;\n\trepeat_penalty?: string;\n\ttop_k?: string;\n\ttop_p?: string;\n\tnum_ctx?: string;\n\tnum_batch?: string;\n\tnum_keep?: string;\n\toptions?: ModelOptions;\n};\n\ntype ModelOptions = {\n\tstop?: boolean;\n};\n\ntype AudioSettings = {\n\tSTTEngine?: string;\n\tTTSEngine?: string;\n\tspeaker?: string;\n\tmodel?: string;\n\tnonLocalVoices?: boolean;\n};\n\ntype TitleSettings = {\n\tauto?: boolean;\n\tmodel?: string;\n\tmodelExternal?: string;\n\tprompt?: string;\n};\n\ntype Prompt = {\n\tcommand: string;\n\tuser_id: string;\n\ttitle: string;\n\tcontent: string;\n\ttimestamp: number;\n};\n\ntype Document = {\n\tcollection_name: string;\n\tfilename: string;\n\tname: string;\n\ttitle: string;\n};\n\ntype Config = {\n\tstatus: boolean;\n\tname: string;\n\tversion: string;\n\tdefault_locale: string;\n\tdefault_models: string;\n\tdefault_prompt_suggestions: PromptSuggestion[];\n\tfeatures: {\n\t\tauth: boolean;\n\t\tauth_trusted_header: boolean;\n\t\tenable_api_key: boolean;\n\t\tenable_signup: boolean;\n\t\tenable_login_form: boolean;\n\t\tenable_web_search?: boolean;\n\t\tenable_google_drive_integration: boolean;\n\t\tenable_onedrive_integration: boolean;\n\t\tenable_image_generation: boolean;\n\t\tenable_admin_export: boolean;\n\t\tenable_admin_chat_access: boolean;\n\t\tenable_community_sharing: boolean;\n\t\tenable_autocomplete_generation: boolean;\n\t};\n\toauth: {\n\t\tproviders: {\n\t\t\t[key: string]: string;\n\t\t};\n\t};\n};\n\ntype PromptSuggestion = {\n\tcontent: string;\n\ttitle: [string, string];\n};\n\ntype SessionUser = {\n\tid: string;\n\temail: string;\n\tname: string;\n\trole: string;\n\tprofile_image_url: string;\n};\n"],"names":["WEBUI_NAME","writable","APP_NAME","config","user","isApp","appInfo","MODEL_DOWNLOAD_POOL","mobile","socket","activeUserIds","USAGE_POOL","userAPIKey","theme","shortCodesToEmojis","emojiShortCodes","acc","key","value","v","TTSWorker","chatId","chatTitle","channels","chats","pinnedChats","tags","models","prompts","knowledge","tools","functions","banners","settings","showSidebar","showSettings","showArchivedChats","showChangelog","showControls","showOverview","showArtifacts","showCallOverlay","temporaryChatEnabled","scrollPaginationEnabled","currentChatPage","isLastActiveTab","playingNotificationSound"],"mappings":"mp9CASaA,EAAaC,EAASC,CAAQ,EAC9BC,EAAuCF,EAAS,MAAS,EACzDG,EAA0CH,EAAS,MAAS,EAG5DI,EAAQJ,EAAS,EAAK,EACtBK,EAAUL,EAAS,IAAI,EAIvBM,EAAsBN,EAAS,CAAE,CAAA,EAEjCO,EAASP,EAAS,EAAK,EAEvBQ,EAAkCR,EAAS,IAAI,EAC/CS,EAA2CT,EAAS,IAAI,EACxDU,EAAwCV,EAAS,IAAI,EAErDW,EAAsCX,EAAS,IAAI,EAEnDY,EAAQZ,EAAS,QAAQ,EAEzBa,EAAqBb,EACjC,OAAO,QAAQc,CAAe,EAAE,OAAO,CAACC,EAAK,CAACC,EAAKC,CAAK,IAAM,CACzD,GAAA,OAAOA,GAAU,SACpBF,EAAIE,CAAK,EAAID,MAEb,WAAWE,KAAKD,EACfF,EAAIG,CAAC,EAAIF,EAIJ,OAAAD,CAAA,EACL,CAAE,CAAA,CACN,EAEaI,EAAYnB,EAAS,IAAI,EAEzBoB,EAASpB,EAAS,EAAE,EACpBqB,EAAYrB,EAAS,EAAE,EAEvBsB,EAAWtB,EAAS,CAAE,CAAA,EACtBuB,EAAQvB,EAAS,CAAE,CAAA,EACnBwB,EAAcxB,EAAS,CAAE,CAAA,EACzByB,EAAOzB,EAAS,CAAE,CAAA,EAElB0B,EAA4B1B,EAAS,CAAE,CAAA,EAEvC2B,EAAqC3B,EAAS,IAAI,EAClD4B,EAAyC5B,EAAS,IAAI,EACtD6B,EAAQ7B,EAAS,IAAI,EACrB8B,EAAY9B,EAAS,IAAI,EAEzB+B,EAA8B/B,EAAS,CAAE,CAAA,EAEzCgC,EAA+BhC,EAAS,CAAE,CAAA,EAE1CiC,EAAcjC,EAAS,EAAK,EAC5BkC,EAAelC,EAAS,EAAK,EAC7BmC,EAAoBnC,EAAS,EAAK,EAClCoC,EAAgBpC,EAAS,EAAK,EAE9BqC,EAAerC,EAAS,EAAK,EAC7BsC,EAAetC,EAAS,EAAK,EAC7BuC,EAAgBvC,EAAS,EAAK,EAC9BwC,EAAkBxC,EAAS,EAAK,EAEhCyC,EAAuBzC,EAAS,EAAK,EACrC0C,EAA0B1C,EAAS,EAAK,EACxC2C,EAAkB3C,EAAS,CAAC,EAE5B4C,EAAkB5C,EAAS,EAAI,EAC/B6C,EAA2B7C,EAAS,EAAK"}