{"version":3,"file":"16.DKMT8_4z.js","sources":["../../../../../../node_modules/svelte/src/runtime/internal/await_block.js","../../../../../../node_modules/@kurkle/color/dist/color.esm.js","../../../../../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../../../../../node_modules/chart.js/dist/chart.js","../../../../../../node_modules/svelte-chartjs/dist/utils/svelte.js","../../../../../../node_modules/svelte-chartjs/dist/Chart.svelte","../../../../../../src/routes/(app)/analysis-chat/+page.svelte"],"sourcesContent":["import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.9\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property,\n            clip\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { SvelteComponent, bubble, listen, current_component, } from 'svelte/internal';\nimport { onMount, onDestroy } from 'svelte';\nconst eventPrefix = /^on/;\nconst events = [];\nObject.keys(globalThis).forEach(key => {\n    if (eventPrefix.test(key)) {\n        events.push(key.replace(eventPrefix, ''));\n    }\n});\nexport function useForwardEvents(getRef) {\n    const component = current_component;\n    const destructors = [];\n    function forward(e) {\n        bubble(component, e);\n    }\n    onMount(() => {\n        const ref = getRef();\n        events.forEach(ref instanceof Element\n            ? event => destructors.push(listen(ref, event, forward))\n            : event => destructors.push(ref.$on(event, forward)));\n    });\n    onDestroy(() => {\n        while (destructors.length) {\n            destructors.pop()();\n        }\n    });\n}\n","<script>import { onMount, afterUpdate, onDestroy } from \"svelte\";\nimport { Chart as ChartJS } from \"chart.js\";\nimport { useForwardEvents } from \"./utils/index.js\";\nfunction clean(props2) {\n  let { data: data2, type: type2, options: options2, plugins: plugins2, children, $$scope, $$slots, ...rest } = props2;\n  return rest;\n}\nexport let type;\nexport let data = {\n  datasets: []\n};\nexport let options = {};\nexport let plugins = [];\nexport let updateMode = void 0;\nexport let chart = null;\nlet canvasRef;\nlet props = clean($$props);\nonMount(() => {\n  chart = new ChartJS(canvasRef, {\n    type,\n    data,\n    options,\n    plugins\n  });\n});\nafterUpdate(() => {\n  if (!chart)\n    return;\n  chart.data = data;\n  Object.assign(chart.options, options);\n  chart.update(updateMode);\n});\nonDestroy(() => {\n  if (chart)\n    chart.destroy();\n  chart = null;\n});\nuseForwardEvents(() => canvasRef);\n</script>\n\n<canvas bind:this={canvasRef} {...props} />\n","<script lang=\"ts\">\n\timport { onMount, afterUpdate } from 'svelte';\n\timport { goto } from '$app/navigation';\n\timport { get, writable } from 'svelte/store';\n\timport { user, showSidebar } from '$lib/stores';\n\timport i18n from '$lib/i18n';\n\timport { Chart } from 'svelte-chartjs';\n\timport type { ChartData, ChartTypeRegistry } from 'chart.js';\n\timport {\n\t\tChart as ChartJS,\n\t\tLineController,\n\t\tLineElement,\n\t\tPointElement,\n\t\tLinearScale,\n\t\tTitle,\n\t\tCategoryScale,\n\t\tTooltip,\n\t\tLegend\n\t} from 'chart.js';\n\timport Table from '$lib/components/common/Table.svelte';\n\timport { createDocxTemplateReport, downloadDocxDocument } from '$lib/utils/docxTemplateUtils';\n\timport { WEBUI_BASE_URL } from '$lib/constants';\n\timport { getApiConfig } from '$lib/utils/api-config';\n\n\t// Initialize API config\n\tlet apiConfig = {\n\t\tbaseUrl: WEBUI_BASE_URL,\n\t\tuserToken: '',\n\t\tlanguageLocal: 'en'\n\t};\n\n\tChartJS.register(\n\t\tLineController,\n\t\tLineElement,\n\t\tPointElement,\n\t\tLinearScale,\n\t\tTitle,\n\t\tCategoryScale,\n\t\tTooltip,\n\t\tLegend\n\t);\n\n\tinterface Message {\n\t\trole: string;\n\t\tcontent: string;\n\t\tmetadata?: any;\n\t\tresults?: {\n\t\t\tcolumns: string[];\n\t\t\trecords: [string, number][];\n\t\t};\n\t}\n\n\tinterface AnalysisChartData extends ChartData<'line'> {\n\t\tlabels: string[];\n\t\tdatasets: {\n\t\t\tlabel: string;\n\t\t\tdata: number[];\n\t\t\tborderColor: string;\n\t\t\ttension: number;\n\t\t}[];\n\t}\n\n\tlet messages: Message[] = [];\n\tlet input = '';\n\tlet isLoading = false;\n\tlet error = '';\n\tlet isDownloading = false;\n\tlet isToggling = false; // Added to prevent rapid toggle clicks\n\tlet contentContainer: HTMLElement;\n\n\tonMount(() => {\n\t\t// Initialize API config - moved to a separate async function\n\t\tinitApiConfig();\n\t\t\n\t\t// Add event listener for window resize to ensure sidebar renders correctly\n\t\twindow.addEventListener('resize', handleResize);\n\t\t\n\t\t// Return cleanup function\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', handleResize);\n\t\t};\n\t});\n\t\n\t// Separate async function for API initialization\n\tasync function initApiConfig() {\n\t\ttry {\n\t\t\tapiConfig = await getApiConfig(i18n);\n\t\t\tconsole.log('API config initialized:', apiConfig);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to initialize API config:', error);\n\t\t}\n\t}\n\t\n\t// Utility function to safely extract regex match groups with null checks\n\tfunction safeMatchGroup(text: string, regex: RegExp, groupIndex: number = 1): string {\n\t\tconst match = text.match(regex);\n\t\treturn match && match[groupIndex] ? match[groupIndex] : '';\n\t}\n\t\n\t// Handle window resize to ensure sidebar renders correctly\n\tfunction handleResize() {\n\t\tif (contentContainer) {\n\t\t\t// Force layout recalculation\n\t\t\tcontentContainer.getBoundingClientRect();\n\t\t}\n\t}\n\n\tasync function handleSubmit() {\n\t\tif (!input.trim()) return;\n\t\tif (!input.startsWith('@analysis')) {\n\t\t\terror = 'Please start your message with @analysis';\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log('[DEBUG] Submitting input:', input);\n\n\t\tisLoading = true;\n\t\terror = '';\n\t\tmessages = [];\n\n\t\ttry {\n\t\t\tconst token = localStorage.getItem('token');\n\t\t\tif (!token) {\n\t\t\t\tthrow new Error('No authentication token found');\n\t\t\t}\n\n\t\t\tconst requestBody = {\n\t\t\t\tconversation_id: 'analysis_stream',\n\t\t\t\tmessage: input\n\t\t\t};\n\t\t\tconst requestHeaders = {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': `Bearer ${apiConfig.userToken}`,\n\t\t\t\t'Accept-Language': apiConfig.languageLocal\n\t\t\t};\n\t\t\tconsole.log('[DEBUG] Sending fetch to proxy/api/analysis/stream', requestBody, requestHeaders);\n\n\t\t\tconst response = await fetch(`${WEBUI_BASE_URL}/proxy/api/analysis/stream`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: requestHeaders,\n\t\t\t\tbody: JSON.stringify(requestBody)\n\t\t\t});\n\n\t\t\tconsole.log('[DEBUG] Response status:', response.status);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Failed to fetch analysis');\n\t\t\t}\n\n\t\t\tconst reader = response.body?.getReader();\n\t\t\tif (!reader) throw new Error('No reader available');\n\n\t\t\tconst decoder = new TextDecoder();\n\t\t\tlet buffer = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst { done, value } = await reader.read();\n\t\t\t\tif (done) break;\n\n\t\t\t\tbuffer += decoder.decode(value, { stream: true });\n\t\t\t\tconst lines = buffer.split('\\n');\n\t\t\t\tbuffer = lines.pop() || '';\n\n\t\t\t\tfor (const line of lines) {\n\t\t\t\t\tif (!line.trim()) continue;\n\t\t\t\t\tconsole.log('[DEBUG] Received line:', line);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst data = JSON.parse(line);\n\t\t\t\t\t\tif (data.type === 'node') {\n\t\t\t\t\t\t\tconst newMessage = {\n\t\t\t\t\t\t\t\trole: 'assistant',\n\t\t\t\t\t\t\t\tcontent: data.content,\n\t\t\t\t\t\t\t\tmetadata: data.metadata,\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconsole.log('[DEBUG] Adding message:', newMessage);\n\t\t\t\t\t\t\tmessages = [...messages, newMessage];\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('[DEBUG] Error parsing line:', e, line);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('[DEBUG] Error in handleSubmit:', e);\n\t\t\terror = e instanceof Error ? e.message : 'An error occurred';\n\t\t} finally {\n\t\t\tisLoading = false;\n\t\t\tinput = '';\n\t\t}\n\t}\n\n\tfunction formatChartData(results: Message['results']): AnalysisChartData | null {\n\t\tif (!results || !results.records) return null;\n\t\tconst chartData: AnalysisChartData = {\n\t\t\tlabels: results.records.map((r) => r[0]),\n\t\t\tdatasets: [{\n\t\t\t\tlabel: 'Value',\n\t\t\t\tdata: results.records.map((r) => r[1]),\n\t\t\t\tborderColor: 'rgb(75, 192, 192)',\n\t\t\t\ttension: 0.1\n\t\t\t}]\n\t\t};\n\t\treturn chartData;\n\t}\n\n\tfunction toTableObjects(columns: string[], records: [string, number][]) {\n\t\treturn records.map(row => {\n\t\t\tconst obj: Record<string, any> = {};\n\t\t\tcolumns.forEach((col, i) => {\n\t\t\t\tobj[col] = row[i];\n\t\t\t});\n\t\t\treturn obj;\n\t\t});\n\t}\n\n\tasync function downloadWordReport() {\n\t\ttry {\n\t\t\tconsole.log('[DOCX DEBUG] Starting Word document download with Docxtemplater');\n\t\t\tisDownloading = true;\n\t\t\t\n\t\t\t// Combine all message contents for the report\n\t\t\tconst combinedContent = messages.map(message => {\n\t\t\t\t// Clean HTML tags and format the content\n\t\t\t\treturn message.content.replace(/<[^>]+>/g, '');\n\t\t\t}).join('\\n\\n');\n\t\t\t\n\t\t\t// Use the first message's results for the table, if available\n\t\t\tconst tableData = messages.find(msg => msg.results?.columns && msg.results.records)?.results;\n\t\t\t\n\t\t\t// Create the document using our new utility function\n\t\t\tconst blob = await createDocxTemplateReport(\n\t\t\t\tcombinedContent,\n\t\t\t\t'Analysis Report',\n\t\t\t\ttableData\n\t\t\t);\n\t\t\t\n\t\t\t// Generate filename with timestamp\n\t\t\tconst timestamp = new Date().toISOString().replace(/[-:.]/g, '').substring(0, 14);\n\t\t\tconst filename = `analysis_report_${timestamp}.docx`;\n\t\t\t\n\t\t\t// Download the document\n\t\t\tdownloadDocxDocument(blob, filename);\n\t\t\t\n\t\t\tconsole.log('[DOCX DEBUG] Download complete');\n\t\t} catch (error) {\n\t\t\tconsole.error('[DOCX DEBUG] Error in downloadWordReport:', error);\n\t\t\talert('Failed to download report. Please try again.');\n\t\t} finally {\n\t\t\tisDownloading = false;\n\t\t}\n\t}\n\n\tfunction toggleSidebar() {\n\t\tif (isToggling) return; // Prevent rapid toggling\n\t\t\n\t\tisToggling = true;\n\t\t\n\t\t// Force a layout recalculation\n\t\tif (contentContainer) {\n\t\t\tcontentContainer.getBoundingClientRect();\n\t\t}\n\t\t\n\t\t// Add a tiny delay before updating the store\n\t\trequestAnimationFrame(() => {\n\t\t\tshowSidebar.update(value => !value);\n\t\t\t\n\t\t\t// Reset toggle state after animation completes\n\t\t\tsetTimeout(() => { \n\t\t\t\tisToggling = false;\n\t\t\t\t\n\t\t\t\t// Force another layout recalculation after sidebar animation completes\n\t\t\t\tif (contentContainer) {\n\t\t\t\t\tcontentContainer.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t});\n\t}\n\t\n\t// After each update, ensure layout is recalculated\n\tafterUpdate(() => {\n\t\tif (contentContainer) {\n\t\t\t// Force layout recalculation after DOM updates\n\t\t\tcontentContainer.getBoundingClientRect();\n\t\t}\n\t});\n</script>\n\n<div class=\"analysis-container\" bind:this={contentContainer}>\n\t<div class=\"analysis-header bg-gray-900 dark:bg-gray-950 text-white\">\n\t\t<div class=\"header-title-row\">\n\t\t\t<div class=\"header-left\">\n\t\t\t\t<!-- Sidebar Toggle Button -->\n\t\t\t\t<button\n\t\t\t\t\tclass=\"cursor-pointer p-[7px] flex rounded-xl hover:bg-gray-800 dark:hover:bg-gray-800 transition sidebar-toggle\"\n\t\t\t\t\ton:click={toggleSidebar}\n\t\t\t\t\taria-label=\"Toggle Sidebar\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"m-auto self-center\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tclass=\"size-5\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\td=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25H12\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t<h1 class=\"text-2xl font-bold\">Analysis Report</h1>\n\t\t\t</div>\n\n\t\t\t<button \n\t\t\t\ton:click={downloadWordReport} \n\t\t\t\tclass=\"px-4 py-2 bg-blue-100 text-blue-700 border border-blue-200 rounded-lg hover:bg-blue-200 dark:bg-blue-800/30 dark:text-blue-300 dark:border-blue-700 dark:hover:bg-blue-700/50 transition flex items-center\"\n\t\t\t\tdisabled={isDownloading || messages.length === 0}\n\t\t\t>\n\t\t\t\t{#if isDownloading}\n\t\t\t\t\t<svg class=\"animate-spin h-5 w-5 mr-2 text-blue-600 dark:text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n\t\t\t\t\t\t<path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<span>Downloading...</span>\n\t\t\t\t{:else}\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2 text-blue-600 dark:text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n\t\t\t\t\t</svg>\n\t\t\t\t\t<span>Download as Word</span>\n\t\t\t\t{/if}\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n\t<div class=\"analysis-content bg-white dark:bg-gray-900\">\n\t\t<!-- Message content area -->\n\t\t<div class=\"flex-1 overflow-y-auto p-4 space-y-4\">\n\t\t\t{#each messages as message}\n\t\t\t\t<div class=\"bg-white dark:bg-gray-800 rounded-xl p-0 shadow-md overflow-hidden border border-gray-100 dark:border-gray-700 mb-6\">\n\t\t\t\t\t<!-- Extract and display title -->\n\t\t\t\t\t{#if message.content.match(/\\*\\*Analysis for - (.*?)\\*\\*/)}\n\t\t\t\t\t\t<div class=\"bg-gray-50 dark:bg-gray-700 px-5 py-3 border-b border-gray-200 dark:border-gray-700\">\n\t\t\t\t\t\t\t<h2 class=\"text-xl font-bold text-gray-800 dark:text-gray-200\">\n\t\t\t\t\t\t\t\t{safeMatchGroup(message.content, /\\*\\*Analysis for - (.*?)\\*\\*/)}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t\t\n\t\t\t\t\t<!-- Content area -->\n\t\t\t\t\t<div class=\"p-0\">\n\t\t\t\t\t\t<!-- Summary section -->\n\t\t\t\t\t\t{#if message.content.includes('**Summary')}\n\t\t\t\t\t\t\t<div class=\"px-4 py-4 border-b border-gray-100 dark:border-gray-700\">\n\t\t\t\t\t\t\t\t<div class=\"flex items-start\">\n\t\t\t\t\t\t\t\t\t<div class=\"bg-blue-100 dark:bg-blue-800/30 p-2 rounded-lg mr-3\">\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-blue-600 dark:text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" />\n\t\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t\t\t\t\t\t<h3 class=\"font-semibold text-blue-800 dark:text-blue-300 mb-2\">Summary</h3>\n\t\t\t\t\t\t\t\t\t\t<div class=\"text-gray-700 dark:text-gray-300\">\n\t\t\t\t\t\t\t\t\t\t\t{#if message.content.match(/\\*\\*Summary\\*\\*:?\\s*(.*?)(?:\\n\\n\\*\\*Trends And Insights|\\*\\*Trends And Insights)/s)}\n\t\t\t\t\t\t\t\t\t\t\t\t{@html safeMatchGroup(\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.content,\n\t\t\t\t\t\t\t\t\t\t\t\t\t/\\*\\*Summary\\*\\*:?\\s*(.*?)(?:\\n\\n\\*\\*Trends And Insights|\\*\\*Trends And Insights)/s\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.split(';')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map(line => line.trim())\n\t\t\t\t\t\t\t\t\t\t\t\t\t.join('<br>')}\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- Trends And Insights section -->\n\t\t\t\t\t\t{#if message.content.includes('**Trends And Insights')}\n\t\t\t\t\t\t\t<div class=\"bg-purple-50 dark:bg-purple-900/10 px-4 py-4 border-b border-gray-100 dark:border-gray-700\">\n\t\t\t\t\t\t\t\t<div class=\"flex items-start\">\n\t\t\t\t\t\t\t\t\t<div class=\"bg-purple-100 dark:bg-purple-800/30 p-2 rounded-lg mr-3\">\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-purple-600 dark:text-purple-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 0l-2 2a1 1 0 101.414 1.414L8 10.414l1.293 1.293a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t\t\t\t\t\t<h3 class=\"font-semibold text-purple-800 dark:text-purple-300 mb-2\">Trends And Insights</h3>\n\t\t\t\t\t\t\t\t\t\t<div class=\"text-gray-700 dark:text-gray-300\">\n\t\t\t\t\t\t\t\t\t\t\t{#if message.content.match(/\\*\\*Trends And Insights\\*\\*:?\\s*(.*?)(?:\\n\\n\\*\\*Journal Entries|\\*\\*Journal Entries)/s)}\n\t\t\t\t\t\t\t\t\t\t\t\t<ul class=\"list-disc pl-5 space-y-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{#each safeMatchGroup(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.content,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\\*\\*Trends And Insights\\*\\*:?\\s*(.*?)(?:\\n\\n\\*\\*Journal Entries|\\*\\*Journal Entries)/s\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/^\\*\\s*/, '')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.split(/;\\s*|\\n\\*\\s*/)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(item => item.trim()) as item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li>{@html item.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')}</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- Journal Entries Analysis section -->\n\t\t\t\t\t\t{#if message.content.includes('**Journal Entries Analysis')}\n\t\t\t\t\t\t\t<div class=\"bg-green-50 dark:bg-green-900/10 px-4 py-4 border-b border-gray-100 dark:border-gray-700\">\n\t\t\t\t\t\t\t\t<div class=\"flex items-start\">\n\t\t\t\t\t\t\t\t\t<div class=\"bg-green-100 dark:bg-green-800/30 p-2 rounded-lg mr-3\">\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-green-600 dark:text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm2 10a1 1 0 10-2 0v3a1 1 0 102 0v-3zm2-3a1 1 0 011 1v5a1 1 0 11-2 0v-5a1 1 0 011-1zm4-1a1 1 0 10-2 0v7a1 1 0 102 0V8z\" clip-rule=\"evenodd\" />\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t\t\t\t\t\t<h3 class=\"font-semibold text-green-800 dark:text-green-300 mb-2\">Journal Entries</h3>\n\t\t\t\t\t\t\t\t\t\t<div class=\"text-gray-700 dark:text-gray-300\">\n\t\t\t\t\t\t\t\t\t\t\t{#if message.content.match(/\\*\\*Journal Entries Analysis\\*\\*:?\\s*(.*?)(?:\\n\\n\\*\\*Recommendations|\\*\\*Recommendations)/s)}\n\t\t\t\t\t\t\t\t\t\t\t\t<ul class=\"list-disc pl-5 space-y-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{#each safeMatchGroup(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.content, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\\*\\*Journal Entries Analysis\\*\\*:?\\s*(.*?)(?:\\n\\n\\*\\*Recommendations|\\*\\*Recommendations)/s\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/^\\*\\s*/, '')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.split(/;\\s*|\\n\\*\\s*/)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(item => item.trim()) as item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li>{@html item.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')}</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- Recommendations section -->\n\t\t\t\t\t\t{#if message.content.includes('**Recommendations')}\n\t\t\t\t\t\t\t<div class=\"bg-amber-50 dark:bg-amber-900/10 px-4 py-4\">\n\t\t\t\t\t\t\t\t<div class=\"flex items-start\">\n\t\t\t\t\t\t\t\t\t<div class=\"bg-amber-100 dark:bg-amber-800/30 p-2 rounded-lg mr-3\">\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-amber-600 dark:text-amber-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" />\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t\t\t\t\t\t<h3 class=\"font-semibold text-amber-800 dark:text-amber-300 mb-2\">Recommendations</h3>\n\t\t\t\t\t\t\t\t\t\t<div class=\"text-gray-700 dark:text-gray-300\">\n\t\t\t\t\t\t\t\t\t\t\t{#if message.content.match(/\\*\\*Recommendations\\*\\*:?\\s*(.*?)$/s)}\n\t\t\t\t\t\t\t\t\t\t\t\t<ul class=\"list-disc pl-5 space-y-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{#each safeMatchGroup(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.content, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\\*\\*Recommendations\\*\\*:?\\s*(.*?)$/s\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.split(/;\\s*|\\n\\*\\s*/)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(rec => rec.trim()) as recommendation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li>{@html recommendation.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')}</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\n\t\t\t\t\t\t{#if !message.content.includes('**Summary') && !message.content.includes('**Trends And Insights') && \n\t\t\t\t\t\t\t!message.content.includes('**Journal Entries Analysis') && !message.content.includes('**Recommendations')}\n\t\t\t\t\t\t\t<div class=\"px-5 py-4\">\n\t\t\t\t\t\t\t\t<div class=\"prose dark:prose-invert max-w-none\">\n\t\t\t\t\t\t\t\t\t{@html message.content.replace(/;/g, '<br>').replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t{#if message.results}\n\t\t\t\t\t\t<div class=\"mt-4\">\n\t\t\t\t\t\t\t{#if message.results.records}\n\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-2 font-medium text-gray-700 dark:text-gray-300 mb-2\">\n\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" class=\"w-4 h-4\">\n\t\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 0 1-1.125-1.125M3.375 19.5h7.5c.621 0 1.125-.504 1.125-1.125m-9.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-7.5A1.125 1.125 0 0 1 12 18.375m9.75-12.75c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125m19.5 0v1.5c0 .621-.504 1.125-1.125 1.125M2.25 5.625v1.5c0 .621.504 1.125 1.125 1.125m0 0h17.25m-17.25 0h7.5c.621 0 1.125.504 1.125 1.125M3.375 8.25c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m1.125-3.75h7.5c.621 0 1.125.504 1.125 1.125m-9.75 0h9.75\" />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\tData Table\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"overflow-x-auto\">\n\t\t\t\t\t\t\t\t\t<Table \n\t\t\t\t\t\t\t\t\t\tdata={toTableObjects(message.results.columns, message.results.records)}\n\t\t\t\t\t\t\t\t\t\tcolumns={message.results.columns}\n\t\t\t\t\t\t\t\t\t\tclassName=\"border w-full table-improved\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-4 h-64\">\n\t\t\t\t\t\t\t\t\t{#if message.results}\n\t\t\t\t\t\t\t\t\t\t{#await Promise.resolve(formatChartData(message.results)) then chartData}\n\t\t\t\t\t\t\t\t\t\t\t{#if chartData}\n\t\t\t\t\t\t\t\t\t\t\t\t<Chart\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"line\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={chartData}\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaintainAspectRatio: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t{/await}\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\n\t\t<!-- Input form at bottom -->\n\t\t<div class=\"bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700\">\n\t\t\t<div class=\"max-w-6xl px-2.5 mx-auto inset-x-0\">\n\t\t\t\t<form on:submit|preventDefault={handleSubmit} class=\"w-full flex gap-1.5\">\n\t\t\t\t\t<div class=\"flex-1 flex flex-col relative w-full rounded-3xl px-1 bg-gray-600/5 dark:bg-gray-400/5 dark:text-gray-100\">\n\t\t\t\t\t\t<div class=\"px-2.5\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tbind:value={input}\n\t\t\t\t\t\t\t\tplaceholder=\"Send a message starting with @analysis\"\n\t\t\t\t\t\t\t\tclass=\"scrollbar-hidden bg-transparent dark:text-gray-100 outline-hidden w-full pt-3 px-1 resize-none h-fit\"\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t  \n\t\t\t\t\t\t<div class=\"flex justify-between mt-1.5 mb-2.5 mx-0.5 max-w-full\">\n\t\t\t\t\t\t\t<div class=\"ml-1 self-end gap-0.5 flex items-center flex-1 max-w-[80%]\">\n\t\t\t\t\t\t\t\t<!-- This space can remain empty to match the layout -->\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"self-end flex space-x-1 mr-1 shrink-0\">\n\t\t\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclass=\"{!isLoading \n\t\t\t\t\t\t\t\t\t\t\t? 'bg-black text-white hover:bg-gray-900 dark:bg-white dark:text-black dark:hover:bg-gray-100' \n\t\t\t\t\t\t\t\t\t\t\t: 'text-white bg-gray-200 dark:text-gray-900 dark:bg-gray-700'} \n\t\t\t\t\t\t\t\t\t\t\ttransition rounded-full p-1.5 self-center\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{#if isLoading}\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<svg class=\"animate-spin h-5 w-5 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"></path>\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Processing...</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"size-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M8 14a.75.75 0 0 1-.75-.75V4.56L4.03 7.78a.75.75 0 0 1-1.06-1.06l4.5-4.5a.75.75 0 0 1 1.06 0l4.5 4.5a.75.75 0 0 1-1.06 1.06L8.75 4.56v8.69A.75.75 0 0 1 8 14Z\" clip-rule=\"evenodd\"/>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t\n\t\t\t\t{#if error}\n\t\t\t\t\t<p class=\"mt-2 text-red-500 text-sm\">{error}</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<style>\n/* Add structured CSS similar to excel-to-sql page */\n.analysis-container {\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 100vh;\n\twidth: 100%;\n\tposition: relative;\n\toverflow: hidden;\n}\n\n.analysis-header {\n\tpadding: 12px 24px;\n\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n\tz-index: 10;\n\tposition: relative;\n}\n\n.header-title-row {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n}\n\n.header-left {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 16px;\n}\n\n.sidebar-toggle {\n\ttransition: all 300ms ease-in-out;\n\tposition: relative;\n\tz-index: 11;\n}\n\n.analysis-content {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\toverflow: hidden;\n\tposition: relative;\n}\n\n.analysis-content > div.flex-1 {\n\theight: calc(100vh - 130px);\n}\n\n:global(.table-improved) {\n\twidth: calc(100% + 1rem) !important;\n\tmax-width: none !important;\n\tmargin-left: -0.5rem;\n\tmargin-right: -0.5rem;\n}\n:global(.table-improved thead) {\n\tbackground-color: #e8f4ff !important;\n}\n:global(.dark .table-improved thead) {\n\tbackground-color: #1e3a5f !important;\n}\n:global(.table-improved th) {\n\tfont-weight: 600;\n\tpadding: 0.75rem 1rem !important;\n}\n:global(.table-improved td) {\n\tpadding: 0.625rem 1rem !important;\n}\n\n/* Fixes for mobile viewports */\n@media (max-width: 768px) {\n\t.analysis-header {\n\t\tpadding: 10px 16px;\n\t}\n\t\n\t.header-left {\n\t\tgap: 10px;\n\t}\n\t\n\t.analysis-content > div.flex-1 {\n\t\theight: calc(100vh - 120px);\n\t}\n}\n</style> "],"names":["handle_promise","promise","info","token","update","type","index","key","value","child_ctx","block","needs_flush","i","group_outros","transition_out","check_outros","transition_in","flush","is_promise","current_component","get_current_component","set_current_component","error","update_await_block_branch","ctx","dirty","resolved","round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","b","h2","eq","isShort","hexParse","str","len","ret","alpha","a","f","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","r","g","d","max","rgb2hsl","min","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","obj","color","weight","c1","c2","w2","p","w1","val","noop","uid","id","isNullOrUndef","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNonPrimitive","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","vScale","_parsed","spanGaps","axis","minDefined","maxDefined","distanceToDefinedLo","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","replacer","getSizeForArea","scale","chartArea","field","getDatasetArea","getDatasetClipArea","clip","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","remain","duration","promises","rej","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","LineController","_dataset","reset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","startAngle","endAngle","getNearestCartesianItems","distanceMetric","minDistance","inRange","center","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","horizontal","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","total","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","entry","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element$1","_a","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","length","diff","reverseAlign","offsetFromEdge","edge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","Element","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","startPixel","endPixel","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","jlen","label","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart$1","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","visible","dataIndex","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","minY","maxY","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","borderWidth","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","legendItem","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","centerX","centerY","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_args","legend","ci","usePointStyle","pointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","curr","eventPrefix","events","useForwardEvents","getRef","destructors","forward","bubble","onMount","ref","listen","onDestroy","insert_hydration","anchor","clean","props2","data2","type2","options2","plugins2","children","$$scope","$$slots","rest","$$props","updateMode","canvasRef","ChartJS","afterUpdate","$$invalidate","$$value","svg","append_hydration","circle","t_value","safeMatchGroup","div","set_data","show_if","div4","div3","div0","div2","h3","div1","func","html_tag","raw_value","each_value_3","ensure_array_like","func_1","ul","li","each_value_2","func_2","func_3","create_if_block_3","toTableObjects","if_block","create_if_block_4","formatChartData","create_if_block_5","show_if_5","show_if_4","show_if_3","show_if_2","show_if_1","if_block6","create_if_block_2","create_if_block_16","create_if_block_1","create_if_block","button1","button1_disabled_value","div14","button0","div13","div12","div11","form","div10","div5","input_1","div9","div6","div8","div7","button2","each_blocks","regex","groupIndex","match","results","columns","records","rec","apiConfig","WEBUI_BASE_URL","messages","isLoading","isDownloading","isToggling","contentContainer","initApiConfig","handleResize","getApiConfig","i18n","handleSubmit","requestBody","requestHeaders","response","reader","decoder","buffer","done","newMessage","downloadWordReport","combinedContent","message","tableData","msg","blob","createDocxTemplateReport","filename","downloadDocxDocument","toggleSidebar","showSidebar"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}