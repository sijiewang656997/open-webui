{"version":3,"file":"AutoCompletion.js","sources":["../../../../src/lib/components/common/RichTextInput/AutoCompletion.js"],"sourcesContent":["/*\nHere we initialize the plugin with keyword mapping.\nIntended to handle user interactions seamlessly.\n\nObserve the keydown events for proactive suggestions.\nProvide a mechanism for accepting AI suggestions.\nEvaluate each input change with debounce logic.\nNext, we implement touch and mouse interactions.\n\nAnchor the user experience to intuitive behavior.\nIntelligently reset suggestions on new input.\n*/\n\nimport { Extension } from '@tiptap/core';\nimport { Plugin, PluginKey } from 'prosemirror-state';\n\nexport const AIAutocompletion = Extension.create({\n\tname: 'aiAutocompletion',\n\n\taddOptions() {\n\t\treturn {\n\t\t\tgenerateCompletion: () => Promise.resolve(''),\n\t\t\tdebounceTime: 1000\n\t\t};\n\t},\n\n\taddGlobalAttributes() {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttypes: ['paragraph'],\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: {\n\t\t\t\t\t\tdefault: null,\n\t\t\t\t\t\tparseHTML: (element) => element.getAttribute('class'),\n\t\t\t\t\t\trenderHTML: (attributes) => {\n\t\t\t\t\t\t\tif (!attributes.class) return {};\n\t\t\t\t\t\t\treturn { class: attributes.class };\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'data-prompt': {\n\t\t\t\t\t\tdefault: null,\n\t\t\t\t\t\tparseHTML: (element) => element.getAttribute('data-prompt'),\n\t\t\t\t\t\trenderHTML: (attributes) => {\n\t\t\t\t\t\t\tif (!attributes['data-prompt']) return {};\n\t\t\t\t\t\t\treturn { 'data-prompt': attributes['data-prompt'] };\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'data-suggestion': {\n\t\t\t\t\t\tdefault: null,\n\t\t\t\t\t\tparseHTML: (element) => element.getAttribute('data-suggestion'),\n\t\t\t\t\t\trenderHTML: (attributes) => {\n\t\t\t\t\t\t\tif (!attributes['data-suggestion']) return {};\n\t\t\t\t\t\t\treturn { 'data-suggestion': attributes['data-suggestion'] };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t},\n\n\taddProseMirrorPlugins() {\n\t\tlet debounceTimer = null;\n\t\tlet loading = false;\n\n\t\tlet touchStartX = 0;\n\t\tlet touchStartY = 0;\n\n\t\tlet isComposing = false;\n\n\t\tconst handleAICompletion = (view) => {\n\t\t\tconst { state, dispatch } = view;\n\t\t\tconst { selection } = state;\n\t\t\tconst { $head } = selection;\n\n\t\t\t// Start debounce logic for AI generation only if the cursor is at the end of the paragraph\n\t\t\tif (selection.empty && $head.pos === $head.end()) {\n\t\t\t\t// Set up debounce for AI generation\n\t\t\t\tif (this.options.debounceTime !== null) {\n\t\t\t\t\tclearTimeout(debounceTimer);\n\n\t\t\t\t\t// Capture current position\n\t\t\t\t\tconst currentPos = $head.before();\n\n\t\t\t\t\tdebounceTimer = setTimeout(() => {\n\t\t\t\t\t\tif (isComposing) return false;\n\n\t\t\t\t\t\tconst newState = view.state;\n\t\t\t\t\t\tconst newSelection = newState.selection;\n\t\t\t\t\t\tconst newNode = newState.doc.nodeAt(currentPos);\n\n\t\t\t\t\t\t// Check if the node still exists and is still a paragraph\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tnewNode &&\n\t\t\t\t\t\t\tnewNode.type.name === 'paragraph' &&\n\t\t\t\t\t\t\tnewSelection.$head.pos === newSelection.$head.end() &&\n\t\t\t\t\t\t\tnewSelection.$head.pos === currentPos + newNode.nodeSize - 1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst prompt = newNode.textContent;\n\n\t\t\t\t\t\t\tif (prompt.trim() !== '') {\n\t\t\t\t\t\t\t\tif (loading) return true;\n\t\t\t\t\t\t\t\tloading = true;\n\t\t\t\t\t\t\t\tthis.options\n\t\t\t\t\t\t\t\t\t.generateCompletion(prompt)\n\t\t\t\t\t\t\t\t\t.then((suggestion) => {\n\t\t\t\t\t\t\t\t\t\tif (suggestion && suggestion.trim() !== '') {\n\t\t\t\t\t\t\t\t\t\t\tif (view.state.selection.$head.pos === view.state.selection.$head.end()) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (view.state === newState) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tview.dispatch(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewState.tr.setNodeMarkup(currentPos, null, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...newNode.attrs,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass: 'ai-autocompletion',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'data-prompt': prompt,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'data-suggestion': suggestion\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\t\t\t\tloading = false;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this.options.debounceTime);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn [\n\t\t\tnew Plugin({\n\t\t\t\tkey: new PluginKey('aiAutocompletion'),\n\t\t\t\tprops: {\n\t\t\t\t\thandleKeyDown: (view, event) => {\n\t\t\t\t\t\tconst { state, dispatch } = view;\n\t\t\t\t\t\tconst { selection } = state;\n\t\t\t\t\t\tconst { $head } = selection;\n\n\t\t\t\t\t\tif ($head.parent.type.name !== 'paragraph') return false;\n\n\t\t\t\t\t\tconst node = $head.parent;\n\n\t\t\t\t\t\tif (event.key === 'Tab') {\n\t\t\t\t\t\t\t// if (!node.attrs['data-suggestion']) {\n\t\t\t\t\t\t\t//   // Generate completion\n\t\t\t\t\t\t\t//   if (loading) return true\n\t\t\t\t\t\t\t//   loading = true\n\t\t\t\t\t\t\t//   const prompt = node.textContent\n\t\t\t\t\t\t\t//   this.options.generateCompletion(prompt).then(suggestion => {\n\t\t\t\t\t\t\t//     if (suggestion && suggestion.trim() !== '') {\n\t\t\t\t\t\t\t//       dispatch(state.tr.setNodeMarkup($head.before(), null, {\n\t\t\t\t\t\t\t//         ...node.attrs,\n\t\t\t\t\t\t\t//         class: 'ai-autocompletion',\n\t\t\t\t\t\t\t//         'data-prompt': prompt,\n\t\t\t\t\t\t\t//         'data-suggestion': suggestion,\n\t\t\t\t\t\t\t//       }))\n\t\t\t\t\t\t\t//     }\n\t\t\t\t\t\t\t//     // If suggestion is empty or null, do nothing\n\t\t\t\t\t\t\t//   }).finally(() => {\n\t\t\t\t\t\t\t//     loading = false\n\t\t\t\t\t\t\t//   })\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\tif (node.attrs['data-suggestion']) {\n\t\t\t\t\t\t\t\t// Accept suggestion\n\t\t\t\t\t\t\t\tconst suggestion = node.attrs['data-suggestion'];\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tstate.tr.insertText(suggestion, $head.pos).setNodeMarkup($head.before(), null, {\n\t\t\t\t\t\t\t\t\t\t...node.attrs,\n\t\t\t\t\t\t\t\t\t\tclass: null,\n\t\t\t\t\t\t\t\t\t\t'data-prompt': null,\n\t\t\t\t\t\t\t\t\t\t'data-suggestion': null\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (node.attrs['data-suggestion']) {\n\t\t\t\t\t\t\t\t// Reset suggestion on any other key press\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tstate.tr.setNodeMarkup($head.before(), null, {\n\t\t\t\t\t\t\t\t\t\t...node.attrs,\n\t\t\t\t\t\t\t\t\t\tclass: null,\n\t\t\t\t\t\t\t\t\t\t'data-prompt': null,\n\t\t\t\t\t\t\t\t\t\t'data-suggestion': null\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\thandleAICompletion(view);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t},\n\t\t\t\t\thandleDOMEvents: {\n\t\t\t\t\t\tcompositionstart: () => {\n\t\t\t\t\t\t\tisComposing = true;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcompositionend: (view) => {\n\t\t\t\t\t\t\tisComposing = false;\n\t\t\t\t\t\t\thandleAICompletion(view);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttouchstart: (view, event) => {\n\t\t\t\t\t\t\ttouchStartX = event.touches[0].clientX;\n\t\t\t\t\t\t\ttouchStartY = event.touches[0].clientY;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttouchend: (view, event) => {\n\t\t\t\t\t\t\tconst touchEndX = event.changedTouches[0].clientX;\n\t\t\t\t\t\t\tconst touchEndY = event.changedTouches[0].clientY;\n\n\t\t\t\t\t\t\tconst deltaX = touchEndX - touchStartX;\n\t\t\t\t\t\t\tconst deltaY = touchEndY - touchStartY;\n\n\t\t\t\t\t\t\t// Check if the swipe was primarily horizontal and to the right\n\t\t\t\t\t\t\tif (Math.abs(deltaX) > Math.abs(deltaY) && deltaX > 50) {\n\t\t\t\t\t\t\t\tconst { state, dispatch } = view;\n\t\t\t\t\t\t\t\tconst { selection } = state;\n\t\t\t\t\t\t\t\tconst { $head } = selection;\n\t\t\t\t\t\t\t\tconst node = $head.parent;\n\n\t\t\t\t\t\t\t\tif (node.type.name === 'paragraph' && node.attrs['data-suggestion']) {\n\t\t\t\t\t\t\t\t\tconst suggestion = node.attrs['data-suggestion'];\n\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\tstate.tr.insertText(suggestion, $head.pos).setNodeMarkup($head.before(), null, {\n\t\t\t\t\t\t\t\t\t\t\t...node.attrs,\n\t\t\t\t\t\t\t\t\t\t\tclass: null,\n\t\t\t\t\t\t\t\t\t\t\t'data-prompt': null,\n\t\t\t\t\t\t\t\t\t\t\t'data-suggestion': null\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// Add mousedown behavior\n\t\t\t\t\t\t// mouseup: (view, event) => {\n\t\t\t\t\t\t// \tconst { state, dispatch } = view;\n\t\t\t\t\t\t// \tconst { selection } = state;\n\t\t\t\t\t\t// \tconst { $head } = selection;\n\t\t\t\t\t\t// \tconst node = $head.parent;\n\n\t\t\t\t\t\t// \t// Reset debounce timer on mouse click\n\t\t\t\t\t\t// \tclearTimeout(debounceTimer);\n\n\t\t\t\t\t\t// \t// If a suggestion exists and the cursor moves, remove the suggestion\n\t\t\t\t\t\t// \tif (\n\t\t\t\t\t\t// \t\tnode.type.name === 'paragraph' &&\n\t\t\t\t\t\t// \t\tnode.attrs['data-suggestion'] &&\n\t\t\t\t\t\t// \t\tview.state.selection.$head.pos !== view.state.selection.$head.end()\n\t\t\t\t\t\t// \t) {\n\t\t\t\t\t\t// \t\tdispatch(\n\t\t\t\t\t\t// \t\t\tstate.tr.setNodeMarkup($head.before(), null, {\n\t\t\t\t\t\t// \t\t\t\t...node.attrs,\n\t\t\t\t\t\t// \t\t\t\tclass: null,\n\t\t\t\t\t\t// \t\t\t\t'data-prompt': null,\n\t\t\t\t\t\t// \t\t\t\t'data-suggestion': null\n\t\t\t\t\t\t// \t\t\t})\n\t\t\t\t\t\t// \t\t);\n\t\t\t\t\t\t// \t}\n\n\t\t\t\t\t\t// \treturn false;\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tmouseup: (view, event) => {\n\t\t\t\t\t\t\tconst { state, dispatch } = view;\n\n\t\t\t\t\t\t\t// Reset debounce timer on mouse click\n\t\t\t\t\t\t\tclearTimeout(debounceTimer);\n\n\t\t\t\t\t\t\t// Iterate over all nodes in the document\n\t\t\t\t\t\t\tconst tr = state.tr;\n\t\t\t\t\t\t\tstate.doc.descendants((node, pos) => {\n\t\t\t\t\t\t\t\tif (node.type.name === 'paragraph' && node.attrs['data-suggestion']) {\n\t\t\t\t\t\t\t\t\t// Remove suggestion from this paragraph\n\t\t\t\t\t\t\t\t\ttr.setNodeMarkup(pos, null, {\n\t\t\t\t\t\t\t\t\t\t...node.attrs,\n\t\t\t\t\t\t\t\t\t\tclass: null,\n\t\t\t\t\t\t\t\t\t\t'data-prompt': null,\n\t\t\t\t\t\t\t\t\t\t'data-suggestion': null\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// Apply the transaction if any changes were made\n\t\t\t\t\t\t\tif (tr.docChanged) {\n\t\t\t\t\t\t\t\tdispatch(tr);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t];\n\t}\n});\n"],"names":[],"mappings":"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"}