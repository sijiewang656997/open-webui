{"version":3,"file":"Help.js","sources":["../../../../node_modules/bits-ui/dist/bits/menu/components/menu-sub.svelte","../../../../node_modules/bits-ui/dist/bits/menu/components/menu-sub-content.svelte","../../../../node_modules/bits-ui/dist/bits/menu/components/menu-sub-trigger.svelte","../../../../src/lib/components/chat/Tags.svelte","../../../../src/lib/components/icons/Link.svelte","../../../../src/lib/components/chat/ShareChatModal.svelte","../../../../src/lib/components/icons/PencilSquare.svelte","../../../../src/lib/apis/audio/index.ts","../../../../node_modules/paneforge/dist/components/pane-resizer.svelte","../../../../src/lib/apis/retrieval/index.ts","../../../../src/lib/apis/streaming/index.ts","../../../../src/lib/components/common/Banner.svelte","../../../../src/lib/utils/onedrive-file-picker.ts","../../../../src/lib/components/chat/MessageInput.svelte","../../../../src/lib/components/chat/ModelSelector.svelte","../../../../src/lib/components/icons/Map.svelte","../../../../src/lib/components/icons/AdjustmentsHorizontal.svelte","../../../../src/lib/components/icons/Cube.svelte","../../../../src/lib/components/layout/Navbar/Menu.svelte","../../../../src/lib/components/chat/Navbar.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/Handle/Handle.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/nodes/DefaultNode.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/nodes/InputNode.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/nodes/OutputNode.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/EdgeLabelRenderer/EdgeLabelRenderer.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/hooks/useHandleEdgeSelect.js","../../../../node_modules/@xyflow/svelte/dist/lib/components/EdgeLabel/EdgeLabel.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/BaseEdge/BaseEdge.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/edges/BezierEdgeInternal.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/edges/SmoothStepEdgeInternal.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/edges/StraightEdgeInternal.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/edges/StepEdgeInternal.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/store/utils.js","../../../../node_modules/@xyflow/svelte/dist/lib/store/initial-store.js","../../../../node_modules/@xyflow/svelte/dist/lib/store/visible-edges.js","../../../../node_modules/@xyflow/svelte/dist/lib/store/visible-nodes.js","../../../../node_modules/@xyflow/svelte/dist/lib/store/index.js","../../../../node_modules/@xyflow/svelte/dist/lib/container/Zoom/Zoom.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/container/Pane/Pane.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/container/Viewport/Viewport.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/NodeWrapper/utils.js","../../../../node_modules/@xyflow/svelte/dist/lib/components/NodeWrapper/NodeWrapper.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/container/NodeRenderer/NodeRenderer.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/EdgeWrapper/EdgeWrapper.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/CallOnMount/CallOnMount.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/container/EdgeRenderer/MarkerDefinition/MarkerDefinition.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/container/EdgeRenderer/MarkerDefinition/Marker.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/container/EdgeRenderer/EdgeRenderer.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/Selection/Selection.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/UserSelection/UserSelection.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/NodeSelection/NodeSelection.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/KeyHandler/KeyHandler.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/ConnectionLine/ConnectionLine.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/container/Panel/Panel.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/Attribution/Attribution.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/container/SvelteFlow/utils.js","../../../../node_modules/@xyflow/svelte/dist/lib/hooks/useColorModeClass.js","../../../../node_modules/@xyflow/svelte/dist/lib/container/SvelteFlow/SvelteFlow.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/components/SvelteFlowProvider/SvelteFlowProvider.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/plugins/Controls/ControlButton.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/plugins/Controls/Controls.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/plugins/Background/types.js","../../../../node_modules/@xyflow/svelte/dist/lib/plugins/Background/DotPattern.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/plugins/Background/LinePattern.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/plugins/Background/Background.svelte","../../../../node_modules/@xyflow/svelte/dist/lib/utils/index.js","../../../../node_modules/@xyflow/svelte/dist/lib/hooks/useSvelteFlow.js","../../../../node_modules/@xyflow/svelte/dist/lib/hooks/useInitialized.js","../../../../src/lib/components/chat/Controls/Valves.svelte","../../../../src/lib/components/chat/Controls/Controls.svelte","../../../../src/lib/components/chat/MessageInput/CallOverlay/VideoInputMenu.svelte","../../../../src/lib/components/chat/MessageInput/CallOverlay.svelte","../../../../src/lib/components/chat/Overview/Node.svelte","../../../../src/lib/components/chat/Overview/Flow.svelte","../../../../src/lib/components/icons/ArrowLeft.svelte","../../../../src/lib/components/chat/Overview.svelte","../../../../src/lib/components/icons/EllipsisVertical.svelte","../../../../src/lib/components/icons/ArrowsPointingOut.svelte","../../../../src/lib/components/chat/Artifacts.svelte","../../../../src/lib/components/chat/ChatControls.svelte","../../../../src/lib/components/chat/Placeholder.svelte","../../../../src/lib/components/chat/Chat.svelte","../../../../src/lib/components/chat/ShortcutsModal.svelte","../../../../src/lib/components/icons/QuestionMarkCircle.svelte","../../../../src/lib/components/icons/Keyboard.svelte","../../../../src/lib/components/layout/Help/HelpMenu.svelte","../../../../src/lib/components/layout/Help.svelte"],"sourcesContent":["<script>import { derived } from \"svelte/store\";\nimport { setSubMenuCtx } from \"../ctx.js\";\nexport let disabled = void 0;\nexport let open = void 0;\nexport let onOpenChange = void 0;\nconst {\n  updateOption,\n  ids,\n  states: { subOpen }\n} = setSubMenuCtx({\n  disabled,\n  onOpenChange: ({ next }) => {\n    if (open !== next) {\n      onOpenChange?.(next);\n      open = next;\n    }\n    return next;\n  }\n});\nconst idValues = derived([ids.menu, ids.trigger], ([$menuId, $triggerId]) => ({\n  menu: $menuId,\n  trigger: $triggerId\n}));\n$:\n  open !== void 0 && subOpen.set(open);\n$:\n  updateOption(\"disabled\", disabled);\n</script>\n\n<slot subIds={$idValues} />\n","<script>import { melt } from \"@melt-ui/svelte\";\nimport { createDispatcher } from \"../../../internal/index.js\";\nimport { getSubmenuCtx, updateSubPositioning } from \"../ctx.js\";\nexport let transition = void 0;\nexport let transitionConfig = void 0;\nexport let inTransition = void 0;\nexport let inTransitionConfig = void 0;\nexport let outTransition = void 0;\nexport let outTransitionConfig = void 0;\nexport let asChild = false;\nexport let id = void 0;\nexport let side = \"right\";\nexport let align = \"start\";\nexport let sideOffset = 0;\nexport let alignOffset = 0;\nexport let collisionPadding = 8;\nexport let avoidCollisions = true;\nexport let collisionBoundary = void 0;\nexport let sameWidth = false;\nexport let fitViewport = false;\nexport let strategy = \"absolute\";\nexport let overlap = false;\nexport let el = void 0;\nconst {\n  elements: { subMenu },\n  states: { subOpen },\n  ids,\n  getAttrs\n} = getSubmenuCtx();\nconst dispatch = createDispatcher();\nconst attrs = getAttrs(\"sub-content\");\n$:\n  if (id) {\n    ids.menu.set(id);\n  }\n$:\n  builder = $subMenu;\n$:\n  Object.assign(builder, attrs);\n$:\n  updateSubPositioning({\n    side,\n    align,\n    sideOffset,\n    alignOffset,\n    collisionPadding,\n    avoidCollisions,\n    collisionBoundary,\n    sameWidth,\n    fitViewport,\n    strategy,\n    overlap\n  });\n</script>\n\n{#if asChild && $subOpen}\n\t<slot {builder} />\n{:else if transition && $subOpen}\n\t<div\n\t\tbind:this={el}\n\t\ttransition:transition={transitionConfig}\n\t\t{...builder} use:builder.action\n\t\t{...$$restProps}\n\t\ton:m-focusout={dispatch}\n\t\ton:m-keydown={dispatch}\n\t\ton:m-pointermove={dispatch}\n\t>\n\t\t<slot {builder} />\n\t</div>\n{:else if inTransition && outTransition && $subOpen}\n\t<div\n\t\tbind:this={el}\n\t\tin:inTransition={inTransitionConfig}\n\t\tout:outTransition={outTransitionConfig}\n\t\t{...builder} use:builder.action\n\t\t{...$$restProps}\n\t\ton:m-focusout={dispatch}\n\t\ton:m-keydown={dispatch}\n\t\ton:m-pointermove={dispatch}\n\t>\n\t\t<slot {builder} />\n\t</div>\n{:else if inTransition && $subOpen}\n\t<div\n\t\tbind:this={el}\n\t\tin:inTransition={inTransitionConfig}\n\t\t{...builder} use:builder.action\n\t\t{...$$restProps}\n\t\ton:m-focusout={dispatch}\n\t\ton:m-keydown={dispatch}\n\t\ton:m-pointermove={dispatch}\n\t>\n\t\t<slot {builder} />\n\t</div>\n{:else if outTransition && $subOpen}\n\t<div\n\t\tbind:this={el}\n\t\tout:outTransition={outTransitionConfig}\n\t\t{...builder} use:builder.action\n\t\t{...$$restProps}\n\t\ton:m-focusout={dispatch}\n\t\ton:m-keydown={dispatch}\n\t\ton:m-pointermove={dispatch}\n\t>\n\t\t<slot {builder} />\n\t</div>\n{:else if $subOpen}\n\t<div\n\t\tbind:this={el}\n\t\t{...builder} use:builder.action\n\t\t{...$$restProps}\n\t\ton:m-focusout={dispatch}\n\t\ton:m-keydown={dispatch}\n\t\ton:m-pointermove={dispatch}\n\t>\n\t\t<slot {builder} />\n\t</div>\n{/if}\n","<script>import { melt } from \"@melt-ui/svelte\";\nimport { disabledAttrs } from \"../../../internal/index.js\";\nimport { getSubTrigger } from \"../ctx.js\";\nimport { createDispatcher } from \"../../../internal/events.js\";\nexport let disabled = false;\nexport let asChild = false;\nexport let id = void 0;\nexport let el = void 0;\nconst {\n  elements: { subTrigger },\n  ids,\n  getAttrs,\n  options\n} = getSubTrigger();\nconst { disabled: disabledStore } = options;\nconst dispatch = createDispatcher();\n$:\n  if (id) {\n    ids.trigger.set(id);\n  }\n$:\n  builder = $subTrigger;\n$:\n  attrs = {\n    ...getAttrs(\"sub-trigger\"),\n    ...disabledAttrs(disabled || $disabledStore)\n  };\n$:\n  Object.assign(builder, attrs);\n</script>\n\n{#if asChild}\n\t<slot {builder} />\n{:else}\n\t<div\n\t\tbind:this={el}\n\t\t{...builder} use:builder.action\n\t\t{...$$restProps}\n\t\ton:m-click={dispatch}\n\t\ton:m-focusin={dispatch}\n\t\ton:m-focusout={dispatch}\n\t\ton:m-keydown={dispatch}\n\t\ton:m-pointerleave={dispatch}\n\t\ton:m-pointermove={dispatch}\n\t>\n\t\t<slot {builder} />\n\t</div>\n{/if}\n","<script>\n\timport {\n\t\taddTagById,\n\t\tdeleteTagById,\n\t\tgetAllTags,\n\t\tgetChatList,\n\t\tgetChatListByTagName,\n\t\tgetTagsById,\n\t\tupdateChatById\n\t} from '$lib/apis/chats';\n\timport {\n\t\ttags as _tags,\n\t\tchats,\n\t\tpinnedChats,\n\t\tcurrentChatPage,\n\t\tscrollPaginationEnabled\n\t} from '$lib/stores';\n\timport { createEventDispatcher, onMount } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\timport Tags from '../common/Tags.svelte';\n\timport { toast } from 'svelte-sonner';\n\n\texport let chatId = '';\n\tlet tags = [];\n\n\tconst getTags = async () => {\n\t\treturn await getTagsById(localStorage.token, chatId).catch(async (error) => {\n\t\t\treturn [];\n\t\t});\n\t};\n\n\tconst addTag = async (tagName) => {\n\t\tconst res = await addTagById(localStorage.token, chatId, tagName).catch(async (error) => {\n\t\t\ttoast.error(`${error}`);\n\t\t\treturn null;\n\t\t});\n\t\tif (!res) {\n\t\t\treturn;\n\t\t}\n\n\t\ttags = await getTags();\n\t\tawait updateChatById(localStorage.token, chatId, {\n\t\t\ttags: tags\n\t\t});\n\n\t\tawait _tags.set(await getAllTags(localStorage.token));\n\t\tdispatch('add', {\n\t\t\tname: tagName\n\t\t});\n\t};\n\n\tconst deleteTag = async (tagName) => {\n\t\tconst res = await deleteTagById(localStorage.token, chatId, tagName);\n\t\ttags = await getTags();\n\t\tawait updateChatById(localStorage.token, chatId, {\n\t\t\ttags: tags\n\t\t});\n\n\t\tawait _tags.set(await getAllTags(localStorage.token));\n\t\tdispatch('delete', {\n\t\t\tname: tagName\n\t\t});\n\t};\n\n\tonMount(async () => {\n\t\tif (chatId) {\n\t\t\ttags = await getTags();\n\t\t}\n\t});\n</script>\n\n<Tags\n\t{tags}\n\ton:delete={(e) => {\n\t\tdeleteTag(e.detail);\n\t}}\n\ton:add={(e) => {\n\t\taddTag(e.detail);\n\t}}\n/>\n","<script lang=\"ts\">\n\texport let className = 'w-4 h-4';\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class={className}>\n\t<path\n\t\tfill-rule=\"evenodd\"\n\t\td=\"M8.914 6.025a.75.75 0 0 1 1.06 0 3.5 3.5 0 0 1 0 4.95l-2 2a3.5 3.5 0 0 1-5.396-4.402.75.75 0 0 1 1.251.827 2 2 0 0 0 3.085 2.514l2-2a2 2 0 0 0 0-2.828.75.75 0 0 1 0-1.06Z\"\n\t\tclip-rule=\"evenodd\"\n\t/>\n\t<path\n\t\tfill-rule=\"evenodd\"\n\t\td=\"M7.086 9.975a.75.75 0 0 1-1.06 0 3.5 3.5 0 0 1 0-4.95l2-2a3.5 3.5 0 0 1 5.396 4.402.75.75 0 0 1-1.251-.827 2 2 0 0 0-3.085-2.514l-2 2a2 2 0 0 0 0 2.828.75.75 0 0 1 0 1.06Z\"\n\t\tclip-rule=\"evenodd\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\timport { getContext, onMount } from 'svelte';\n\timport { models, config } from '$lib/stores';\n\n\timport { toast } from 'svelte-sonner';\n\timport { deleteSharedChatById, getChatById, shareChatById } from '$lib/apis/chats';\n\timport { copyToClipboard } from '$lib/utils';\n\n\timport Modal from '../common/Modal.svelte';\n\timport Link from '../icons/Link.svelte';\n\n\texport let chatId;\n\n\tlet chat = null;\n\tlet shareUrl = null;\n\tconst i18n = getContext('i18n');\n\n\tconst shareLocalChat = async () => {\n\t\tconst _chat = chat;\n\n\t\tconst sharedChat = await shareChatById(localStorage.token, chatId);\n\t\tshareUrl = `${window.location.origin}/s/${sharedChat.id}`;\n\t\tconsole.log(shareUrl);\n\t\tchat = await getChatById(localStorage.token, chatId);\n\n\t\treturn shareUrl;\n\t};\n\n\tconst shareChat = async () => {\n\t\tconst _chat = chat.chat;\n\t\tconsole.log('share', _chat);\n\n\t\ttoast.success($i18n.t('Redirecting you to Open WebUI Community'));\n\t\tconst url = 'https://openwebui.com';\n\t\t// const url = 'http://localhost:5173';\n\n\t\tconst tab = await window.open(`${url}/chats/upload`, '_blank');\n\t\twindow.addEventListener(\n\t\t\t'message',\n\t\t\t(event) => {\n\t\t\t\tif (event.origin !== url) return;\n\t\t\t\tif (event.data === 'loaded') {\n\t\t\t\t\ttab.postMessage(\n\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\tchat: _chat,\n\t\t\t\t\t\t\tmodels: $models.filter((m) => _chat.models.includes(m.id))\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t'*'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t};\n\n\texport let show = false;\n\n\tconst isDifferentChat = (_chat) => {\n\t\tif (!chat) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!_chat) {\n\t\t\treturn false;\n\t\t}\n\t\treturn chat.id !== _chat.id || chat.share_id !== _chat.share_id;\n\t};\n\n\t$: if (show) {\n\t\t(async () => {\n\t\t\tif (chatId) {\n\t\t\t\tconst _chat = await getChatById(localStorage.token, chatId);\n\t\t\t\tif (isDifferentChat(_chat)) {\n\t\t\t\t\tchat = _chat;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tchat = null;\n\t\t\t\tconsole.log(chat);\n\t\t\t}\n\t\t})();\n\t}\n</script>\n\n<Modal bind:show size=\"md\">\n\t<div>\n\t\t<div class=\" flex justify-between dark:text-gray-300 px-5 pt-4 pb-0.5\">\n\t\t\t<div class=\" text-lg font-medium self-center\">{$i18n.t('Share Chat')}</div>\n\t\t\t<button\n\t\t\t\tclass=\"self-center\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tshow = false;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\tclass=\"w-5 h-5\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</div>\n\n\t\t{#if chat}\n\t\t\t<div class=\"px-5 pt-4 pb-5 w-full flex flex-col justify-center\">\n\t\t\t\t<div class=\" text-sm dark:text-gray-300 mb-1\">\n\t\t\t\t\t{#if chat.share_id}\n\t\t\t\t\t\t<a href=\"/s/{chat.share_id}\" target=\"_blank\"\n\t\t\t\t\t\t\t>{$i18n.t('You have shared this chat')}\n\t\t\t\t\t\t\t<span class=\" underline\">{$i18n.t('before')}</span>.</a\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{$i18n.t('Click here to')}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"underline\"\n\t\t\t\t\t\t\ton:click={async () => {\n\t\t\t\t\t\t\t\tconst res = await deleteSharedChatById(localStorage.token, chatId);\n\n\t\t\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\t\t\tchat = await getChatById(localStorage.token, chatId);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>{$i18n.t('delete this link')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{$i18n.t('and create a new shared link.')}\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t{$i18n.t(\n\t\t\t\t\t\t\t\"Messages you send after creating your link won't be shared. Users with the URL will be able to view the shared chat.\"\n\t\t\t\t\t\t)}\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex justify-end\">\n\t\t\t\t\t<div class=\"flex flex-col items-end space-x-1 mt-3\">\n\t\t\t\t\t\t<div class=\"flex gap-1\">\n\t\t\t\t\t\t\t{#if $config?.features.enable_community_sharing}\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass=\"self-center flex items-center gap-1 px-3.5 py-2 text-sm font-medium bg-gray-100 hover:bg-gray-200 text-gray-800 dark:bg-gray-850 dark:text-white dark:hover:bg-gray-800 transition rounded-full\"\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\tshareChat();\n\t\t\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{$i18n.t('Share to Open WebUI Community')}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"self-center flex items-center gap-1 px-3.5 py-2 text-sm font-medium bg-black hover:bg-gray-900 text-white dark:bg-white dark:text-black dark:hover:bg-gray-100 transition rounded-full\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tid=\"copy-and-share-chat-button\"\n\t\t\t\t\t\t\t\ton:click={async () => {\n\t\t\t\t\t\t\t\t\tconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n\t\t\t\t\t\t\t\t\tif (isSafari) {\n\t\t\t\t\t\t\t\t\t\t// Oh, Safari, you're so special, let's give you some extra love and attention\n\t\t\t\t\t\t\t\t\t\tconsole.log('isSafari');\n\n\t\t\t\t\t\t\t\t\t\tconst getUrlPromise = async () => {\n\t\t\t\t\t\t\t\t\t\t\tconst url = await shareLocalChat();\n\t\t\t\t\t\t\t\t\t\t\treturn new Blob([url], { type: 'text/plain' });\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tnavigator.clipboard\n\t\t\t\t\t\t\t\t\t\t\t.write([\n\t\t\t\t\t\t\t\t\t\t\t\tnew ClipboardItem({\n\t\t\t\t\t\t\t\t\t\t\t\t\t'text/plain': getUrlPromise()\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Async: Copying to clipboard was successful!');\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.error('Async: Could not copy text: ', error);\n\t\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcopyToClipboard(await shareLocalChat());\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\ttoast.success($i18n.t('Copied shared chat URL to clipboard!'));\n\t\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Link />\n\n\t\t\t\t\t\t\t\t{#if chat.share_id}\n\t\t\t\t\t\t\t\t\t{$i18n.t('Update and Copy Link')}\n\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t{$i18n.t('Copy Link')}\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n</Modal>\n","<script lang=\"ts\">\n\texport let className = 'size-4';\n\texport let strokeWidth = '1.5';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tfill=\"none\"\n\tviewBox=\"0 0 24 24\"\n\tstroke-width={strokeWidth}\n\tstroke=\"currentColor\"\n\tclass={className}\n>\n\t<path\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t\td=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\"\n\t/>\n</svg>\n","import { AUDIO_API_BASE_URL } from '$lib/constants';\n\nexport const getAudioConfig = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/config`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\ntype OpenAIConfigForm = {\n\turl: string;\n\tkey: string;\n\tmodel: string;\n\tspeaker: string;\n};\n\nexport const updateAudioConfig = async (token: string, payload: OpenAIConfigForm) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/config/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...payload\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const transcribeAudio = async (token: string, file: File) => {\n\tconst data = new FormData();\n\tdata.append('file', file);\n\n\tlet error = null;\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/transcriptions`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: data\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const synthesizeOpenAISpeech = async (\n\ttoken: string = '',\n\tspeaker: string = 'alloy',\n\ttext: string = '',\n\tmodel?: string\n) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/speech`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tinput: text,\n\t\t\tvoice: speaker,\n\t\t\t...(model && { model })\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\ninterface AvailableModelsResponse {\n\tmodels: { name: string; id: string }[] | { id: string }[];\n}\n\nexport const getModels = async (token: string = ''): Promise<AvailableModelsResponse> => {\n\tlet error = null;\n\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/models`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getVoices = async (token: string = '') => {\n\tlet error = null;\n\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/voices`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n","<script>import {\n  getResizeHandleElementIndex,\n  getResizeHandleElementsForGroup\n} from \"../internal/paneforge.js\";\nimport { generateId, getCursorStyle, styleToString } from \"../internal/utils/index.js\";\nimport { onMount } from \"svelte\";\nimport { getCtx } from \"./ctx.js\";\nimport { resizeHandleAction } from \"./pane-resizer.js\";\nexport let disabled = false;\nexport let onDraggingChange = void 0;\nexport let tabIndex = 0;\nexport let el = null;\nexport let idFromProps = void 0;\nexport { idFromProps as id };\nexport let styleFromProps = void 0;\nexport { styleFromProps as style };\nconst {\n  methods: { registerResizeHandle, startDragging, stopDragging },\n  states: { direction, dragState, groupId }\n} = getCtx(\"PaneResizer\");\nconst resizeHandleId = generateId(idFromProps);\n$:\n  isDragging = $dragState?.dragHandleId === resizeHandleId;\nlet isFocused = false;\nlet resizeHandler = null;\nfunction stopDraggingAndBlur() {\n  const element = el;\n  if (!element)\n    return;\n  element.blur();\n  stopDragging();\n  onDraggingChange?.(false);\n}\nonMount(() => {\n  if (disabled) {\n    resizeHandler = null;\n  } else {\n    resizeHandler = registerResizeHandle(resizeHandleId);\n  }\n});\n$:\n  if (disabled) {\n    resizeHandler = null;\n  } else {\n    resizeHandler = registerResizeHandle(resizeHandleId);\n  }\nfunction handleKeydown(event) {\n  if (disabled || !resizeHandler || event.defaultPrevented)\n    return;\n  const resizeKeys = [\"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"End\", \"Home\"];\n  if (resizeKeys.includes(event.key)) {\n    event.preventDefault();\n    resizeHandler(event);\n    return;\n  }\n  if (event.key !== \"F6\")\n    return;\n  event.preventDefault();\n  const handles = getResizeHandleElementsForGroup($groupId);\n  const index = getResizeHandleElementIndex($groupId, resizeHandleId);\n  if (index === null)\n    return;\n  const nextIndex = event.shiftKey ? index > 0 ? index - 1 : handles.length - 1 : index + 1 < handles.length ? index + 1 : 0;\n  const nextHandle = handles[nextIndex];\n  nextHandle.focus();\n}\n$:\n  style = styleToString({\n    cursor: getCursorStyle($direction),\n    \"touch-action\": \"none\",\n    \"user-select\": \"none\",\n    \"-webkit-user-select\": \"none\",\n    \"-webkit-touch-callout\": \"none\"\n  }) + styleFromProps;\n$:\n  attrs = {\n    \"data-direction\": $direction,\n    \"data-pane-group-id\": $groupId,\n    \"data-active\": isDragging ? \"pointer\" : isFocused ? \"keyboard\" : void 0,\n    \"data-enabled\": !disabled,\n    \"data-pane-resizer-id\": resizeHandleId,\n    \"data-pane-resizer\": \"\"\n  };\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n<!-- eslint-disable-next-line svelte/valid-compile -->\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<div\n\tbind:this={el}\n\trole=\"separator\"\n\t{style}\n\tuse:resizeHandleAction={{\n\t\tdisabled,\n\t\tresizeHandler,\n\t\tstopDragging,\n\t\tisDragging,\n\t\tonDragging: onDraggingChange,\n\t}}\n\ton:keydown={handleKeydown}\n\ton:blur={() => (isFocused = false)}\n\ton:focus={() => (isFocused = true)}\n\ton:mousedown={(e) => {\n\t\te.preventDefault();\n\t\tstartDragging(resizeHandleId, e);\n\t\tonDraggingChange?.(true);\n\t}}\n\ton:mouseup={stopDraggingAndBlur}\n\ton:touchcancel={stopDraggingAndBlur}\n\ton:touchend={stopDraggingAndBlur}\n\ton:touchstart={(e) => {\n\t\te.preventDefault();\n\t\tstartDragging(resizeHandleId, e);\n\t\tonDraggingChange?.(true);\n\t}}\n\ttabindex={tabIndex}\n\t{...attrs}\n\t{...$$restProps}\n>\n\t<slot />\n</div>\n","import { RETRIEVAL_API_BASE_URL } from '$lib/constants';\n\nexport const getRAGConfig = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/config`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\ntype ChunkConfigForm = {\n\tchunk_size: number;\n\tchunk_overlap: number;\n};\n\ntype DocumentIntelligenceConfigForm = {\n\tkey: string;\n\tendpoint: string;\n};\n\ntype ContentExtractConfigForm = {\n\tengine: string;\n\ttika_server_url: string | null;\n\tdocument_intelligence_config: DocumentIntelligenceConfigForm | null;\n};\n\ntype YoutubeConfigForm = {\n\tlanguage: string[];\n\ttranslation?: string | null;\n\tproxy_url: string;\n};\n\ntype RAGConfigForm = {\n\tpdf_extract_images?: boolean;\n\tenable_google_drive_integration?: boolean;\n\tenable_onedrive_integration?: boolean;\n\tchunk?: ChunkConfigForm;\n\tcontent_extraction?: ContentExtractConfigForm;\n\tweb_loader_ssl_verification?: boolean;\n\tyoutube?: YoutubeConfigForm;\n};\n\nexport const updateRAGConfig = async (token: string, payload: RAGConfigForm) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/config/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...payload\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getRAGTemplate = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/template`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res?.template ?? '';\n};\n\nexport const getQuerySettings = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/query/settings`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\ntype QuerySettings = {\n\tk: number | null;\n\tr: number | null;\n\ttemplate: string | null;\n};\n\nexport const updateQuerySettings = async (token: string, settings: QuerySettings) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/query/settings/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...settings\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getEmbeddingConfig = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/embedding`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\ntype OpenAIConfigForm = {\n\tkey: string;\n\turl: string;\n};\n\ntype EmbeddingModelUpdateForm = {\n\topenai_config?: OpenAIConfigForm;\n\tembedding_engine: string;\n\tembedding_model: string;\n\tembedding_batch_size?: number;\n};\n\nexport const updateEmbeddingConfig = async (token: string, payload: EmbeddingModelUpdateForm) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/embedding/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...payload\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getRerankingConfig = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/reranking`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\ntype RerankingModelUpdateForm = {\n\treranking_model: string;\n};\n\nexport const updateRerankingConfig = async (token: string, payload: RerankingModelUpdateForm) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/reranking/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...payload\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport interface SearchDocument {\n\tstatus: boolean;\n\tcollection_name: string;\n\tfilenames: string[];\n}\n\nexport const processFile = async (\n\ttoken: string,\n\tfile_id: string,\n\tcollection_name: string | null = null\n) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/process/file`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tfile_id: file_id,\n\t\t\tcollection_name: collection_name ? collection_name : undefined\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const processYoutubeVideo = async (token: string, url: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/process/youtube`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\turl: url\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const processWeb = async (token: string, collection_name: string, url: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/process/web`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\turl: url,\n\t\t\tcollection_name: collection_name\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const processWebSearch = async (\n\ttoken: string,\n\tquery: string,\n\tcollection_name?: string\n): Promise<SearchDocument | null> => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/process/web/search`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tquery,\n\t\t\tcollection_name: collection_name ?? ''\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const queryDoc = async (\n\ttoken: string,\n\tcollection_name: string,\n\tquery: string,\n\tk: number | null = null\n) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/query/doc`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tcollection_name: collection_name,\n\t\t\tquery: query,\n\t\t\tk: k\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const queryCollection = async (\n\ttoken: string,\n\tcollection_names: string,\n\tquery: string,\n\tk: number | null = null\n) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/query/collection`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tcollection_names: collection_names,\n\t\t\tquery: query,\n\t\t\tk: k\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const resetUploadDir = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/reset/uploads`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const resetVectorDB = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${RETRIEVAL_API_BASE_URL}/reset/db`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n","import { EventSourceParserStream } from 'eventsource-parser/stream';\nimport type { ParsedEvent } from 'eventsource-parser';\n\ntype TextStreamUpdate = {\n\tdone: boolean;\n\tvalue: string;\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tsources?: any;\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tselectedModelId?: any;\n\terror?: any;\n\tusage?: ResponseUsage;\n};\n\ntype ResponseUsage = {\n\t/** Including images and tools if any */\n\tprompt_tokens: number;\n\t/** The tokens generated */\n\tcompletion_tokens: number;\n\t/** Sum of the above two fields */\n\ttotal_tokens: number;\n\t/** Any other fields that aren't part of the base OpenAI spec */\n\t[other: string]: unknown;\n};\n\n// createOpenAITextStream takes a responseBody with a SSE response,\n// and returns an async generator that emits delta updates with large deltas chunked into random sized chunks\nexport async function createOpenAITextStream(\n\tresponseBody: ReadableStream<Uint8Array>,\n\tsplitLargeDeltas: boolean\n): Promise<AsyncGenerator<TextStreamUpdate>> {\n\tconst eventStream = responseBody\n\t\t.pipeThrough(new TextDecoderStream())\n\t\t.pipeThrough(new EventSourceParserStream())\n\t\t.getReader();\n\tlet iterator = openAIStreamToIterator(eventStream);\n\tif (splitLargeDeltas) {\n\t\titerator = streamLargeDeltasAsRandomChunks(iterator);\n\t}\n\treturn iterator;\n}\n\nasync function* openAIStreamToIterator(\n\treader: ReadableStreamDefaultReader<ParsedEvent>\n): AsyncGenerator<TextStreamUpdate> {\n\twhile (true) {\n\t\tconst { value, done } = await reader.read();\n\t\tif (done) {\n\t\t\tyield { done: true, value: '' };\n\t\t\tbreak;\n\t\t}\n\t\tif (!value) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst data = value.data;\n\t\tif (data.startsWith('[DONE]')) {\n\t\t\tyield { done: true, value: '' };\n\t\t\tbreak;\n\t\t}\n\n\t\ttry {\n\t\t\tconst parsedData = JSON.parse(data);\n\t\t\tconsole.log(parsedData);\n\n\t\t\tif (parsedData.error) {\n\t\t\t\tyield { done: true, value: '', error: parsedData.error };\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (parsedData.sources) {\n\t\t\t\tyield { done: false, value: '', sources: parsedData.sources };\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (parsedData.selected_model_id) {\n\t\t\t\tyield { done: false, value: '', selectedModelId: parsedData.selected_model_id };\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (parsedData.usage) {\n\t\t\t\tyield { done: false, value: '', usage: parsedData.usage };\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tyield {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: parsedData.choices?.[0]?.delta?.content ?? ''\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tconsole.error('Error extracting delta from SSE event:', e);\n\t\t}\n\t}\n}\n\n// streamLargeDeltasAsRandomChunks will chunk large deltas (length > 5) into random sized chunks between 1-3 characters\n// This is to simulate a more fluid streaming, even though some providers may send large chunks of text at once\nasync function* streamLargeDeltasAsRandomChunks(\n\titerator: AsyncGenerator<TextStreamUpdate>\n): AsyncGenerator<TextStreamUpdate> {\n\tfor await (const textStreamUpdate of iterator) {\n\t\tif (textStreamUpdate.done) {\n\t\t\tyield textStreamUpdate;\n\t\t\treturn;\n\t\t}\n\n\t\tif (textStreamUpdate.error) {\n\t\t\tyield textStreamUpdate;\n\t\t\tcontinue;\n\t\t}\n\t\tif (textStreamUpdate.sources) {\n\t\t\tyield textStreamUpdate;\n\t\t\tcontinue;\n\t\t}\n\t\tif (textStreamUpdate.selectedModelId) {\n\t\t\tyield textStreamUpdate;\n\t\t\tcontinue;\n\t\t}\n\t\tif (textStreamUpdate.usage) {\n\t\t\tyield textStreamUpdate;\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet content = textStreamUpdate.value;\n\t\tif (content.length < 5) {\n\t\t\tyield { done: false, value: content };\n\t\t\tcontinue;\n\t\t}\n\t\twhile (content != '') {\n\t\t\tconst chunkSize = Math.min(Math.floor(Math.random() * 3) + 1, content.length);\n\t\t\tconst chunk = content.slice(0, chunkSize);\n\t\t\tyield { done: false, value: chunk };\n\t\t\t// Do not sleep if the tab is hidden\n\t\t\t// Timers are throttled to 1s in hidden tabs\n\t\t\tif (document?.visibilityState !== 'hidden') {\n\t\t\t\tawait sleep(5);\n\t\t\t}\n\t\t\tcontent = content.slice(chunkSize);\n\t\t}\n\t}\n}\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n","<script lang=\"ts\">\n\timport type { Banner } from '$lib/types';\n\timport { onMount, createEventDispatcher } from 'svelte';\n\timport { fade } from 'svelte/transition';\n\timport DOMPurify from 'dompurify';\n\timport { marked } from 'marked';\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let banner: Banner = {\n\t\tid: '',\n\t\ttype: 'info',\n\t\ttitle: '',\n\t\tcontent: '',\n\t\turl: '',\n\t\tdismissable: true,\n\t\ttimestamp: Math.floor(Date.now() / 1000)\n\t};\n\n\texport let dismissed = false;\n\n\tlet mounted = false;\n\n\tconst classNames: Record<string, string> = {\n\t\tinfo: 'bg-blue-500/20 text-blue-700 dark:text-blue-200 ',\n\t\tsuccess: 'bg-green-500/20 text-green-700 dark:text-green-200',\n\t\twarning: 'bg-yellow-500/20 text-yellow-700 dark:text-yellow-200',\n\t\terror: 'bg-red-500/20 text-red-700 dark:text-red-200'\n\t};\n\n\tconst dismiss = (id) => {\n\t\tdismissed = true;\n\t\tdispatch('dismiss', id);\n\t};\n\n\tonMount(() => {\n\t\tmounted = true;\n\t});\n</script>\n\n{#if !dismissed}\n\t{#if mounted}\n\t\t<div\n\t\t\tclass=\" top-0 left-0 right-0 p-2 mx-4 px-3 flex justify-center items-center relative rounded-xl border border-gray-100 dark:border-gray-850 text-gray-800 dark:text-gary-100 bg-white dark:bg-gray-900 backdrop-blur-xl z-30\"\n\t\t\ttransition:fade={{ delay: 100, duration: 300 }}\n\t\t>\n\t\t\t<div class=\" flex flex-col md:flex-row md:items-center flex-1 text-sm w-fit gap-1.5\">\n\t\t\t\t<div class=\"flex justify-between self-start\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\" text-xs font-bold {classNames[banner.type] ??\n\t\t\t\t\t\t\tclassNames['info']}  w-fit px-2 rounded-sm uppercase line-clamp-1 mr-0.5\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{banner.type}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{#if banner.url}\n\t\t\t\t\t\t<div class=\"flex md:hidden group w-fit md:items-center\">\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclass=\"text-gray-700 dark:text-white text-xs font-semibold underline\"\n\t\t\t\t\t\t\t\thref=\"/assets/files/whitepaper.pdf\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\">Learn More</a\n\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" ml-1 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-white\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\tclass=\"w-4 h-4\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\td=\"M4.22 11.78a.75.75 0 0 1 0-1.06L9.44 5.5H5.75a.75.75 0 0 1 0-1.5h5.5a.75.75 0 0 1 .75.75v5.5a.75.75 0 0 1-1.5 0V6.56l-5.22 5.22a.75.75 0 0 1-1.06 0Z\"\n\t\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex-1 text-xs text-gray-700 dark:text-white\">\n\t\t\t\t\t{@html marked.parse(DOMPurify.sanitize(banner.content))}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{#if banner.url}\n\t\t\t\t<div class=\"hidden md:flex group w-fit md:items-center\">\n\t\t\t\t\t<a\n\t\t\t\t\t\tclass=\"text-gray-700 dark:text-white text-xs font-semibold underline\"\n\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\ttarget=\"_blank\">Learn More</a\n\t\t\t\t\t>\n\n\t\t\t\t\t<div class=\" ml-1 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-white\">\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\tclass=\"size-4\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\td=\"M4.22 11.78a.75.75 0 0 1 0-1.06L9.44 5.5H5.75a.75.75 0 0 1 0-1.5h5.5a.75.75 0 0 1 .75.75v5.5a.75.75 0 0 1-1.5 0V6.56l-5.22 5.22a.75.75 0 0 1-1.06 0Z\"\n\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t<div class=\"flex self-start\">\n\t\t\t\t{#if banner.dismissible}\n\t\t\t\t\t<button\n\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\tdismiss(banner.id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclass=\"  -mt-1 -mb-2 -translate-y-[1px] ml-1.5 mr-1 text-gray-400 dark:hover:text-white\"\n\t\t\t\t\t\t>&times;</button\n\t\t\t\t\t>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n{/if}\n","import { v4 as uuidv4 } from 'uuid';\n\nlet CLIENT_ID = '';\n\nasync function getCredentials() {\n\tif (CLIENT_ID) return;\n\tconst response = await fetch('/api/config');\n\tif (!response.ok) {\n\t\tthrow new Error('Failed to fetch OneDrive credentials');\n\t}\n\tconst config = await response.json();\n\tCLIENT_ID = config.onedrive?.client_id;\n\tif (!CLIENT_ID) {\n\t\tthrow new Error('OneDrive client ID not configured');\n\t}\n}\n\nfunction loadMsalScript(): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst win = window;\n\t\tif (win.msal) {\n\t\t\tresolve();\n\t\t\treturn;\n\t\t}\n\t\tconst script = document.createElement('script');\n\t\tscript.src = 'https://alcdn.msauth.net/browser/2.19.0/js/msal-browser.min.js';\n\t\tscript.async = true;\n\t\tscript.onload = () => resolve();\n\t\tscript.onerror = () => reject(new Error('Failed to load MSAL script'));\n\t\tdocument.head.appendChild(script);\n\t});\n}\n\nlet msalInstance: any;\n\n// Initialize MSAL authentication\nasync function initializeMsal() {\n\tif (!CLIENT_ID) {\n\t\tawait getCredentials();\n\t}\n\tconst msalParams = {\n\t\tauth: {\n\t\t\tauthority: 'https://login.microsoftonline.com/consumers',\n\t\t\tclientId: CLIENT_ID\n\t\t}\n\t};\n\ttry {\n\t\tawait loadMsalScript();\n\t\tconst win = window;\n\t\tmsalInstance = new win.msal.PublicClientApplication(msalParams);\n\t\tif (msalInstance.initialize) {\n\t\t\tawait msalInstance.initialize();\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('MSAL initialization error:', error);\n\t}\n}\n\n// Retrieve OneDrive access token\nasync function getToken(): Promise<string> {\n\tconst authParams = { scopes: ['OneDrive.ReadWrite'] };\n\tlet accessToken = '';\n\ttry {\n\t\tawait initializeMsal();\n\t\tconst resp = await msalInstance.acquireTokenSilent(authParams);\n\t\taccessToken = resp.accessToken;\n\t} catch (err) {\n\t\tconst resp = await msalInstance.loginPopup(authParams);\n\t\tmsalInstance.setActiveAccount(resp.account);\n\t\tif (resp.idToken) {\n\t\t\tconst resp2 = await msalInstance.acquireTokenSilent(authParams);\n\t\t\taccessToken = resp2.accessToken;\n\t\t}\n\t}\n\treturn accessToken;\n}\n\nconst baseUrl = 'https://onedrive.live.com/picker';\nconst params = {\n\tsdk: '8.0',\n\tentry: {\n\t\toneDrive: {\n\t\t\tfiles: {}\n\t\t}\n\t},\n\tauthentication: {},\n\tmessaging: {\n\t\torigin: window?.location?.origin,\n\t\tchannelId: uuidv4()\n\t},\n\ttypesAndSources: {\n\t\tmode: 'files',\n\t\tpivots: {\n\t\t\toneDrive: true,\n\t\t\trecent: true\n\t\t}\n\t}\n};\n\n// Download file from OneDrive\nasync function downloadOneDriveFile(fileInfo: any): Promise<Blob> {\n\tconst accessToken = await getToken();\n\tif (!accessToken) {\n\t\tthrow new Error('Unable to retrieve OneDrive access token.');\n\t}\n\tconst fileInfoUrl = `${fileInfo['@sharePoint.endpoint']}/drives/${fileInfo.parentReference.driveId}/items/${fileInfo.id}`;\n\tconst response = await fetch(fileInfoUrl, {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${accessToken}`\n\t\t}\n\t});\n\tif (!response.ok) {\n\t\tthrow new Error('Failed to fetch file information.');\n\t}\n\tconst fileData = await response.json();\n\tconst downloadUrl = fileData['@content.downloadUrl'];\n\tconst downloadResponse = await fetch(downloadUrl);\n\tif (!downloadResponse.ok) {\n\t\tthrow new Error('Failed to download file.');\n\t}\n\treturn await downloadResponse.blob();\n}\n\n// Open OneDrive file picker and return selected file metadata\nexport async function openOneDrivePicker(): Promise<any | null> {\n\tif (typeof window === 'undefined') {\n\t\tthrow new Error('Not in browser environment');\n\t}\n\treturn new Promise((resolve, reject) => {\n\t\tlet pickerWindow: Window | null = null;\n\t\tlet channelPort: MessagePort | null = null;\n\n\t\tconst handleWindowMessage = (event: MessageEvent) => {\n\t\t\tif (event.source !== pickerWindow) return;\n\t\t\tconst message = event.data;\n\t\t\tif (message?.type === 'initialize' && message?.channelId === params.messaging.channelId) {\n\t\t\t\tchannelPort = event.ports?.[0];\n\t\t\t\tif (!channelPort) return;\n\t\t\t\tchannelPort.addEventListener('message', handlePortMessage);\n\t\t\t\tchannelPort.start();\n\t\t\t\tchannelPort.postMessage({ type: 'activate' });\n\t\t\t}\n\t\t};\n\n\t\tconst handlePortMessage = async (portEvent: MessageEvent) => {\n\t\t\tconst portData = portEvent.data;\n\t\t\tswitch (portData.type) {\n\t\t\t\tcase 'notification':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'command': {\n\t\t\t\t\tchannelPort?.postMessage({ type: 'acknowledge', id: portData.id });\n\t\t\t\t\tconst command = portData.data;\n\t\t\t\t\tswitch (command.command) {\n\t\t\t\t\t\tcase 'authenticate': {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst newToken = await getToken();\n\t\t\t\t\t\t\t\tif (newToken) {\n\t\t\t\t\t\t\t\t\tchannelPort?.postMessage({\n\t\t\t\t\t\t\t\t\t\ttype: 'result',\n\t\t\t\t\t\t\t\t\t\tid: portData.id,\n\t\t\t\t\t\t\t\t\t\tdata: { result: 'token', token: newToken }\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new Error('Could not retrieve auth token');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\t\tchannelPort?.postMessage({\n\t\t\t\t\t\t\t\t\tresult: 'error',\n\t\t\t\t\t\t\t\t\terror: { code: 'tokenError', message: 'Failed to get token' },\n\t\t\t\t\t\t\t\t\tisExpected: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'close': {\n\t\t\t\t\t\t\tcleanup();\n\t\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'pick': {\n\t\t\t\t\t\t\tchannelPort?.postMessage({\n\t\t\t\t\t\t\t\ttype: 'result',\n\t\t\t\t\t\t\t\tid: portData.id,\n\t\t\t\t\t\t\t\tdata: { result: 'success' }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcleanup();\n\t\t\t\t\t\t\tresolve(command);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tconsole.warn('Unsupported command:', command);\n\t\t\t\t\t\t\tchannelPort?.postMessage({\n\t\t\t\t\t\t\t\tresult: 'error',\n\t\t\t\t\t\t\t\terror: { code: 'unsupportedCommand', message: command.command },\n\t\t\t\t\t\t\t\tisExpected: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfunction cleanup() {\n\t\t\twindow.removeEventListener('message', handleWindowMessage);\n\t\t\tif (channelPort) {\n\t\t\t\tchannelPort.removeEventListener('message', handlePortMessage);\n\t\t\t}\n\t\t\tif (pickerWindow) {\n\t\t\t\tpickerWindow.close();\n\t\t\t\tpickerWindow = null;\n\t\t\t}\n\t\t}\n\n\t\tconst initializePicker = async () => {\n\t\t\ttry {\n\t\t\t\tconst authToken = await getToken();\n\t\t\t\tif (!authToken) {\n\t\t\t\t\treturn reject(new Error('Failed to acquire access token'));\n\t\t\t\t}\n\t\t\t\tpickerWindow = window.open('', 'OneDrivePicker', 'width=800,height=600');\n\t\t\t\tif (!pickerWindow) {\n\t\t\t\t\treturn reject(new Error('Failed to open OneDrive picker window'));\n\t\t\t\t}\n\t\t\t\tconst queryString = new URLSearchParams({\n\t\t\t\t\tfilePicker: JSON.stringify(params)\n\t\t\t\t});\n\t\t\t\tconst url = `${baseUrl}?${queryString.toString()}`;\n\t\t\t\tconst form = pickerWindow.document.createElement('form');\n\t\t\t\tform.setAttribute('action', url);\n\t\t\t\tform.setAttribute('method', 'POST');\n\t\t\t\tconst input = pickerWindow.document.createElement('input');\n\t\t\t\tinput.setAttribute('type', 'hidden');\n\t\t\t\tinput.setAttribute('name', 'access_token');\n\t\t\t\tinput.setAttribute('value', authToken);\n\t\t\t\tform.appendChild(input);\n\t\t\t\tpickerWindow.document.body.appendChild(form);\n\t\t\t\tform.submit();\n\t\t\t\twindow.addEventListener('message', handleWindowMessage);\n\t\t\t} catch (err) {\n\t\t\t\tif (pickerWindow) pickerWindow.close();\n\t\t\t\treject(err);\n\t\t\t}\n\t\t};\n\n\t\tinitializePicker();\n\t});\n}\n\n// Pick and download file from OneDrive\nexport async function pickAndDownloadFile(): Promise<{ blob: Blob; name: string } | null> {\n\ttry {\n\t\tconst pickerResult = await openOneDrivePicker();\n\t\tif (!pickerResult || !pickerResult.items || pickerResult.items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tconst selectedFile = pickerResult.items[0];\n\t\tconst blob = await downloadOneDriveFile(selectedFile);\n\t\treturn { blob, name: selectedFile.name };\n\t} catch (error) {\n\t\tconsole.error('Error occurred during OneDrive file pick/download:', error);\n\t\tthrow error;\n\t}\n}\n\nexport { downloadOneDriveFile };\n","<script lang=\"ts\">\n\timport { toast } from 'svelte-sonner';\n\timport { v4 as uuidv4 } from 'uuid';\n\timport * as XLSX from 'xlsx';\n\timport { createPicker, getAuthToken } from '$lib/utils/google-drive-picker';\n\timport { pickAndDownloadFile } from '$lib/utils/onedrive-file-picker';\n\n\timport { onMount, tick, getContext, createEventDispatcher, onDestroy } from 'svelte';\n\tconst dispatch = createEventDispatcher();\n\n\timport {\n\t\ttype Model,\n\t\tmobile,\n\t\tsettings,\n\t\tshowSidebar,\n\t\tmodels,\n\t\tconfig,\n\t\tshowCallOverlay,\n\t\ttools,\n\t\tuser as _user,\n\t\tshowControls,\n\t\tTTSWorker\n\t} from '$lib/stores';\n\n\timport { blobToFile, compressImage, createMessagesList, findWordIndices } from '$lib/utils';\n\timport { transcribeAudio } from '$lib/apis/audio';\n\timport { uploadFile } from '$lib/apis/files';\n\timport { generateAutoCompletion } from '$lib/apis';\n\timport { deleteFileById } from '$lib/apis/files';\n\n\timport { WEBUI_BASE_URL, WEBUI_API_BASE_URL, PASTED_TEXT_CHARACTER_LIMIT } from '$lib/constants';\n\n\timport InputMenu from './MessageInput/InputMenu.svelte';\n\timport VoiceRecording from './MessageInput/VoiceRecording.svelte';\n\timport FilesOverlay from './MessageInput/FilesOverlay.svelte';\n\timport Commands from './MessageInput/Commands.svelte';\n\n\timport RichTextInput from '../common/RichTextInput.svelte';\n\timport Tooltip from '../common/Tooltip.svelte';\n\timport FileItem from '../common/FileItem.svelte';\n\timport Image from '../common/Image.svelte';\n\n\timport XMark from '../icons/XMark.svelte';\n\timport Headphone from '../icons/Headphone.svelte';\n\timport GlobeAlt from '../icons/GlobeAlt.svelte';\n\timport PhotoSolid from '../icons/PhotoSolid.svelte';\n\timport Photo from '../icons/Photo.svelte';\n\timport CommandLine from '../icons/CommandLine.svelte';\n\timport { KokoroWorker } from '$lib/workers/KokoroWorker';\n\n\tconst i18n = getContext('i18n');\n\n\t// ADD THE HELPER FUNCTION HERE, right after imports and before component props\n\tfunction isExcelFile(file) {\n\t\tconst excelTypes = [\n\t\t\t'application/vnd.ms-excel',\n\t\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t'application/vnd.oasis.opendocument.spreadsheet',\n\t\t\t'text/csv'\n\t\t];\n\t\t\n\t\tconst excelExtensions = ['.xls', '.xlsx', '.csv', '.ods'];\n\t\t\n\t\treturn (\n\t\t\t(file.file && excelTypes.includes(file.file.type)) ||\n\t\t\t(file.name && excelExtensions.some(ext => file.name.toLowerCase().endsWith(ext)))\n\t\t);\n\t}\n\n\texport let transparentBackground = false;\n\n\texport let onChange: Function = () => {};\n\texport let createMessagePair: Function;\n\texport let stopResponse: Function;\n\n\texport let autoScroll = false;\n\n\texport let atSelectedModel: Model | undefined = undefined;\n\texport let selectedModels: [''];\n\n\tlet selectedModelIds = [];\n\t$: selectedModelIds = atSelectedModel !== undefined ? [atSelectedModel.id] : selectedModels;\n\n\texport let history;\n\n\texport let prompt = '';\n\texport let files = [];\n\n\texport let selectedToolIds = [];\n\n\texport let imageGenerationEnabled = false;\n\texport let webSearchEnabled = false;\n\texport let codeInterpreterEnabled = false;\n\n\t$: onChange({\n\t\tprompt,\n\t\tfiles,\n\t\tselectedToolIds,\n\t\timageGenerationEnabled,\n\t\twebSearchEnabled\n\t});\n\n\tlet loaded = false;\n\tlet recording = false;\n\n\tlet chatInputContainerElement;\n\tlet chatInputElement;\n\n\tlet filesInputElement;\n\tlet commandsElement;\n\n\tlet inputFiles;\n\tlet dragged = false;\n\n\tlet user = null;\n\texport let placeholder = '';\n\n\tlet visionCapableModels = [];\n\t$: visionCapableModels = [...(atSelectedModel ? [atSelectedModel] : selectedModels)].filter(\n\t\t(model) => $models.find((m) => m.id === model)?.info?.meta?.capabilities?.vision ?? true\n\t);\n\n\tconst scrollToBottom = () => {\n\t\tconst element = document.getElementById('messages-container');\n\t\telement.scrollTo({\n\t\t\ttop: element.scrollHeight,\n\t\t\tbehavior: 'smooth'\n\t\t});\n\t};\n\n\tconst screenCaptureHandler = async () => {\n\t\ttry {\n\t\t\t// Request screen media\n\t\t\tconst mediaStream = await navigator.mediaDevices.getDisplayMedia({\n\t\t\t\tvideo: { cursor: 'never' },\n\t\t\t\taudio: false\n\t\t\t});\n\t\t\t// Once the user selects a screen, temporarily create a video element\n\t\t\tconst video = document.createElement('video');\n\t\t\tvideo.srcObject = mediaStream;\n\t\t\t// Ensure the video loads without affecting user experience or tab switching\n\t\t\tawait video.play();\n\t\t\t// Set up the canvas to match the video dimensions\n\t\t\tconst canvas = document.createElement('canvas');\n\t\t\tcanvas.width = video.videoWidth;\n\t\t\tcanvas.height = video.videoHeight;\n\t\t\t// Grab a single frame from the video stream using the canvas\n\t\t\tconst context = canvas.getContext('2d');\n\t\t\tcontext.drawImage(video, 0, 0, canvas.width, canvas.height);\n\t\t\t// Stop all video tracks (stop screen sharing) after capturing the image\n\t\t\tmediaStream.getTracks().forEach((track) => track.stop());\n\n\t\t\t// bring back focus to this current tab, so that the user can see the screen capture\n\t\t\twindow.focus();\n\n\t\t\t// Convert the canvas to a Base64 image URL\n\t\t\tconst imageUrl = canvas.toDataURL('image/png');\n\t\t\t// Add the captured image to the files array to render it\n\t\t\tfiles = [...files, { type: 'image', url: imageUrl }];\n\t\t\t// Clean memory: Clear video srcObject\n\t\t\tvideo.srcObject = null;\n\t\t} catch (error) {\n\t\t\t// Handle any errors (e.g., user cancels screen sharing)\n\t\t\tconsole.error('Error capturing screen:', error);\n\t\t}\n\t};\n\n\t// Modified code for uploadFileHandler\n\tconst uploadFileHandler = async (file, fullContext = false) => {\n\t\t// Permission check remains the same\n\t\t\n\t\t// Determine if file is Excel\n\t\tconst fileExtension = '.' + file.name.split('.').pop().toLowerCase();\n\t\tconst isExcel = (\n\t\t\tfile.type.startsWith('application/vnd.ms-excel') || \n\t\t\tfile.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||\n\t\t\tfileExtension === '.xlsx' || \n\t\t\tfileExtension === '.xls' || \n\t\t\tfileExtension === '.csv'\n\t\t);\n\t\t\n\t\t// Create file item\n\t\tconst tempItemId = uuidv4();\n\t\tconst fileItem = {\n\t\t\ttype: isExcel ? 'excel' : 'file',\n\t\t\tfile: '',\n\t\t\tid: null,\n\t\t\turl: '',\n\t\t\tname: file.name,\n\t\t\tcollection_name: '',\n\t\t\tstatus: 'uploading',\n\t\t\tsize: file.size,\n\t\t\terror: '',\n\t\t\titemId: tempItemId,\n\t\t\tconversionResult: null, \n\t\t\t...(fullContext ? { context: 'full' } : {})\n\t\t};\n\n\t\tif (fileItem.size == 0) {\n\t\t\ttoast.error($i18n.t('You cannot upload an empty file.'));\n\t\t\treturn null;\n\t\t}\n\n\t\tfiles = [...files, fileItem];\n\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('file', file);\n\t\t\t\n\t\t\t// Process Excel files\n\t\t\tif (isExcel) {\n\t\t\t\tconsole.log('Processing Excel file:', file.name, 'Size:', file.size);\n\t\t\t\t// Extract Excel metadata first\n\t\t\t\tlet excelMetadata = null;\n\t\t\t\ttry {\n\t\t\t\t\texcelMetadata = await extractExcelMetadata(file);\n\t\t\t\t\tformData.append('metadata', JSON.stringify({\n\t\t\t\t\t\tsheetNames: excelMetadata.sheetNames,\n\t\t\t\t\t\trowCount: excelMetadata.rowCount,\n\t\t\t\t\t\tcolumnCount: excelMetadata.columnCount,\n\t\t\t\t\t\theaders: excelMetadata.headers,\n\t\t\t\t\t\tpreviewData: excelMetadata.previewData\n\t\t\t\t\t}));\n\t\t\t\t\tconsole.log('Excel metadata extracted successfully', excelMetadata);\n\t\t\t\t} catch (metadataError) {\n\t\t\t\t\tconsole.error('Failed to extract Excel metadata:', metadataError);\n\t\t\t\t}\n\n\t\t\t\tconsole.log('FormData 内容:', Array.from(formData.entries()).map(([k, v]) => ({\n\t\t\t\t\t\tkey: k,\n\t\t\t\t\t\tvalue: v instanceof File ? v.name : v\n\t\t\t\t\t})));\n\n\t\t\t\tconst conversionResponse = await fetch('http://localhost:8080/proxy/excel-to-sql', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Authorization': 'Bearer token_59b8b43a_aiurmmm0',\n\t\t\t\t\t\t'Accept-Language': 'en'\n\t\t\t\t\t},\n\t\t\t\t\tbody: formData\n\t\t\t\t});\n\n\t\t\t\tif (!conversionResponse.ok) {\n\t\t\t\t\tconst error = await conversionResponse.json();\n\t\t\t\t\tthrow new Error(error.detail || 'Excel conversion failed');\n\t\t\t\t}\n\n\t\t\t\t// Store conversion result\n\t\t\t\tconst conversionResult = await conversionResponse.json();\n\t\t\t\tfileItem.conversionResult = conversionResult;\n\t\t\t\t\n\t\t\t\t// IMPORTANT: Also upload the original Excel file\n\t\t\t\tconst uploadedFile = await uploadFile(localStorage.token, file, formData);\n\t\t\t\tif (uploadedFile) {\n\t\t\t\t\tfileItem.file = uploadedFile;\n\t\t\t\t\tfileItem.id = uploadedFile.id;\n\t\t\t\t\tfileItem.url = `${WEBUI_API_BASE_URL}/files/${uploadedFile.id}`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Process non-Excel files\n\t\t\t\tconst uploadedFile = await uploadFile(localStorage.token, file, formData);\n\t\t\t\tif (uploadedFile) {\n\t\t\t\t\tfileItem.file = uploadedFile;\n\t\t\t\t\tfileItem.id = uploadedFile.id;\n\t\t\t\t\tfileItem.url = `${WEBUI_API_BASE_URL}/files/${uploadedFile.id}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update status\n\t\t\tfiles = files.map(item => \n\t\t\t\titem.itemId === tempItemId ? {...fileItem, status: 'processed'} : item\n\t\t\t);\n\n\t\t} catch (e) {\n\t\t\tfiles = files.map(item => \n\t\t\t\titem.itemId === tempItemId ? {\n\t\t\t\t\t...item, \n\t\t\t\t\tstatus: 'error',\n\t\t\t\t\terror: e.message\n\t\t\t\t} : item\n\t\t\t);\n\t\t\ttoast.error($i18n.t('File processing failed: {{error}}', { error: e.message }));\n\t\t}\n\t}\n\n\t// Add this function to extract Excel metadata\n\tconst extractExcelMetadata = async (file) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = async (event) => {\n\t\t\ttry {\n\t\t\t\t// You'll need to include a library like SheetJS/xlsx\n\t\t\t\tconst workbook = XLSX.read(event.target.result, { type: 'array' });\n\t\t\t\tconst firstSheetName = workbook.SheetNames[0];\n\t\t\t\tconst worksheet = workbook.Sheets[firstSheetName];\n\t\t\t\t\n\t\t\t\t// Get column names (assuming first row contains headers)\n\t\t\t\tconst headers = XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0];\n\t\t\t\t\n\t\t\t\t// Get total row count\n\t\t\t\tconst jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\t\t\t\tconst rowCount = jsonData.length - 1; // Subtract header row\n\t\t\t\t\n\t\t\t\t// Get 3 sample rows (excluding header)\n\t\t\t\tconst sampleRows = jsonData.slice(1, 4);\n\t\t\t\t\n\t\t\t\tresolve({\n\t\t\t\tcolumnNames: headers,\n\t\t\t\trowCount: rowCount,\n\t\t\t\tsampleRows: sampleRows\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t\t};\n\t\t\treader.onerror = (error) => reject(error);\n\t\t\treader.readAsArrayBuffer(file);\n\t\t});\n\t};\n\n\tconst inputFilesHandler = async (inputFiles) => {\n\t\tconsole.log('Input files handler called with:', inputFiles);\n\t\tinputFiles.forEach((file) => {\n\t\t\tconsole.log('Processing file:', {\n\t\t\t\tname: file.name,\n\t\t\t\ttype: file.type,\n\t\t\t\tsize: file.size,\n\t\t\t\textension: file.name.split('.').at(-1)\n\t\t\t});\n\n\t\t\tif (\n\t\t\t\t($config?.file?.max_size ?? null) !== null &&\n\t\t\t\tfile.size > ($config?.file?.max_size ?? 0) * 1024 * 1024\n\t\t\t) {\n\t\t\t\tconsole.log('File exceeds max size limit:', {\n\t\t\t\t\tfileSize: file.size,\n\t\t\t\t\tmaxSize: ($config?.file?.max_size ?? 0) * 1024 * 1024\n\t\t\t\t});\n\t\t\t\ttoast.error(\n\t\t\t\t\t$i18n.t(`File size should not exceed {{maxSize}} MB.`, {\n\t\t\t\t\t\tmaxSize: $config?.file?.max_size\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tconst excelExtensions = ['.xls', '.xlsx', '.csv', '.ods'];\n    \t\tconst fileExtension = '.' + file.name.split('.').pop().toLowerCase();\n\t\t\t// Add Excel file type detection\n\t\t\tconst isExcel = \n\t\t\t\t['application/vnd.ms-excel', \n\t\t\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t\t'application/vnd.oasis.opendocument.spreadsheet',\n\t\t\t\t'text/csv'].includes(file.type) || \n\t\t\t\t['.xls', '.xlsx', '.csv', '.ods'].includes('.' + file.name.split('.').pop().toLowerCase());\n\n\t\t\tif (\n\t\t\t\t['image/gif', 'image/webp', 'image/jpeg', 'image/png', 'image/avif'].includes(file['type'])\n\t\t\t) {\n\t\t\t\tif (visionCapableModels.length === 0) {\n\t\t\t\t\ttoast.error($i18n.t('Selected model(s) do not support image inputs'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet reader = new FileReader();\n\t\t\t\treader.onload = async (event) => {\n\t\t\t\t\tlet imageUrl = event.target.result;\n\n\t\t\t\t\tif ($settings?.imageCompression ?? false) {\n\t\t\t\t\t\tconst width = $settings?.imageCompressionSize?.width ?? null;\n\t\t\t\t\t\tconst height = $settings?.imageCompressionSize?.height ?? null;\n\n\t\t\t\t\t\tif (width || height) {\n\t\t\t\t\t\t\timageUrl = await compressImage(imageUrl, width, height);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfiles = [\n\t\t\t\t\t\t...files,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\turl: `${imageUrl}`\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t};\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t} else if (isExcel) {\n\t\t\t\t// Handle Excel files with custom preview if needed\n\t\t\t\tconsole.log('Excel file detected:', file.name);\n\t\t\t\t(async () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Extract metadata before uploading\n\t\t\t\t\t\tconst excelMetadata = await extractExcelMetadata(file);\n\t\t\t\t\t\tconsole.log('Excel metadata:', excelMetadata);\n\n\t\t\t\t\t\t// Create a file object with the metadata\n\t\t\t\t\t\tconst fileWithMetadata = new File(\n\t\t\t\t\t\t\t[file], \n\t\t\t\t\t\t\tfile.name, \n\t\t\t\t\t\t\t{ type: file.type }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Add the metadata and SQL to the file object\n\t\t\t\t\t\tfileWithMetadata.excelMetadata = excelMetadata;\n\n\t\t\t\t\t\tuploadFileHandler(file, true); // Set fullContext to true for Excel files\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error extracting Excel metadata:', error);\n\t\t\t\t\t\ttoast.error($i18n.t('Error processing Excel file: {{error}}', {\n\t\t\t\t\t\t\terror: error.message\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t} else {\n\t\t\t\tuploadFileHandler(file);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst handleKeyDown = (event: KeyboardEvent) => {\n\t\tif (event.key === 'Escape') {\n\t\t\tconsole.log('Escape');\n\t\t\tdragged = false;\n\t\t}\n\t};\n\n\tconst onDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\t// Check if a file is being dragged.\n\t\tif (e.dataTransfer?.types?.includes('Files')) {\n\t\t\tdragged = true;\n\t\t} else {\n\t\t\tdragged = false;\n\t\t}\n\t};\n\n\tconst onDragLeave = () => {\n\t\tdragged = false;\n\t};\n\n\tconst onDrop = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(e);\n\n\t\tif (e.dataTransfer?.files) {\n\t\t\tconst inputFiles = Array.from(e.dataTransfer?.files);\n\t\t\tif (inputFiles && inputFiles.length > 0) {\n\t\t\t\tconsole.log(inputFiles);\n\t\t\t\tinputFilesHandler(inputFiles);\n\t\t\t}\n\t\t}\n\n\t\tdragged = false;\n\t};\n\n\tonMount(async () => {\n\t\tloaded = true;\n\n\t\twindow.setTimeout(() => {\n\t\t\tconst chatInput = document.getElementById('chat-input');\n\t\t\tchatInput?.focus();\n\t\t}, 0);\n\n\t\twindow.addEventListener('keydown', handleKeyDown);\n\n\t\tawait tick();\n\n\t\tconst dropzoneElement = document.getElementById('chat-container');\n\n\t\tdropzoneElement?.addEventListener('dragover', onDragOver);\n\t\tdropzoneElement?.addEventListener('drop', onDrop);\n\t\tdropzoneElement?.addEventListener('dragleave', onDragLeave);\n\t});\n\n\tonDestroy(() => {\n\t\tconsole.log('destroy');\n\t\twindow.removeEventListener('keydown', handleKeyDown);\n\n\t\tconst dropzoneElement = document.getElementById('chat-container');\n\n\t\tif (dropzoneElement) {\n\t\t\tdropzoneElement?.removeEventListener('dragover', onDragOver);\n\t\t\tdropzoneElement?.removeEventListener('drop', onDrop);\n\t\t\tdropzoneElement?.removeEventListener('dragleave', onDragLeave);\n\t\t}\n\t});\n</script>\n\n<FilesOverlay show={dragged} />\n\n{#if loaded}\n\t<div class=\"w-full font-primary\">\n\t\t<div class=\" mx-auto inset-x-0 bg-transparent flex justify-center\">\n\t\t\t<div\n\t\t\t\tclass=\"flex flex-col px-3 {($settings?.widescreenMode ?? null)\n\t\t\t\t\t? 'max-w-full'\n\t\t\t\t\t: 'max-w-6xl'} w-full\"\n\t\t\t>\n\t\t\t\t<div class=\"relative\">\n\t\t\t\t\t{#if autoScroll === false && history?.currentId}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\" absolute -top-12 left-0 right-0 flex justify-center z-30 pointer-events-none\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\" bg-white border border-gray-100 dark:border-none dark:bg-white/20 p-1.5 rounded-full pointer-events-auto\"\n\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\tautoScroll = true;\n\t\t\t\t\t\t\t\t\tscrollToBottom();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\tclass=\"w-5 h-5\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\td=\"M10 3a.75.75 0 01.75.75v10.638l3.96-4.158a.75.75 0 111.08 1.04l-5.25 5.5a.75.75 0 01-1.08 0l-5.25-5.5a.75.75 0 111.08-1.04l3.96 4.158V3.75A.75.75 0 0110 3z\"\n\t\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"w-full relative\">\n\t\t\t\t\t{#if atSelectedModel !== undefined || selectedToolIds.length > 0 || webSearchEnabled || ($settings?.webSearch ?? false) === 'always' || imageGenerationEnabled || codeInterpreterEnabled}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"px-3 pb-0.5 pt-1.5 text-left w-full flex flex-col absolute bottom-0 left-0 right-0 bg-linear-to-t from-white dark:from-gray-900 z-10\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#if selectedToolIds.length > 0}\n\t\t\t\t\t\t\t\t<div class=\"flex items-center justify-between w-full\">\n\t\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-2.5 text-sm dark:text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"relative flex size-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-yellow-400 opacity-75\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"relative inline-flex rounded-full size-2 bg-yellow-500\" />\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"  text-ellipsis line-clamp-1 flex\">\n\t\t\t\t\t\t\t\t\t\t\t{#each selectedToolIds.map((id) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn $tools ? $tools.find((t) => t.id === id) : { id: id, name: id };\n\t\t\t\t\t\t\t\t\t\t\t}) as tool, toolIdx (toolIdx)}\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontent={tool?.meta?.description ?? ''}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\" {toolIdx !== 0 ? 'pl-0.5' : ''} shrink-0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tool.name}\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t\t\t\t\t\t\t\t{#if toolIdx !== selectedToolIds.length - 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>, </span>\n\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t{#if webSearchEnabled || ($config?.features?.enable_web_search && ($settings?.webSearch ?? false)) === 'always'}\n\t\t\t\t\t\t\t\t<div class=\"flex items-center justify-between w-full\">\n\t\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-2.5 text-sm dark:text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"relative flex size-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-blue-400 opacity-75\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"relative inline-flex rounded-full size-2 bg-blue-500\" />\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\" translate-y-[0.5px]\">{$i18n.t('Search the internet')}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t{#if imageGenerationEnabled}\n\t\t\t\t\t\t\t\t<div class=\"flex items-center justify-between w-full\">\n\t\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-2.5 text-sm dark:text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"relative flex size-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-teal-400 opacity-75\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"relative inline-flex rounded-full size-2 bg-teal-500\" />\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\" translate-y-[0.5px]\">{$i18n.t('Generate an image')}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t{#if codeInterpreterEnabled}\n\t\t\t\t\t\t\t\t<div class=\"flex items-center justify-between w-full\">\n\t\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-2.5 text-sm dark:text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"relative flex size-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 opacity-75\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"relative inline-flex rounded-full size-2 bg-green-500\" />\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\" translate-y-[0.5px]\">{$i18n.t('Execute code for analysis')}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t{#if atSelectedModel !== undefined}\n\t\t\t\t\t\t\t\t<div class=\"flex items-center justify-between w-full\">\n\t\t\t\t\t\t\t\t\t<div class=\"pl-[1px] flex items-center gap-2 text-sm dark:text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tcrossorigin=\"anonymous\"\n\t\t\t\t\t\t\t\t\t\t\talt=\"model profile\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"size-3.5 max-w-[28px] object-cover rounded-full\"\n\t\t\t\t\t\t\t\t\t\t\tsrc={$models.find((model) => model.id === atSelectedModel.id)?.info?.meta\n\t\t\t\t\t\t\t\t\t\t\t\t?.profile_image_url ??\n\t\t\t\t\t\t\t\t\t\t\t\t($i18n.language === 'dg-DG'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? `/doge.png`\n\t\t\t\t\t\t\t\t\t\t\t\t\t: `${WEBUI_BASE_URL}/static/favicon.png`)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div class=\"translate-y-[0.5px]\">\n\t\t\t\t\t\t\t\t\t\t\tTalking to <span class=\" font-medium\">{atSelectedModel.name}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass=\"flex items-center dark:text-gray-500\"\n\t\t\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tatSelectedModel = undefined;\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<XMark />\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\n\t\t\t\t\t<Commands\n\t\t\t\t\t\tbind:this={commandsElement}\n\t\t\t\t\t\tbind:prompt\n\t\t\t\t\t\tbind:files\n\t\t\t\t\t\thistory={history}\n\t\t\t\t\t\ton:upload={(e) => {\n\t\t\t\t\t\t\tdispatch('upload', e.detail);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ton:select={(e) => {\n\t\t\t\t\t\t\tconst data = e.detail;\n\n\t\t\t\t\t\t\tif (data?.type === 'model') {\n\t\t\t\t\t\t\t\tatSelectedModel = data.data;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst chatInputElement = document.getElementById('chat-input');\n\t\t\t\t\t\t\tchatInputElement?.focus();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"{transparentBackground ? 'bg-transparent' : 'bg-white dark:bg-gray-900'} \">\n\t\t\t<div\n\t\t\t\tclass=\"{($settings?.widescreenMode ?? null)\n\t\t\t\t\t? 'max-w-full'\n\t\t\t\t\t: 'max-w-6xl'} px-2.5 mx-auto inset-x-0\"\n\t\t\t>\n\t\t\t\t<div class=\"\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tbind:this={filesInputElement}\n\t\t\t\t\t\tbind:files={inputFiles}\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\thidden\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\ton:change={async () => {\n\t\t\t\t\t\t\tif (inputFiles && inputFiles.length > 0) {\n\t\t\t\t\t\t\t\tconst _inputFiles = Array.from(inputFiles);\n\t\t\t\t\t\t\t\tinputFilesHandler(_inputFiles);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttoast.error($i18n.t(`File not found.`));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfilesInputElement.value = '';\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{#if recording}\n\t\t\t\t\t\t<VoiceRecording\n\t\t\t\t\t\t\tbind:recording\n\t\t\t\t\t\t\ton:cancel={async () => {\n\t\t\t\t\t\t\t\trecording = false;\n\n\t\t\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\t\t\tdocument.getElementById('chat-input')?.focus();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ton:confirm={async (e) => {\n\t\t\t\t\t\t\t\tconst { text, filename } = e.detail;\n\t\t\t\t\t\t\t\tprompt = `${prompt}${text} `;\n\n\t\t\t\t\t\t\t\trecording = false;\n\n\t\t\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\t\t\tdocument.getElementById('chat-input')?.focus();\n\n\t\t\t\t\t\t\t\tif ($settings?.speechAutoSend ?? false) {\n\t\t\t\t\t\t\t\t\tdispatch('submit', prompt);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclass=\"w-full flex gap-1.5\"\n\t\t\t\t\t\t\ton:submit|preventDefault={() => {\n\t\t\t\t\t\t\t\t// check if selectedModels support image input\n\t\t\t\t\t\t\t\tdispatch('submit', prompt);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"flex-1 flex flex-col relative w-full rounded-3xl px-1 bg-gray-600/5 dark:bg-gray-400/5 dark:text-gray-100\"\n\t\t\t\t\t\t\t\tdir={$settings?.chatDirection ?? 'LTR'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#if files.length > 0}\n\t\t\t\t\t\t\t\t\t<div class=\"mx-2 mt-2.5 -mb-1 flex items-center flex-wrap gap-2\">\n\t\t\t\t\t\t\t\t\t\t{#each files as file, fileIdx}\n\t\t\t\t\t\t\t\t\t\t\t{#if file.type === 'image'}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\" relative group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"relative flex items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={file.url}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"input\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timageClassName=\" size-14 rounded-xl object-cover\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{#if atSelectedModel ? visionCapableModels.length === 0 : selectedModels.length !== visionCapableModels.length}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\" absolute top-1 left-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent={$i18n.t('{{ models }}', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodels: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...(atSelectedModel ? [atSelectedModel] : selectedModels)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((id) => !visionCapableModels.includes(id))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.join(', ')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"size-4 fill-yellow-300\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003ZM12 8.25a.75.75 0 0 1 .75.75v3.75a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75Zm0 8.25a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Z\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\" absolute -top-1 -right-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\" bg-white text-black border border-white rounded-full group-hover:visible invisible transition\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiles.splice(fileIdx, 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiles = files;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"size-4\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{:else if isExcelFile(file)}\n\t\t\t\t\t\t\t\t\t\t\t\t<FileItem\n\t\t\t\t\t\t\t\t\t\t\t\t\titem={file}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={file.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"excel\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={file?.size}\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={file.status === 'uploading'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdismissible={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tedit={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\ton:dismiss={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (file.id) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait deleteFileById(localStorage.token, file.id);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiles.splice(fileIdx, 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiles = files;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t\t<FileItem\n\t\t\t\t\t\t\t\t\t\t\t\t\titem={file}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={file.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={file.type}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={file?.size}\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={file.status === 'uploading'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdismissible={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tedit={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\ton:dismiss={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (file.type !== 'collection' && !file?.collection) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (file.id) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// This will handle both file deletion and Chroma cleanup\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait deleteFileById(localStorage.token, file.id);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove from UI state\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiles.splice(fileIdx, 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiles = files;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(file);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t<div class=\"px-2.5\">\n\t\t\t\t\t\t\t\t\t{#if $settings?.richTextInput ?? true}\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclass=\"scrollbar-hidden text-left bg-transparent dark:text-gray-100 outline-hidden w-full pt-3 px-1 resize-none h-fit max-h-80 overflow-auto\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<RichTextInput\n\t\t\t\t\t\t\t\t\t\t\t\tbind:this={chatInputElement}\n\t\t\t\t\t\t\t\t\t\t\t\tbind:value={prompt}\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"chat-input\"\n\t\t\t\t\t\t\t\t\t\t\t\tmessageInput={true}\n\t\t\t\t\t\t\t\t\t\t\t\tshiftEnter={!$mobile ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ontouchstart' in window ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigator.maxTouchPoints > 0 ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigator.msMaxTouchPoints > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={placeholder ? placeholder : $i18n.t('Send a Message')}\n\t\t\t\t\t\t\t\t\t\t\t\tlargeTextAsFile={$settings?.largeTextAsFile ?? false}\n\t\t\t\t\t\t\t\t\t\t\t\tautocomplete={$config?.features.enable_autocomplete_generation}\n\t\t\t\t\t\t\t\t\t\t\t\tgenerateAutoCompletion={async (text) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (selectedModelIds.length === 0 || !selectedModelIds.at(0)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoast.error($i18n.t('Please select a model first.'));\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst res = await generateAutoCompletion(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlocalStorage.token,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedModelIds.at(0),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory?.currentId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? createMessagesList(history, history.currentId)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t\t\t\t).catch((error) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(error);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\ton:keydown={async (e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\te = e.detail.event;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst isCtrlPressed = e.ctrlKey || e.metaKey; // metaKey is for Cmd key on Mac\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst commandsContainerElement =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById('commands-container');\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === 'Escape') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstopResponse();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Command/Ctrl + Shift + Enter to submit a message pair\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (isCtrlPressed && e.key === 'Enter' && e.shiftKey) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcreateMessagePair(prompt);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Check if Ctrl + R is pressed\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (prompt === '' && isCtrlPressed && e.key.toLowerCase() === 'r') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('regenerate');\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst regenerateButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('regenerate-response-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tregenerateButton?.click();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (prompt === '' && e.key == 'ArrowUp') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst userMessageElement = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('user-message')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (userMessageElement) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserMessageElement.scrollIntoView({ block: 'center' });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst editButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('edit-user-message-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teditButton?.click();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (commandsContainerElement) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (commandsContainerElement && e.key === 'ArrowUp') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommandsElement.selectUp();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst commandOptionButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('selected-command-option-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommandOptionButton.scrollIntoView({ block: 'center' });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (commandsContainerElement && e.key === 'ArrowDown') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommandsElement.selectDown();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst commandOptionButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('selected-command-option-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommandOptionButton.scrollIntoView({ block: 'center' });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (commandsContainerElement && e.key === 'Tab') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst commandOptionButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('selected-command-option-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommandOptionButton?.click();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (commandsContainerElement && e.key === 'Enter') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst commandOptionButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('selected-command-option-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (commandOptionButton) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommandOptionButton?.click();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById('send-message-button')?.click();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!$mobile ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ontouchstart' in window ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigator.maxTouchPoints > 0 ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigator.msMaxTouchPoints > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Prevent Enter key from creating a new line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Uses keyCode '13' for Enter key for chinese/japanese keyboards\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.keyCode === 13 && !e.shiftKey) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Submit the prompt when Enter key is pressed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(prompt !== '' || files.length > 0) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.keyCode === 13 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!e.shiftKey\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch('submit', prompt);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === 'Escape') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Escape');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tatSelectedModel = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedToolIds = [];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twebSearchEnabled = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timageGenerationEnabled = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\ton:paste={async (e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\te = e.detail.event;\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(e);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst clipboardData = e.clipboardData || window.clipboardData;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (clipboardData && clipboardData.items) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (const item of clipboardData.items) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.type.indexOf('image') !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst blob = item.getAsFile();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst reader = new FileReader();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treader.onload = function (e) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiles = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...files,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\turl: `${e.target.result}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (item.type === 'text/plain') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($settings?.largeTextAsFile ?? false) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst text = clipboardData.getData('text/plain');\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (text.length > PASTED_TEXT_CHARACTER_LIMIT) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst blob = new Blob([text], { type: 'text/plain' });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst file = new File([blob], `Pasted_Text_${Date.now()}.txt`, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'text/plain'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait uploadFileHandler(file, true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\t\tid=\"chat-input\"\n\t\t\t\t\t\t\t\t\t\t\tbind:this={chatInputElement}\n\t\t\t\t\t\t\t\t\t\t\tclass=\"scrollbar-hidden bg-transparent dark:text-gray-100 outline-hidden w-full pt-3 px-1 resize-none\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={placeholder ? placeholder : $i18n.t('Send a Message')}\n\t\t\t\t\t\t\t\t\t\t\tbind:value={prompt}\n\t\t\t\t\t\t\t\t\t\t\ton:keypress={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t!$mobile ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ontouchstart' in window ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigator.maxTouchPoints > 0 ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigator.msMaxTouchPoints > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Prevent Enter key from creating a new line\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === 'Enter' && !e.shiftKey) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Submit the prompt when Enter key is pressed\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(prompt !== '' || files.length > 0) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.key === 'Enter' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!e.shiftKey\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch('submit', prompt);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\ton:keydown={async (e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst isCtrlPressed = e.ctrlKey || e.metaKey; // metaKey is for Cmd key on Mac\n\t\t\t\t\t\t\t\t\t\t\t\tconst commandsContainerElement =\n\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById('commands-container');\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === 'Escape') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tstopResponse();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t// Command/Ctrl + Shift + Enter to submit a message pair\n\t\t\t\t\t\t\t\t\t\t\t\tif (isCtrlPressed && e.key === 'Enter' && e.shiftKey) {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\tcreateMessagePair(prompt);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Check if Ctrl + R is pressed\n\t\t\t\t\t\t\t\t\t\t\t\tif (prompt === '' && isCtrlPressed && e.key.toLowerCase() === 'r') {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('regenerate');\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst regenerateButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('regenerate-response-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tregenerateButton?.click();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (prompt === '' && e.key == 'ArrowUp') {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst userMessageElement = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('user-message')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst editButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('edit-user-message-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(userMessageElement);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserMessageElement.scrollIntoView({ block: 'center' });\n\t\t\t\t\t\t\t\t\t\t\t\t\teditButton?.click();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (commandsContainerElement && e.key === 'ArrowUp') {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommandsElement.selectUp();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst commandOptionButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('selected-command-option-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommandOptionButton.scrollIntoView({ block: 'center' });\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (commandsContainerElement && e.key === 'ArrowDown') {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommandsElement.selectDown();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst commandOptionButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('selected-command-option-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommandOptionButton.scrollIntoView({ block: 'center' });\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (commandsContainerElement && e.key === 'Enter') {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst commandOptionButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('selected-command-option-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.shiftKey) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprompt = `${prompt}\\n`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (commandOptionButton) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommandOptionButton?.click();\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById('send-message-button')?.click();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (commandsContainerElement && e.key === 'Tab') {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst commandOptionButton = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...document.getElementsByClassName('selected-command-option-button')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]?.at(-1);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommandOptionButton?.click();\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (e.key === 'Tab') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst words = findWordIndices(prompt);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (words.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst word = words.at(0);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst fullPrompt = prompt;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprompt = prompt.substring(0, word?.endIndex + 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait tick();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.scrollTop = e.target.scrollHeight;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprompt = fullPrompt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait tick();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.setSelectionRange(word?.startIndex, word.endIndex + 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\te.target.style.height = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\te.target.style.height = Math.min(e.target.scrollHeight, 320) + 'px';\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === 'Escape') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Escape');\n\t\t\t\t\t\t\t\t\t\t\t\t\tatSelectedModel = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedToolIds = [];\n\t\t\t\t\t\t\t\t\t\t\t\t\twebSearchEnabled = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\timageGenerationEnabled = false;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\trows=\"1\"\n\t\t\t\t\t\t\t\t\t\t\ton:input={async (e) => {\n\t\t\t\t\t\t\t\t\t\t\t\te.target.style.height = '';\n\t\t\t\t\t\t\t\t\t\t\t\te.target.style.height = Math.min(e.target.scrollHeight, 320) + 'px';\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\ton:focus={async (e) => {\n\t\t\t\t\t\t\t\t\t\t\t\te.target.style.height = '';\n\t\t\t\t\t\t\t\t\t\t\t\te.target.style.height = Math.min(e.target.scrollHeight, 320) + 'px';\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\ton:paste={async (e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst clipboardData = e.clipboardData || window.clipboardData;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (clipboardData && clipboardData.items) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (const item of clipboardData.items) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.type.indexOf('image') !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst blob = item.getAsFile();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst reader = new FileReader();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treader.onload = function (e) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiles = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...files,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\turl: `${e.target.result}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (item.type === 'text/plain') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($settings?.largeTextAsFile ?? false) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst text = clipboardData.getData('text/plain');\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (text.length > PASTED_TEXT_CHARACTER_LIMIT) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst blob = new Blob([text], { type: 'text/plain' });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst file = new File([blob], `Pasted_Text_${Date.now()}.txt`, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'text/plain'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait uploadFileHandler(file, true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\" flex justify-between mt-1.5 mb-2.5 mx-0.5 max-w-full\">\n\t\t\t\t\t\t\t\t\t<div class=\"ml-1 self-end gap-0.5 flex items-center flex-1 max-w-[80%]\">\n\t\t\t\t\t\t\t\t\t\t<InputMenu\n\t\t\t\t\t\t\t\t\t\t\tbind:selectedToolIds\n\t\t\t\t\t\t\t\t\t\t\t{screenCaptureHandler}\n\t\t\t\t\t\t\t\t\t\t\t{inputFilesHandler}\n\t\t\t\t\t\t\t\t\t\t\tuploadFilesHandler={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tfilesInputElement.click();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tuploadGoogleDriveHandler={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst fileData = await createPicker();\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (fileData) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst file = new File([fileData.blob], fileData.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: fileData.blob.type\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait uploadFileHandler(file);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('No file was selected from Google Drive');\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.error('Google Drive Error:', error);\n\t\t\t\t\t\t\t\t\t\t\t\t\ttoast.error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$i18n.t('Error accessing Google Drive: {{error}}', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror: error.message\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tuploadOneDriveHandler={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst fileData = await pickAndDownloadFile();\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (fileData) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst file = new File([fileData.blob], fileData.name, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: fileData.blob.type || 'application/octet-stream'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait uploadFileHandler(file);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('No file was selected from OneDrive');\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.error('OneDrive Error:', error);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonClose={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\tawait tick();\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst chatInput = document.getElementById('chat-input');\n\t\t\t\t\t\t\t\t\t\t\t\tchatInput?.focus();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"bg-transparent hover:bg-gray-100 text-gray-800 dark:text-white dark:hover:bg-gray-800 transition rounded-full p-1.5 outline-hidden focus:outline-hidden\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"More\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"size-5\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</InputMenu>\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"flex gap-0.5 items-center overflow-x-auto scrollbar-none flex-1\">\n\t\t\t\t\t\t\t\t\t\t\t{#if $_user}\n\t\t\t\t\t\t\t\t\t\t\t\t{#if $config?.features?.enable_web_search && ($_user.role === 'admin' || $_user?.permissions?.features?.web_search)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip content={$i18n.t('Search the internet')} placement=\"top\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ton:click|preventDefault={() => (webSearchEnabled = !webSearchEnabled)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"px-1.5 @sm:px-2.5 py-1.5 flex gap-1.5 items-center text-sm rounded-full font-medium transition-colors duration-300 focus:outline-hidden max-w-full overflow-hidden {webSearchEnabled ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t($settings?.webSearch ?? false) === 'always'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'bg-blue-100 dark:bg-blue-500/20 text-blue-500 dark:text-blue-400'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'bg-transparent text-gray-600 dark:text-gray-300 border-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800'}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GlobeAlt className=\"size-5\" strokeWidth=\"1.75\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"hidden @sm:block whitespace-nowrap overflow-hidden text-ellipsis translate-y-[0.5px] mr-0.5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>{$i18n.t('Web Search')}</span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t\t\t\t\t{#if $config?.features?.enable_image_generation && ($_user.role === 'admin' || $_user?.permissions?.features?.image_generation)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip content={$i18n.t('Generate an image')} placement=\"top\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ton:click|preventDefault={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(imageGenerationEnabled = !imageGenerationEnabled)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"px-1.5 @sm:px-2.5 py-1.5 flex gap-1.5 items-center text-sm rounded-full font-medium transition-colors duration-300 focus:outline-hidden max-w-full overflow-hidden {imageGenerationEnabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'bg-gray-100 dark:bg-gray-500/20 text-gray-600 dark:text-gray-400'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'bg-transparent text-gray-600 dark:text-gray-300 border-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 '}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Photo className=\"size-5\" strokeWidth=\"1.75\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"hidden @sm:block whitespace-nowrap overflow-hidden text-ellipsis translate-y-[0.5px] mr-0.5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>{$i18n.t('Image')}</span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t\t\t\t\t{#if false && $config?.features?.enable_code_interpreter && ($_user.role === 'admin' || $_user?.permissions?.features?.code_interpreter)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip content={$i18n.t('Execute code for analysis')} placement=\"top\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ton:click|preventDefault={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(codeInterpreterEnabled = !codeInterpreterEnabled)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"px-1.5 @sm:px-2.5 py-1.5 flex gap-1.5 items-center text-sm rounded-full font-medium transition-colors duration-300 focus:outline-hidden max-w-full overflow-hidden {codeInterpreterEnabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'bg-gray-100 dark:bg-gray-500/20 text-gray-600 dark:text-gray-400'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'bg-transparent text-gray-600 dark:text-gray-300 border-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 '}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CommandLine className=\"size-5\" strokeWidth=\"1.75\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"hidden @sm:block whitespace-nowrap overflow-hidden text-ellipsis translate-y-[0.5px] mr-0.5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>{$i18n.t('Code Interpreter')}</span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"self-end flex space-x-1 mr-1 shrink-0\">\n\t\t\t\t\t\t\t\t\t\t{#if !history?.currentId || history.messages[history.currentId]?.done == true}\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip content={$i18n.t('Record voice')}>\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"voice-input-button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\" text-gray-600 dark:text-gray-300 hover:text-gray-700 dark:hover:text-gray-200 transition rounded-full p-1.5 mr-0.5 self-center\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ton:click={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet stream = await navigator.mediaDevices\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.getUserMedia({ audio: true })\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.catch(function (err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoast.error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$i18n.t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`Permission denied when accessing microphone: {{error}}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (stream) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecording = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tracks = stream.getTracks();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttracks.forEach((track) => track.stop());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstream = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoast.error($i18n.t('Permission denied when accessing microphone'));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Voice Input\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"w-5 h-5 translate-y-[0.5px]\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M7 4a3 3 0 016 0v6a3 3 0 11-6 0V4z\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M5.5 9.643a.75.75 0 00-1.5 0V10c0 3.06 2.29 5.585 5.25 5.954V17.5h-1.5a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-1.5v-1.546A6.001 6.001 0 0016 10v-.357a.75.75 0 00-1.5 0V10a4.5 4.5 0 01-9 0v-.357z\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t\t\t{#if !history.currentId || history.messages[history.currentId]?.done == true}\n\t\t\t\t\t\t\t\t\t\t\t{#if prompt === '' && files.length === 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\" flex items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip content={$i18n.t('Call')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\" {webSearchEnabled ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t($settings?.webSearch ?? false) === 'always'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'bg-blue-500 text-white hover:bg-blue-400 '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'bg-black text-white hover:bg-gray-900 dark:bg-white dark:text-black dark:hover:bg-gray-100'} transition rounded-full p-1.5 self-center\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ton:click={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (selectedModels.length > 1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoast.error($i18n.t('Select only one model to call'));\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($config.audio.stt.engine === 'web') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoast.error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$i18n.t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Call feature is not supported when using Web STT engine'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// check if user has access to getUserMedia\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet stream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taudio: true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// If the user grants the permission, proceed to show the call overlay\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (stream) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tracks = stream.getTracks();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttracks.forEach((track) => track.stop());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstream = null;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($settings.audio?.tts?.engine === 'browser-kokoro') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// If the user has not initialized the TTS worker, initialize it\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!$TTSWorker) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait TTSWorker.set(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew KokoroWorker({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdtype: $settings.audio?.tts?.engineConfig?.dtype ?? 'fp32'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait $TTSWorker.init();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowCallOverlay.set(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowControls.set(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// If the user denies the permission or an error occurs, show an error message\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoast.error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$i18n.t('Permission denied when accessing media devices')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Call\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Headphone className=\"size-5\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\" flex items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip content={$i18n.t('Send message')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"send-message-button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"{!(prompt === '' && files.length === 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? webSearchEnabled || ($settings?.webSearch ?? false) === 'always'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'bg-blue-500 text-white hover:bg-blue-400 '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'bg-black text-white hover:bg-gray-900 dark:bg-white dark:text-black dark:hover:bg-gray-100 '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'text-white bg-gray-200 dark:text-gray-900 dark:bg-gray-700 disabled'} transition rounded-full p-1.5 self-center\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={prompt === '' && files.length === 0}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"size-5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M8 14a.75.75 0 0 1-.75-.75V4.56L4.03 7.78a.75.75 0 0 1-1.06-1.06l4.5-4.5a.75.75 0 0 1 1.06 0l4.5 4.5a.75.75 0 0 1-1.06 1.06L8.75 4.56v8.69A.75.75 0 0 1 8 14Z\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t<div class=\" flex items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip content={$i18n.t('Stop')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"bg-white hover:bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-white dark:hover:bg-gray-800 transition rounded-full p-1.5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstopResponse();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"size-5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm6-2.438c0-.724.588-1.312 1.313-1.312h4.874c.725 0 1.313.588 1.313 1.313v4.874c0 .725-.588 1.313-1.313 1.313H9.564a1.312 1.312 0 01-1.313-1.313V9.564z\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n{/if}","<script lang=\"ts\">\n\timport { models, showSettings, settings, user, mobile, config } from '$lib/stores';\n\timport { onMount, tick, getContext } from 'svelte';\n\timport { toast } from 'svelte-sonner';\n\timport Selector from './ModelSelector/Selector.svelte';\n\timport Tooltip from '../common/Tooltip.svelte';\n\n\timport { updateUserSettings } from '$lib/apis/users';\n\tconst i18n = getContext('i18n');\n\n\texport let selectedModels = [''];\n\texport let disabled = false;\n\n\texport let showSetDefault = true;\n\n\tconst saveDefaultModel = async () => {\n\t\tconst hasEmptyModel = selectedModels.filter((it) => it === '');\n\t\tif (hasEmptyModel.length) {\n\t\t\ttoast.error($i18n.t('Choose a model before saving...'));\n\t\t\treturn;\n\t\t}\n\t\tsettings.set({ ...$settings, models: selectedModels });\n\t\tawait updateUserSettings(localStorage.token, { ui: $settings });\n\n\t\ttoast.success($i18n.t('Default model updated'));\n\t};\n\n\t$: if (selectedModels.length > 0 && $models.length > 0) {\n\t\tselectedModels = selectedModels.map((model) =>\n\t\t\t$models.map((m) => m.id).includes(model) ? model : ''\n\t\t);\n\t}\n</script>\n\n<div class=\"flex flex-col w-full items-start\">\n\t{#each selectedModels as selectedModel, selectedModelIdx}\n\t\t<div class=\"flex w-full max-w-fit\">\n\t\t\t<div class=\"overflow-hidden w-full\">\n\t\t\t\t<div class=\"mr-1 max-w-full\">\n\t\t\t\t\t<Selector\n\t\t\t\t\t\tid={`${selectedModelIdx}`}\n\t\t\t\t\t\tplaceholder={$i18n.t('Select a model')}\n\t\t\t\t\t\titems={$models.map((model) => ({\n\t\t\t\t\t\t\tvalue: model.id,\n\t\t\t\t\t\t\tlabel: model.name,\n\t\t\t\t\t\t\tmodel: model\n\t\t\t\t\t\t}))}\n\t\t\t\t\t\tshowTemporaryChatControl={$user.role === 'user'\n\t\t\t\t\t\t\t? ($user?.permissions?.chat?.temporary ?? true)\n\t\t\t\t\t\t\t: true}\n\t\t\t\t\t\tbind:value={selectedModel}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{#if selectedModelIdx === 0}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"  self-center mx-1 disabled:text-gray-600 disabled:hover:text-gray-600 -translate-y-[0.5px]\"\n\t\t\t\t>\n\t\t\t\t\t<Tooltip content={$i18n.t('Add Model')}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\" \"\n\t\t\t\t\t\t\t{disabled}\n\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\tselectedModels = [...selectedModels, ''];\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\taria-label=\"Add Model\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\tclass=\"size-3.5\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v12m6-6H6\" />\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t{:else}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"  self-center mx-1 disabled:text-gray-600 disabled:hover:text-gray-600 -translate-y-[0.5px]\"\n\t\t\t\t>\n\t\t\t\t\t<Tooltip content={$i18n.t('Remove Model')}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t{disabled}\n\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\tselectedModels.splice(selectedModelIdx, 1);\n\t\t\t\t\t\t\t\tselectedModels = selectedModels;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\taria-label=\"Remove Model\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\tclass=\"size-3\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.5 12h-15\" />\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t{/each}\n</div>\n\n{#if showSetDefault}\n\t<div class=\" absolute text-left mt-[1px] ml-1 text-[0.7rem] text-gray-500 font-primary\">\n\t\t<button on:click={saveDefaultModel}> {$i18n.t('Set as default')}</button>\n\t</div>\n{/if}\n","<script lang=\"ts\">\n\texport let className = 'size-4';\n\texport let strokeWidth = '2';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tfill=\"none\"\n\tviewBox=\"0 0 24 24\"\n\tstroke-width={strokeWidth}\n\tstroke=\"currentColor\"\n\tclass={className}\n>\n\t<path\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t\td=\"M9 6.75V15m6-6v8.25m.503 3.498 4.875-2.437c.381-.19.622-.58.622-1.006V4.82c0-.836-.88-1.38-1.628-1.006l-3.869 1.934c-.317.159-.69.159-1.006 0L9.503 3.252a1.125 1.125 0 0 0-1.006 0L3.622 5.689C3.24 5.88 3 6.27 3 6.695V19.18c0 .836.88 1.38 1.628 1.006l3.869-1.934c.317-.159.69-.159 1.006 0l4.994 2.497c.317.158.69.158 1.006 0Z\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\texport let className = 'w-4 h-4';\n\texport let strokeWidth = '1.5';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tviewBox=\"0 0 24 24\"\n\tstroke=\"currentColor\"\n\tfill=\"currentColor\"\n\tclass={className}\n\tstroke-width={strokeWidth}\n>\n\t<path\n\t\td=\"M18.75 12.75h1.5a.75.75 0 0 0 0-1.5h-1.5a.75.75 0 0 0 0 1.5ZM12 6a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 12 6ZM12 18a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 12 18ZM3.75 6.75h1.5a.75.75 0 1 0 0-1.5h-1.5a.75.75 0 0 0 0 1.5ZM5.25 18.75h-1.5a.75.75 0 0 1 0-1.5h1.5a.75.75 0 0 1 0 1.5ZM3 12a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 3 12ZM9 3.75a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5ZM12.75 12a2.25 2.25 0 1 1 4.5 0 2.25 2.25 0 0 1-4.5 0ZM9 15.75a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5Z\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\texport let className = 'size-4';\n\texport let strokeWidth = '2';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tfill=\"none\"\n\tviewBox=\"0 0 24 24\"\n\tstroke-width={strokeWidth}\n\tstroke=\"currentColor\"\n\tclass={className}\n>\n\t<path\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t\td=\"m21 7.5-9-5.25L3 7.5m18 0-9 5.25m9-5.25v9l-9 5.25M3 7.5l9 5.25M3 7.5v9l9 5.25m0-9v9\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\timport { toast } from 'svelte-sonner';\n\timport { DropdownMenu } from 'bits-ui';\n\timport { getContext } from 'svelte';\n\n\timport fileSaver from 'file-saver';\n\tconst { saveAs } = fileSaver;\n\n\timport { downloadChatAsPDF } from '$lib/apis/utils';\n\timport { copyToClipboard, createMessagesList } from '$lib/utils';\n\n\timport {\n\t\tshowOverview,\n\t\tshowControls,\n\t\tshowArtifacts,\n\t\tmobile,\n\t\ttemporaryChatEnabled\n\t} from '$lib/stores';\n\timport { flyAndScale } from '$lib/utils/transitions';\n\n\timport Dropdown from '$lib/components/common/Dropdown.svelte';\n\timport Tags from '$lib/components/chat/Tags.svelte';\n\timport Map from '$lib/components/icons/Map.svelte';\n\timport Clipboard from '$lib/components/icons/Clipboard.svelte';\n\timport AdjustmentsHorizontal from '$lib/components/icons/AdjustmentsHorizontal.svelte';\n\timport Cube from '$lib/components/icons/Cube.svelte';\n\timport { getChatById } from '$lib/apis/chats';\n\n\tconst i18n = getContext('i18n');\n\n\texport let shareEnabled: boolean = false;\n\texport let shareHandler: Function;\n\texport let downloadHandler: Function;\n\n\t// export let tagHandler: Function;\n\n\texport let chat;\n\texport let onClose: Function = () => {};\n\n\tconst getChatAsText = async () => {\n\t\tconst history = chat.chat.history;\n\t\tconst messages = createMessagesList(history, history.currentId);\n\t\tconst chatText = messages.reduce((a, message, i, arr) => {\n\t\t\treturn `${a}### ${message.role.toUpperCase()}\\n${message.content}\\n\\n`;\n\t\t}, '');\n\n\t\treturn chatText.trim();\n\t};\n\n\tconst downloadTxt = async () => {\n\t\tconst chatText = await getChatAsText();\n\n\t\tlet blob = new Blob([chatText], {\n\t\t\ttype: 'text/plain'\n\t\t});\n\n\t\tsaveAs(blob, `chat-${chat.chat.title}.txt`);\n\t};\n\n\tconst downloadPdf = async () => {\n\t\tconst history = chat.chat.history;\n\t\tconst messages = createMessagesList(history, history.currentId);\n\t\tconst blob = await downloadChatAsPDF(localStorage.token, chat.chat.title, messages);\n\n\t\t// Create a URL for the blob\n\t\tconst url = window.URL.createObjectURL(blob);\n\n\t\t// Create a link element to trigger the download\n\t\tconst a = document.createElement('a');\n\t\ta.href = url;\n\t\ta.download = `chat-${chat.chat.title}.pdf`;\n\n\t\t// Append the link to the body and click it programmatically\n\t\tdocument.body.appendChild(a);\n\t\ta.click();\n\n\t\t// Remove the link from the body\n\t\tdocument.body.removeChild(a);\n\n\t\t// Revoke the URL to release memory\n\t\twindow.URL.revokeObjectURL(url);\n\t};\n\n\tconst downloadJSONExport = async () => {\n\t\tif (chat.id) {\n\t\t\tlet chatObj = null;\n\n\t\t\tif (chat.id === 'local' || $temporaryChatEnabled) {\n\t\t\t\tchatObj = chat;\n\t\t\t} else {\n\t\t\t\tchatObj = await getChatById(localStorage.token, chat.id);\n\t\t\t}\n\n\t\t\tlet blob = new Blob([JSON.stringify([chatObj])], {\n\t\t\t\ttype: 'application/json'\n\t\t\t});\n\t\t\tsaveAs(blob, `chat-export-${Date.now()}.json`);\n\t\t}\n\t};\n</script>\n\n<Dropdown\n\ton:change={(e) => {\n\t\tif (e.detail === false) {\n\t\t\tonClose();\n\t\t}\n\t}}\n>\n\t<slot />\n\n\t<div slot=\"content\">\n\t\t<DropdownMenu.Content\n\t\t\tclass=\"w-full max-w-[200px] rounded-xl px-1 py-1.5  z-50 bg-white dark:bg-gray-850 dark:text-white shadow-lg\"\n\t\t\tsideOffset={8}\n\t\t\tside=\"bottom\"\n\t\t\talign=\"end\"\n\t\t\ttransition={flyAndScale}\n\t\t>\n\t\t\t<!-- <DropdownMenu.Item\n\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\ton:click={async () => {\n\t\t\t\t\tawait showSettings.set(!$showSettings);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tclass=\"size-4\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\td=\"M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.325.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 0 1 1.37.49l1.296 2.247a1.125 1.125 0 0 1-.26 1.431l-1.003.827c-.293.241-.438.613-.43.992a7.723 7.723 0 0 1 0 .255c-.008.378.137.75.43.991l1.004.827c.424.35.534.955.26 1.43l-1.298 2.247a1.125 1.125 0 0 1-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.47 6.47 0 0 1-.22.128c-.331.183-.581.495-.644.869l-.213 1.281c-.09.543-.56.94-1.11.94h-2.594c-.55 0-1.019-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 0 1-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 0 1-1.369-.49l-1.297-2.247a1.125 1.125 0 0 1 .26-1.431l1.004-.827c.292-.24.437-.613.43-.991a6.932 6.932 0 0 1 0-.255c.007-.38-.138-.751-.43-.992l-1.004-.827a1.125 1.125 0 0 1-.26-1.43l1.297-2.247a1.125 1.125 0 0 1 1.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.086.22-.128.332-.183.582-.495.644-.869l.214-1.28Z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\td=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t\t<div class=\"flex items-center\">{$i18n.t('Settings')}</div>\n\t\t\t</DropdownMenu.Item> -->\n\n\t\t\t{#if $mobile}\n\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\t\tid=\"chat-controls-button\"\n\t\t\t\t\ton:click={async () => {\n\t\t\t\t\t\tawait showControls.set(true);\n\t\t\t\t\t\tawait showOverview.set(false);\n\t\t\t\t\t\tawait showArtifacts.set(false);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<AdjustmentsHorizontal className=\" size-4\" strokeWidth=\"0.5\" />\n\t\t\t\t\t<div class=\"flex items-center\">{$i18n.t('Controls')}</div>\n\t\t\t\t</DropdownMenu.Item>\n\t\t\t{/if}\n\n\t\t\t{#if !$temporaryChatEnabled}\n\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\t\tid=\"chat-share-button\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tshareHandler();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\tclass=\"size-4\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\td=\"M15.75 4.5a3 3 0 1 1 .825 2.066l-8.421 4.679a3.002 3.002 0 0 1 0 1.51l8.421 4.679a3 3 0 1 1-.729 1.31l-8.421-4.678a3 3 0 1 1 0-4.132l8.421-4.679a3 3 0 0 1-.096-.755Z\"\n\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<div class=\"flex items-center\">{$i18n.t('Share')}</div>\n\t\t\t\t</DropdownMenu.Item>\n\t\t\t{/if}\n\n\t\t\t<DropdownMenu.Item\n\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\tid=\"chat-overview-button\"\n\t\t\t\ton:click={async () => {\n\t\t\t\t\tawait showControls.set(true);\n\t\t\t\t\tawait showOverview.set(true);\n\t\t\t\t\tawait showArtifacts.set(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Map className=\" size-4\" strokeWidth=\"1.5\" />\n\t\t\t\t<div class=\"flex items-center\">{$i18n.t('Overview')}</div>\n\t\t\t</DropdownMenu.Item>\n\n\t\t\t<DropdownMenu.Item\n\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\tid=\"chat-overview-button\"\n\t\t\t\ton:click={async () => {\n\t\t\t\t\tawait showControls.set(true);\n\t\t\t\t\tawait showArtifacts.set(true);\n\t\t\t\t\tawait showOverview.set(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Cube className=\" size-4\" strokeWidth=\"1.5\" />\n\t\t\t\t<div class=\"flex items-center\">{$i18n.t('Artifacts')}</div>\n\t\t\t</DropdownMenu.Item>\n\n\t\t\t<DropdownMenu.Sub>\n\t\t\t\t<DropdownMenu.SubTrigger\n\t\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tclass=\"size-4\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\td=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t<div class=\"flex items-center\">{$i18n.t('Download')}</div>\n\t\t\t\t</DropdownMenu.SubTrigger>\n\t\t\t\t<DropdownMenu.SubContent\n\t\t\t\t\tclass=\"w-full rounded-xl px-1 py-1.5 z-50 bg-white dark:bg-gray-850 dark:text-white shadow-lg\"\n\t\t\t\t\ttransition={flyAndScale}\n\t\t\t\t\tsideOffset={8}\n\t\t\t\t>\n\t\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\tdownloadJSONExport();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"flex items-center line-clamp-1\">{$i18n.t('Export chat (.json)')}</div>\n\t\t\t\t\t</DropdownMenu.Item>\n\t\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\tdownloadTxt();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"flex items-center line-clamp-1\">{$i18n.t('Plain text (.txt)')}</div>\n\t\t\t\t\t</DropdownMenu.Item>\n\n\t\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\tdownloadPdf();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"flex items-center line-clamp-1\">{$i18n.t('PDF document (.pdf)')}</div>\n\t\t\t\t\t</DropdownMenu.Item>\n\t\t\t\t</DropdownMenu.SubContent>\n\t\t\t</DropdownMenu.Sub>\n\n\t\t\t<DropdownMenu.Item\n\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\tid=\"chat-copy-button\"\n\t\t\t\ton:click={async () => {\n\t\t\t\t\tconst res = await copyToClipboard(await getChatAsText()).catch((e) => {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\ttoast.success($i18n.t('Copied to clipboard'));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Clipboard className=\" size-4\" strokeWidth=\"1.5\" />\n\t\t\t\t<div class=\"flex items-center\">{$i18n.t('Copy')}</div>\n\t\t\t</DropdownMenu.Item>\n\n\t\t\t{#if !$temporaryChatEnabled}\n\t\t\t\t<hr class=\"border-gray-100 dark:border-gray-850 my-0.5\" />\n\n\t\t\t\t<div class=\"flex p-1\">\n\t\t\t\t\t<Tags chatId={chat.id} />\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</DropdownMenu.Content>\n\t</div>\n</Dropdown>\n","<script lang=\"ts\">\n\timport { getContext } from 'svelte';\n\timport { toast } from 'svelte-sonner';\n\n\timport {\n\t\tWEBUI_NAME,\n\t\tchatId,\n\t\tmobile,\n\t\tsettings,\n\t\tshowArchivedChats,\n\t\tshowControls,\n\t\tshowSidebar,\n\t\ttemporaryChatEnabled,\n\t\tuser\n\t} from '$lib/stores';\n\n\timport { slide } from 'svelte/transition';\n\timport { page } from '$app/stores';\n\n\timport ShareChatModal from '../chat/ShareChatModal.svelte';\n\timport ModelSelector from '../chat/ModelSelector.svelte';\n\timport Tooltip from '../common/Tooltip.svelte';\n\timport Menu from '$lib/components/layout/Navbar/Menu.svelte';\n\timport UserMenu from '$lib/components/layout/Sidebar/UserMenu.svelte';\n\timport MenuLines from '../icons/MenuLines.svelte';\n\timport AdjustmentsHorizontal from '../icons/AdjustmentsHorizontal.svelte';\n\n\timport PencilSquare from '../icons/PencilSquare.svelte';\n\n\tconst i18n = getContext('i18n');\n\n\texport let initNewChat: Function;\n\texport let title: string = $WEBUI_NAME;\n\texport let shareEnabled: boolean = false;\n\n\texport let chat;\n\texport let selectedModels;\n\texport let showModelSelector = true;\n\n\tlet showShareChatModal = false;\n\tlet showDownloadChatModal = false;\n</script>\n\n<ShareChatModal bind:show={showShareChatModal} chatId={$chatId} />\n\n<nav class=\"sticky top-0 z-30 w-full px-1.5 py-1.5 -mb-8 flex items-center drag-region\">\n\t<div\n\t\tclass=\" bg-linear-to-b via-50% from-white via-white to-transparent dark:from-gray-900 dark:via-gray-900 dark:to-transparent pointer-events-none absolute inset-0 -bottom-7 z-[-1]\"\n\t></div>\n\n\t<div class=\" flex max-w-full w-full mx-auto px-1 pt-0.5 bg-transparent\">\n\t\t<div class=\"flex items-center w-full max-w-full\">\n\t\t\t<div\n\t\t\t\tclass=\"{$showSidebar\n\t\t\t\t\t? 'md:hidden'\n\t\t\t\t\t: ''} mr-1 self-start flex flex-none items-center text-gray-600 dark:text-gray-400\"\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tid=\"sidebar-toggle-button\"\n\t\t\t\t\tclass=\"cursor-pointer px-2 py-2 flex rounded-xl hover:bg-gray-50 dark:hover:bg-gray-850 transition\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tshowSidebar.set(!$showSidebar);\n\t\t\t\t\t}}\n\t\t\t\t\taria-label=\"Toggle Sidebar\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\" m-auto self-center\">\n\t\t\t\t\t\t<MenuLines />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tclass=\"flex-1 overflow-hidden max-w-full py-0.5\n\t\t\t{$showSidebar ? 'ml-1' : ''}\n\t\t\t\"\n\t\t\t>\n\t\t\t\t{#if showModelSelector}\n\t\t\t\t\t<ModelSelector bind:selectedModels showSetDefault={!shareEnabled} />\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t<div class=\"self-start flex flex-none items-center text-gray-600 dark:text-gray-400\">\n\t\t\t\t<!-- <div class=\"md:hidden flex self-center w-[1px] h-5 mx-2 bg-gray-300 dark:bg-stone-700\" /> -->\n\t\t\t\t{#if shareEnabled && chat && (chat.id || $temporaryChatEnabled)}\n\t\t\t\t\t<Menu\n\t\t\t\t\t\t{chat}\n\t\t\t\t\t\t{shareEnabled}\n\t\t\t\t\t\tshareHandler={() => {\n\t\t\t\t\t\t\tshowShareChatModal = !showShareChatModal;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdownloadHandler={() => {\n\t\t\t\t\t\t\tshowDownloadChatModal = !showDownloadChatModal;\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"flex cursor-pointer px-2 py-2 rounded-xl hover:bg-gray-50 dark:hover:bg-gray-850 transition\"\n\t\t\t\t\t\t\tid=\"chat-context-menu-button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\" m-auto self-center\">\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\t\tclass=\"size-5\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\t\t\td=\"M6.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0ZM12.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0ZM18.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Menu>\n\t\t\t\t<!-- {:else if $mobile && ($user.role === 'admin' || $user?.permissions?.chat?.controls)}\n\t\t\t\t\t<Tooltip content={$i18n.t('Controls')}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\" flex cursor-pointer px-2 py-2 rounded-xl hover:bg-gray-50 dark:hover:bg-gray-850 transition\"\n\t\t\t\t\t\t\ton:click={async () => {\n\t\t\t\t\t\t\t\tawait showControls.set(!$showControls);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\taria-label=\"Controls\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\" m-auto self-center\">\n\t\t\t\t\t\t\t\t<AdjustmentsHorizontal className=\" size-5\" strokeWidth=\"0.5\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Tooltip> -->\n\t\t\t\t{/if}\n\n\t\t\t\t<!-- {#if !$mobile && ($user.role === 'admin' || $user?.permissions?.chat?.controls)}\n\t\t\t\t\t<Tooltip content={$i18n.t('Controls')}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\" flex cursor-pointer px-2 py-2 rounded-xl hover:bg-gray-50 dark:hover:bg-gray-850 transition\"\n\t\t\t\t\t\t\ton:click={async () => {\n\t\t\t\t\t\t\t\tawait showControls.set(!$showControls);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\taria-label=\"Controls\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\" m-auto self-center\">\n\t\t\t\t\t\t\t\t<AdjustmentsHorizontal className=\" size-5\" strokeWidth=\"0.5\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t{/if} -->\n\n\t\t\t\t<Tooltip content={$i18n.t('New Chat')}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"new-chat-button\"\n\t\t\t\t\t\tclass=\" flex {$showSidebar\n\t\t\t\t\t\t\t? 'md:hidden'\n\t\t\t\t\t\t\t: ''} cursor-pointer px-2 py-2 rounded-xl text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-850 transition\"\n\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\tinitNewChat();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\taria-label=\"New Chat\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\" m-auto self-center\">\n\t\t\t\t\t\t\t<PencilSquare className=\" size-5\" strokeWidth=\"2\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t</Tooltip>\n\n\t\t\t\t{#if $user !== undefined}\n\t\t\t\t\t<UserMenu\n\t\t\t\t\t\tclassName=\"max-w-[200px]\"\n\t\t\t\t\t\trole={$user.role}\n\t\t\t\t\t\ton:show={(e) => {\n\t\t\t\t\t\t\tif (e.detail === 'archived-chat') {\n\t\t\t\t\t\t\t\tshowArchivedChats.set(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"select-none flex rounded-xl p-1.5 w-full hover:bg-gray-50 dark:hover:bg-gray-850 transition\"\n\t\t\t\t\t\t\taria-label=\"User Menu\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\" self-center\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={$user.profile_image_url}\n\t\t\t\t\t\t\t\t\tclass=\"size-6 object-cover rounded-full\"\n\t\t\t\t\t\t\t\t\talt=\"User profile\"\n\t\t\t\t\t\t\t\t\tdraggable=\"false\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</UserMenu>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</nav>\n","<script>import { getContext } from 'svelte';\nimport cc from 'classcat';\nimport { Position, XYHandle, isMouseEvent, areConnectionMapsEqual, handleConnectionChange, ConnectionMode } from '@xyflow/system';\nimport { useStore } from '../../store';\nexport let id = undefined;\nexport let type = 'source';\nexport let position = Position.Top;\nexport let style = undefined;\nexport let isValidConnection = undefined;\nexport let onconnect = undefined;\nexport let ondisconnect = undefined;\n// @todo implement connectablestart, connectableend\n// export let isConnectableStart: $$Props['isConnectableStart'] = undefined;\n// export let isConnectableEnd: $$Props['isConnectableEnd'] = undefined;\nlet isConnectableProp = undefined;\nexport { isConnectableProp as isConnectable };\nlet className = undefined;\nexport { className as class };\n$: isTarget = type === 'target';\nconst nodeId = getContext('svelteflow__node_id');\nconst connectable = getContext('svelteflow__node_connectable');\n$: isConnectable = isConnectableProp !== undefined ? isConnectableProp : $connectable;\n$: handleId = id || null;\nconst store = useStore();\nconst { connectionMode, domNode, nodeLookup, connectionRadius, viewport, isValidConnection: isValidConnectionStore, lib, addEdge, onedgecreate, panBy, cancelConnection, updateConnection, autoPanOnConnect, edges, connectionLookup, onconnect: onConnectAction, onconnectstart: onConnectStartAction, onconnectend: onConnectEndAction, flowId, connection } = store;\nfunction onPointerDown(event) {\n    const isMouseTriggered = isMouseEvent(event);\n    if ((isMouseTriggered && event.button === 0) || !isMouseTriggered) {\n        XYHandle.onPointerDown(event, {\n            handleId,\n            nodeId,\n            isTarget,\n            connectionRadius: $connectionRadius,\n            domNode: $domNode,\n            nodeLookup: $nodeLookup,\n            connectionMode: $connectionMode,\n            lib: $lib,\n            autoPanOnConnect: $autoPanOnConnect,\n            flowId: $flowId,\n            isValidConnection: isValidConnection ?? $isValidConnectionStore,\n            updateConnection,\n            cancelConnection,\n            panBy,\n            onConnect: (connection) => {\n                const edge = $onedgecreate ? $onedgecreate(connection) : connection;\n                if (!edge) {\n                    return;\n                }\n                addEdge(edge);\n                $onConnectAction?.(connection);\n            },\n            onConnectStart: (event, startParams) => {\n                $onConnectStartAction?.(event, {\n                    nodeId: startParams.nodeId,\n                    handleId: startParams.handleId,\n                    handleType: startParams.handleType\n                });\n            },\n            onConnectEnd: (event, connectionState) => {\n                $onConnectEndAction?.(event, connectionState);\n            },\n            getTransform: () => [$viewport.x, $viewport.y, $viewport.zoom],\n            getFromHandle: () => $connection.fromHandle\n        });\n    }\n}\nlet prevConnections = null;\nlet connections;\n$: if (onconnect || ondisconnect) {\n    // connectionLookup is not reactive, so we use edges to get notified about updates\n    $edges;\n    connections = $connectionLookup.get(`${nodeId}-${type}-${id || null}`);\n}\n$: {\n    if (prevConnections && !areConnectionMapsEqual(connections, prevConnections)) {\n        const _connections = connections ?? new Map();\n        handleConnectionChange(prevConnections, _connections, ondisconnect);\n        handleConnectionChange(_connections, prevConnections, onconnect);\n    }\n    prevConnections = connections ?? new Map();\n}\n$: connectionInProcess = !!$connection.fromHandle;\n$: connectingFrom =\n    $connection.fromHandle?.nodeId === nodeId &&\n        $connection.fromHandle?.type === type &&\n        $connection.fromHandle?.id === handleId;\n$: connectingTo =\n    $connection.toHandle?.nodeId === nodeId &&\n        $connection.toHandle?.type === type &&\n        $connection.toHandle?.id === handleId;\n$: isPossibleEndHandle =\n    $connectionMode === ConnectionMode.Strict\n        ? $connection.fromHandle?.type !== type\n        : nodeId !== $connection.fromHandle?.nodeId || handleId !== $connection.fromHandle?.id;\n$: valid = connectingTo && $connection.isValid;\n</script>\n\n<!--\n@component\nThe Handle component is the part of a node that can be used to connect nodes.\n-->\n<div\n  data-handleid={handleId}\n  data-nodeid={nodeId}\n  data-handlepos={position}\n  data-id=\"{$flowId}-{nodeId}-{id || null}-{type}\"\n  class={cc([\n    'svelte-flow__handle',\n    `svelte-flow__handle-${position}`,\n    'nodrag',\n    'nopan',\n    position,\n    className\n  ])}\n  class:valid\n  class:connectingto={connectingTo}\n  class:connectingfrom={connectingFrom}\n  class:source={!isTarget}\n  class:target={isTarget}\n  class:connectablestart={isConnectable}\n  class:connectableend={isConnectable}\n  class:connectable={isConnectable}\n  class:connectionindicator={isConnectable && (!connectionInProcess || isPossibleEndHandle)}\n  on:mousedown={onPointerDown}\n  on:touchstart={onPointerDown}\n  {style}\n  role=\"button\"\n  tabindex=\"-1\"\n>\n  <slot />\n</div>\n","<script>import { Position } from '@xyflow/system';\nimport { Handle } from '../Handle';\nexport let data = { label: 'Node' };\nexport let targetPosition = undefined;\nexport let sourcePosition = undefined;\n// this is a workaround for suppressing the warning about unused props\n$$restProps;\n</script>\n\n<Handle type=\"target\" position={targetPosition ?? Position.Top} />\n{data?.label}\n<Handle type=\"source\" position={sourcePosition ?? Position.Bottom} />\n","<script>import { Position } from '@xyflow/system';\nimport { Handle } from '../Handle';\nexport let data = { label: 'Node' };\nexport let sourcePosition = undefined;\n// this is a workaround for suppressing the warning about unused props\n$$restProps;\n</script>\n\n{data?.label}\n<Handle type=\"source\" position={sourcePosition ?? Position.Bottom} />\n","<script>import { Position } from '@xyflow/system';\nimport { Handle } from '../Handle';\nexport let data = { label: 'Node' };\nexport let targetPosition = undefined;\n// this is a workaround for suppressing the warning about unused props\n$$restProps;\n</script>\n\n{data?.label}\n<Handle type=\"target\" position={targetPosition ?? Position.Top} />\n","<script>import portal from '../../actions/portal';\nimport { useStore } from '../../store';\nconst { domNode } = useStore();\n</script>\n\n<div use:portal={{ target: '.svelte-flow__edgelabel-renderer', domNode: $domNode }}>\n  <slot />\n</div>\n","import { get } from 'svelte/store';\nimport { errorMessages } from '@xyflow/system';\nimport { useStore } from '../store';\nexport function useHandleEdgeSelect() {\n    const { edgeLookup, selectionRect, selectionRectMode, multiselectionKeyPressed, addSelectedEdges, unselectNodesAndEdges, elementsSelectable } = useStore();\n    return (id) => {\n        const edge = get(edgeLookup).get(id);\n        if (!edge) {\n            console.warn('012', errorMessages['error012'](id));\n            return;\n        }\n        const selectable = edge.selectable || (get(elementsSelectable) && typeof edge.selectable === 'undefined');\n        if (selectable) {\n            selectionRect.set(null);\n            selectionRectMode.set(null);\n            if (!edge.selected) {\n                addSelectedEdges([id]);\n            }\n            else if (edge.selected && get(multiselectionKeyPressed)) {\n                unselectNodesAndEdges({ nodes: [], edges: [edge] });\n            }\n        }\n    };\n}\n","<script>import { getContext } from 'svelte';\nimport { EdgeLabelRenderer } from '../EdgeLabelRenderer';\nimport { useHandleEdgeSelect } from '../../hooks/useHandleEdgeSelect';\nexport let style = undefined;\nexport let x = undefined;\nexport let y = undefined;\nconst handleEdgeSelect = useHandleEdgeSelect();\nconst id = getContext('svelteflow__edge_id');\n</script>\n\n<EdgeLabelRenderer>\n  <div\n    class=\"svelte-flow__edge-label\"\n    style:transform=\"translate(-50%, -50%) translate({x}px,{y}px)\"\n    style={'pointer-events: all;' + style}\n    role=\"button\"\n    tabindex=\"-1\"\n    on:keyup={() => {}}\n    on:click={() => {\n      if (id) handleEdgeSelect(id);\n    }}\n  >\n    <slot />\n  </div>\n</EdgeLabelRenderer>\n","<script>import cc from 'classcat';\nimport EdgeLabel from '../EdgeLabel/EdgeLabel.svelte';\nexport let id = undefined;\nexport let path;\nexport let label = undefined;\nexport let labelX = undefined;\nexport let labelY = undefined;\nexport let labelStyle = undefined;\nexport let markerStart = undefined;\nexport let markerEnd = undefined;\nexport let style = undefined;\nexport let interactionWidth = 20;\nlet className = undefined;\nexport { className as class };\nlet interactionWidthValue = interactionWidth === undefined ? 20 : interactionWidth;\n</script>\n\n<path\n  {id}\n  d={path}\n  class={cc(['svelte-flow__edge-path', className])}\n  marker-start={markerStart}\n  marker-end={markerEnd}\n  fill=\"none\"\n  {style}\n/>\n\n{#if interactionWidthValue}\n  <path\n    d={path}\n    stroke-opacity={0}\n    stroke-width={interactionWidthValue}\n    fill=\"none\"\n    class=\"svelte-flow__edge-interaction\"\n  />\n{/if}\n\n{#if label}\n  <EdgeLabel x={labelX} y={labelY} style={labelStyle}>\n    {label}\n  </EdgeLabel>\n{/if}\n","<script>import { getBezierPath } from '@xyflow/system';\nimport { BaseEdge } from '../BaseEdge';\nexport let label = undefined;\nexport let labelStyle = undefined;\nexport let style = undefined;\nexport let markerStart = undefined;\nexport let markerEnd = undefined;\nexport let interactionWidth = undefined;\nexport let sourceX;\nexport let sourceY;\nexport let sourcePosition;\nexport let targetX;\nexport let targetY;\nexport let targetPosition;\n$: [path, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition,\n    targetPosition\n});\n// this is a workaround for suppressing the warning about unused props\n$$restProps;\n</script>\n\n<BaseEdge\n  {path}\n  {labelX}\n  {labelY}\n  {label}\n  {labelStyle}\n  {markerStart}\n  {markerEnd}\n  {interactionWidth}\n  {style}\n/>\n","<script>import { getSmoothStepPath } from '@xyflow/system';\nimport { BaseEdge } from '../BaseEdge';\nexport let label = undefined;\nexport let labelStyle = undefined;\nexport let style = undefined;\nexport let markerStart = undefined;\nexport let markerEnd = undefined;\nexport let interactionWidth = undefined;\nexport let sourceX;\nexport let sourceY;\nexport let sourcePosition;\nexport let targetX;\nexport let targetY;\nexport let targetPosition;\n$: [path, labelX, labelY] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition,\n    targetPosition\n});\n// this is a workaround for suppressing the warning about unused props\n$$restProps;\n</script>\n\n<BaseEdge\n  {path}\n  {labelX}\n  {labelY}\n  {label}\n  {labelStyle}\n  {markerStart}\n  {markerEnd}\n  {interactionWidth}\n  {style}\n/>\n","<script>import { getStraightPath } from '@xyflow/system';\nimport { BaseEdge } from '../BaseEdge';\nexport let label = undefined;\nexport let labelStyle = undefined;\nexport let style = undefined;\nexport let markerStart = undefined;\nexport let markerEnd = undefined;\nexport let interactionWidth = undefined;\nexport let sourceX;\nexport let sourceY;\nexport let targetX;\nexport let targetY;\n$: [path, labelX, labelY] = getStraightPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n});\n// this is a workaround for suppressing the warning about unused props\n$$restProps;\n</script>\n\n<BaseEdge\n  {path}\n  {labelX}\n  {labelY}\n  {label}\n  {labelStyle}\n  {markerStart}\n  {markerEnd}\n  {interactionWidth}\n  {style}\n/>\n","<script>import { getSmoothStepPath } from '@xyflow/system';\nimport { BaseEdge } from '../BaseEdge';\nexport let label = undefined;\nexport let labelStyle = undefined;\nexport let style = undefined;\nexport let markerStart = undefined;\nexport let markerEnd = undefined;\nexport let interactionWidth = undefined;\nexport let sourceX;\nexport let sourceY;\nexport let sourcePosition;\nexport let targetX;\nexport let targetY;\nexport let targetPosition;\n$: [path, labelX, labelY] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition,\n    targetPosition,\n    borderRadius: 0\n});\n// this is a workaround for suppressing the warning about unused props\n$$restProps;\n</script>\n\n<BaseEdge\n  {path}\n  {labelX}\n  {labelY}\n  {label}\n  {labelStyle}\n  {markerStart}\n  {markerEnd}\n  {interactionWidth}\n  {style}\n/>\n","import { writable, get } from 'svelte/store';\nimport { adoptUserNodes, updateConnectionLookup, infiniteExtent } from '@xyflow/system';\n// we need to sync the user nodes and the internal nodes so that the user can receive the updates\n// made by Svelte Flow (like dragging or selecting a node).\nexport function syncNodeStores(nodesStore, userNodesStore) {\n    const nodesStoreSetter = nodesStore.set;\n    const userNodesStoreSetter = userNodesStore.set;\n    const currentNodesStore = get(nodesStore);\n    const currentUserNodesStore = get(userNodesStore);\n    // depending how the user initializes the nodes, we need to decide if we want to use\n    // the user nodes or the internal nodes for initialization. A user can use a SvelteFlowProvider\n    // without providing any nodes, in that case we want to use the nodes passed by the user.\n    // By default we are using the store nodes, because they already have the absolute positions.\n    const initWithUserNodes = currentNodesStore.length === 0 && currentUserNodesStore.length > 0;\n    let val = initWithUserNodes ? currentUserNodesStore : currentNodesStore;\n    nodesStore.set(val);\n    const _set = (nds) => {\n        const updatedNodes = nodesStoreSetter(nds);\n        val = updatedNodes;\n        userNodesStoreSetter(val);\n        return updatedNodes;\n    };\n    nodesStore.set = userNodesStore.set = _set;\n    nodesStore.update = userNodesStore.update = (fn) => _set(fn(val));\n}\n// same for edges\nexport function syncEdgeStores(edgesStore, userEdgesStore) {\n    const nodesStoreSetter = edgesStore.set;\n    const userEdgesStoreSetter = userEdgesStore.set;\n    let val = get(userEdgesStore);\n    edgesStore.set(val);\n    const _set = (eds) => {\n        nodesStoreSetter(eds);\n        userEdgesStoreSetter(eds);\n        val = eds;\n    };\n    edgesStore.set = userEdgesStore.set = _set;\n    edgesStore.update = userEdgesStore.update = (fn) => _set(fn(val));\n}\n// it is possible to pass a viewport store to SvelteFlow for having more control\n// if that's the case we need to sync the internal viewport with the user viewport\nexport const syncViewportStores = (panZoomStore, viewportStore, userViewportStore) => {\n    if (!userViewportStore) {\n        return;\n    }\n    const panZoom = get(panZoomStore);\n    const viewportStoreSetter = viewportStore.set;\n    const userViewportStoreSetter = userViewportStore.set;\n    let val = userViewportStore ? get(userViewportStore) : { x: 0, y: 0, zoom: 1 };\n    viewportStore.set(val);\n    viewportStore.set = (vp) => {\n        viewportStoreSetter(vp);\n        userViewportStoreSetter(vp);\n        val = vp;\n        return vp;\n    };\n    userViewportStore.set = (vp) => {\n        panZoom?.syncViewport(vp);\n        viewportStoreSetter(vp);\n        userViewportStoreSetter(vp);\n        val = vp;\n        return vp;\n    };\n    viewportStore.update = (fn) => {\n        viewportStore.set(fn(val));\n    };\n    userViewportStore.update = (fn) => {\n        userViewportStore.set(fn(val));\n    };\n};\n// we are creating a custom store for the internals nodes in order to update the zIndex and positionAbsolute.\n// The user only passes in relative positions, so we need to calculate the absolute positions based on the parent nodes.\nexport const createNodesStore = (nodes, nodeLookup, parentLookup, nodeOrigin = [0, 0], nodeExtent = infiniteExtent) => {\n    const { subscribe, set, update } = writable([]);\n    let value = nodes;\n    let defaults = {};\n    let elevateNodesOnSelect = true;\n    const _set = (nds) => {\n        adoptUserNodes(nds, nodeLookup, parentLookup, {\n            elevateNodesOnSelect,\n            nodeOrigin,\n            nodeExtent,\n            defaults,\n            checkEquality: false\n        });\n        value = nds;\n        set(value);\n        return value;\n    };\n    const _update = (fn) => _set(fn(value));\n    const setDefaultOptions = (options) => {\n        defaults = options;\n    };\n    const setOptions = (options) => {\n        elevateNodesOnSelect = options.elevateNodesOnSelect ?? elevateNodesOnSelect;\n    };\n    _set(value);\n    return {\n        subscribe,\n        set: _set,\n        update: _update,\n        setDefaultOptions,\n        setOptions\n    };\n};\nexport const createEdgesStore = (edges, connectionLookup, edgeLookup, defaultOptions) => {\n    const { subscribe, set, update } = writable([]);\n    let value = edges;\n    let defaults = defaultOptions || {};\n    const _set = (eds) => {\n        const nextEdges = defaults ? eds.map((edge) => ({ ...defaults, ...edge })) : eds;\n        updateConnectionLookup(connectionLookup, edgeLookup, nextEdges);\n        value = nextEdges;\n        set(value);\n    };\n    const _update = (fn) => _set(fn(value));\n    const setDefaultOptions = (options) => {\n        defaults = options;\n    };\n    _set(value);\n    return {\n        subscribe,\n        set: _set,\n        update: _update,\n        setDefaultOptions\n    };\n};\n","import { readable, writable } from 'svelte/store';\nimport { infiniteExtent, SelectionMode, ConnectionMode, ConnectionLineType, devWarn, adoptUserNodes, getViewportForBounds, updateConnectionLookup, initialConnection, getInternalNodesBounds } from '@xyflow/system';\nimport DefaultNode from '../components/nodes/DefaultNode.svelte';\nimport InputNode from '../components/nodes/InputNode.svelte';\nimport OutputNode from '../components/nodes/OutputNode.svelte';\nimport GroupNode from '../components/nodes/GroupNode.svelte';\nimport { BezierEdgeInternal, SmoothStepEdgeInternal, StraightEdgeInternal, StepEdgeInternal } from '../components/edges';\nimport { createNodesStore, createEdgesStore } from './utils';\nexport const initialNodeTypes = {\n    input: InputNode,\n    output: OutputNode,\n    default: DefaultNode,\n    group: GroupNode\n};\nexport const initialEdgeTypes = {\n    straight: StraightEdgeInternal,\n    smoothstep: SmoothStepEdgeInternal,\n    default: BezierEdgeInternal,\n    step: StepEdgeInternal\n};\nexport const getInitialStore = ({ nodes = [], edges = [], width, height, fitView, nodeOrigin, nodeExtent }) => {\n    const nodeLookup = new Map();\n    const parentLookup = new Map();\n    const connectionLookup = new Map();\n    const edgeLookup = new Map();\n    const storeNodeOrigin = nodeOrigin ?? [0, 0];\n    const storeNodeExtent = nodeExtent ?? infiniteExtent;\n    adoptUserNodes(nodes, nodeLookup, parentLookup, {\n        nodeExtent: storeNodeExtent,\n        nodeOrigin: storeNodeOrigin,\n        elevateNodesOnSelect: false,\n        checkEquality: false\n    });\n    updateConnectionLookup(connectionLookup, edgeLookup, edges);\n    let viewport = { x: 0, y: 0, zoom: 1 };\n    if (fitView && width && height) {\n        const bounds = getInternalNodesBounds(nodeLookup, {\n            filter: (node) => !!((node.width || node.initialWidth) && (node.height || node.initialHeight))\n        });\n        viewport = getViewportForBounds(bounds, width, height, 0.5, 2, 0.1);\n    }\n    return {\n        flowId: writable(null),\n        nodes: createNodesStore(nodes, nodeLookup, parentLookup, storeNodeOrigin, storeNodeExtent),\n        nodeLookup: readable(nodeLookup),\n        parentLookup: readable(parentLookup),\n        edgeLookup: readable(edgeLookup),\n        visibleNodes: readable([]),\n        edges: createEdgesStore(edges, connectionLookup, edgeLookup),\n        visibleEdges: readable([]),\n        connectionLookup: readable(connectionLookup),\n        height: writable(500),\n        width: writable(500),\n        minZoom: writable(0.5),\n        maxZoom: writable(2),\n        nodeOrigin: writable(storeNodeOrigin),\n        nodeDragThreshold: writable(1),\n        nodeExtent: writable(storeNodeExtent),\n        translateExtent: writable(infiniteExtent),\n        autoPanOnNodeDrag: writable(true),\n        autoPanOnConnect: writable(true),\n        fitViewOnInit: writable(false),\n        fitViewOnInitDone: writable(false),\n        fitViewOptions: writable(undefined),\n        panZoom: writable(null),\n        snapGrid: writable(null),\n        dragging: writable(false),\n        selectionRect: writable(null),\n        selectionKeyPressed: writable(false),\n        multiselectionKeyPressed: writable(false),\n        deleteKeyPressed: writable(false),\n        panActivationKeyPressed: writable(false),\n        zoomActivationKeyPressed: writable(false),\n        selectionRectMode: writable(null),\n        selectionMode: writable(SelectionMode.Partial),\n        nodeTypes: writable(initialNodeTypes),\n        edgeTypes: writable(initialEdgeTypes),\n        viewport: writable(viewport),\n        connectionMode: writable(ConnectionMode.Strict),\n        domNode: writable(null),\n        connection: readable(initialConnection),\n        connectionLineType: writable(ConnectionLineType.Bezier),\n        connectionRadius: writable(20),\n        isValidConnection: writable(() => true),\n        nodesDraggable: writable(true),\n        nodesConnectable: writable(true),\n        elementsSelectable: writable(true),\n        selectNodesOnDrag: writable(true),\n        markers: readable([]),\n        defaultMarkerColor: writable('#b1b1b7'),\n        lib: readable('svelte'),\n        onlyRenderVisibleElements: writable(false),\n        onerror: writable(devWarn),\n        ondelete: writable(undefined),\n        onedgecreate: writable(undefined),\n        onconnect: writable(undefined),\n        onconnectstart: writable(undefined),\n        onconnectend: writable(undefined),\n        onbeforedelete: writable(undefined),\n        nodesInitialized: writable(false),\n        edgesInitialized: writable(false),\n        viewportInitialized: writable(false),\n        initialized: readable(false)\n    };\n};\n","import { derived } from 'svelte/store';\nimport { isEdgeVisible, getEdgePosition, getElevatedEdgeZIndex } from '@xyflow/system';\nexport function getVisibleEdges(store) {\n    const visibleEdges = derived([\n        store.edges,\n        store.nodes,\n        store.nodeLookup,\n        store.onlyRenderVisibleElements,\n        store.viewport,\n        store.width,\n        store.height\n    ], ([edges, , nodeLookup, onlyRenderVisibleElements, viewport, width, height]) => {\n        const visibleEdges = onlyRenderVisibleElements && width && height\n            ? edges.filter((edge) => {\n                const sourceNode = nodeLookup.get(edge.source);\n                const targetNode = nodeLookup.get(edge.target);\n                return (sourceNode &&\n                    targetNode &&\n                    isEdgeVisible({\n                        sourceNode,\n                        targetNode,\n                        width,\n                        height,\n                        transform: [viewport.x, viewport.y, viewport.zoom]\n                    }));\n            })\n            : edges;\n        return visibleEdges;\n    });\n    return derived([visibleEdges, store.nodes, store.nodeLookup, store.connectionMode, store.onerror], ([visibleEdges, , nodeLookup, connectionMode, onerror]) => {\n        const layoutedEdges = visibleEdges.reduce((res, edge) => {\n            const sourceNode = nodeLookup.get(edge.source);\n            const targetNode = nodeLookup.get(edge.target);\n            if (!sourceNode || !targetNode) {\n                return res;\n            }\n            const edgePosition = getEdgePosition({\n                id: edge.id,\n                sourceNode,\n                targetNode,\n                sourceHandle: edge.sourceHandle || null,\n                targetHandle: edge.targetHandle || null,\n                connectionMode,\n                onError: onerror\n            });\n            if (edgePosition) {\n                res.push({\n                    ...edge,\n                    zIndex: getElevatedEdgeZIndex({\n                        selected: edge.selected,\n                        zIndex: edge.zIndex,\n                        sourceNode,\n                        targetNode,\n                        elevateOnSelect: false\n                    }),\n                    ...edgePosition\n                });\n            }\n            return res;\n        }, []);\n        return layoutedEdges;\n    });\n}\n","import { derived } from 'svelte/store';\nimport { getNodesInside } from '@xyflow/system';\nexport function getVisibleNodes(store) {\n    return derived([\n        store.nodeLookup,\n        store.onlyRenderVisibleElements,\n        store.width,\n        store.height,\n        store.viewport,\n        store.nodes\n    ], ([nodeLookup, onlyRenderVisibleElements, width, height, viewport]) => {\n        const transform = [viewport.x, viewport.y, viewport.zoom];\n        return onlyRenderVisibleElements\n            ? getNodesInside(nodeLookup, { x: 0, y: 0, width, height }, transform, true)\n            : Array.from(nodeLookup.values());\n    });\n}\n","import { getContext, setContext } from 'svelte';\nimport { derived, get, writable } from 'svelte/store';\nimport { createMarkerIds, fitView as fitViewSystem, getElementsToRemove, panBy as panBySystem, updateNodeInternals as updateNodeInternalsSystem, addEdge as addEdgeUtil, initialConnection, errorMessages, pointToRendererPoint, getFitViewNodes } from '@xyflow/system';\nimport { initialEdgeTypes, initialNodeTypes, getInitialStore } from './initial-store';\nimport { syncNodeStores, syncEdgeStores, syncViewportStores } from './utils';\nimport { getVisibleEdges } from './visible-edges';\nimport { getVisibleNodes } from './visible-nodes';\nexport const key = Symbol();\nexport function createStore({ nodes, edges, width, height, fitView: fitViewOnCreate, nodeOrigin, nodeExtent }) {\n    const store = getInitialStore({\n        nodes,\n        edges,\n        width,\n        height,\n        fitView: fitViewOnCreate,\n        nodeOrigin,\n        nodeExtent\n    });\n    function setNodeTypes(nodeTypes) {\n        store.nodeTypes.set({\n            ...initialNodeTypes,\n            ...nodeTypes\n        });\n    }\n    function setEdgeTypes(edgeTypes) {\n        store.edgeTypes.set({\n            ...initialEdgeTypes,\n            ...edgeTypes\n        });\n    }\n    function addEdge(edgeParams) {\n        const edges = get(store.edges);\n        store.edges.set(addEdgeUtil(edgeParams, edges));\n    }\n    const updateNodePositions = (nodeDragItems, dragging = false) => {\n        const nodeLookup = get(store.nodeLookup);\n        for (const [id, dragItem] of nodeDragItems) {\n            const node = nodeLookup.get(id)?.internals.userNode;\n            if (!node) {\n                continue;\n            }\n            node.position = dragItem.position;\n            node.dragging = dragging;\n        }\n        store.nodes.update((nds) => nds);\n    };\n    function updateNodeInternals(updates) {\n        const nodeLookup = get(store.nodeLookup);\n        const { changes, updatedInternals } = updateNodeInternalsSystem(updates, nodeLookup, get(store.parentLookup), get(store.domNode), get(store.nodeOrigin));\n        if (!updatedInternals) {\n            return;\n        }\n        if (!get(store.fitViewOnInitDone) && get(store.fitViewOnInit)) {\n            const fitViewOptions = get(store.fitViewOptions);\n            const fitViewOnInitDone = fitViewSync({\n                ...fitViewOptions,\n                nodes: fitViewOptions?.nodes\n            });\n            store.fitViewOnInitDone.set(fitViewOnInitDone);\n        }\n        for (const change of changes) {\n            const node = nodeLookup.get(change.id)?.internals.userNode;\n            if (!node) {\n                continue;\n            }\n            switch (change.type) {\n                case 'dimensions': {\n                    const measured = { ...node.measured, ...change.dimensions };\n                    if (change.setAttributes) {\n                        node.width = change.dimensions?.width ?? node.width;\n                        node.height = change.dimensions?.height ?? node.height;\n                    }\n                    node.measured = measured;\n                    break;\n                }\n                case 'position':\n                    node.position = change.position ?? node.position;\n                    break;\n            }\n        }\n        store.nodes.update((nds) => nds);\n        if (!get(store.nodesInitialized)) {\n            store.nodesInitialized.set(true);\n        }\n    }\n    function fitView(options) {\n        const panZoom = get(store.panZoom);\n        if (!panZoom) {\n            return Promise.resolve(false);\n        }\n        const fitViewNodes = getFitViewNodes(get(store.nodeLookup), options);\n        return fitViewSystem({\n            nodes: fitViewNodes,\n            width: get(store.width),\n            height: get(store.height),\n            minZoom: get(store.minZoom),\n            maxZoom: get(store.maxZoom),\n            panZoom\n        }, options);\n    }\n    function fitViewSync(options) {\n        const panZoom = get(store.panZoom);\n        if (!panZoom) {\n            return false;\n        }\n        const fitViewNodes = getFitViewNodes(get(store.nodeLookup), options);\n        fitViewSystem({\n            nodes: fitViewNodes,\n            width: get(store.width),\n            height: get(store.height),\n            minZoom: get(store.minZoom),\n            maxZoom: get(store.maxZoom),\n            panZoom\n        }, options);\n        return fitViewNodes.size > 0;\n    }\n    function zoomBy(factor, options) {\n        const panZoom = get(store.panZoom);\n        if (!panZoom) {\n            return Promise.resolve(false);\n        }\n        return panZoom.scaleBy(factor, options);\n    }\n    function zoomIn(options) {\n        return zoomBy(1.2, options);\n    }\n    function zoomOut(options) {\n        return zoomBy(1 / 1.2, options);\n    }\n    function setMinZoom(minZoom) {\n        const panZoom = get(store.panZoom);\n        if (panZoom) {\n            panZoom.setScaleExtent([minZoom, get(store.maxZoom)]);\n            store.minZoom.set(minZoom);\n        }\n    }\n    function setMaxZoom(maxZoom) {\n        const panZoom = get(store.panZoom);\n        if (panZoom) {\n            panZoom.setScaleExtent([get(store.minZoom), maxZoom]);\n            store.maxZoom.set(maxZoom);\n        }\n    }\n    function setTranslateExtent(extent) {\n        const panZoom = get(store.panZoom);\n        if (panZoom) {\n            panZoom.setTranslateExtent(extent);\n            store.translateExtent.set(extent);\n        }\n    }\n    function resetSelectedElements(elements) {\n        let elementsChanged = false;\n        elements.forEach((element) => {\n            if (element.selected) {\n                element.selected = false;\n                elementsChanged = true;\n            }\n        });\n        return elementsChanged;\n    }\n    function setPaneClickDistance(distance) {\n        get(store.panZoom)?.setClickDistance(distance);\n    }\n    function unselectNodesAndEdges(params) {\n        const resetNodes = resetSelectedElements(params?.nodes || get(store.nodes));\n        if (resetNodes)\n            store.nodes.set(get(store.nodes));\n        const resetEdges = resetSelectedElements(params?.edges || get(store.edges));\n        if (resetEdges)\n            store.edges.set(get(store.edges));\n    }\n    store.deleteKeyPressed.subscribe(async (deleteKeyPressed) => {\n        if (deleteKeyPressed) {\n            const nodes = get(store.nodes);\n            const edges = get(store.edges);\n            const selectedNodes = nodes.filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            const { nodes: matchingNodes, edges: matchingEdges } = await getElementsToRemove({\n                nodesToRemove: selectedNodes,\n                edgesToRemove: selectedEdges,\n                nodes,\n                edges,\n                onBeforeDelete: get(store.onbeforedelete)\n            });\n            if (matchingNodes.length || matchingEdges.length) {\n                store.nodes.update((nds) => nds.filter((node) => !matchingNodes.some((mN) => mN.id === node.id)));\n                store.edges.update((eds) => eds.filter((edge) => !matchingEdges.some((mE) => mE.id === edge.id)));\n                get(store.ondelete)?.({\n                    nodes: matchingNodes,\n                    edges: matchingEdges\n                });\n            }\n        }\n    });\n    function addSelectedNodes(ids) {\n        const isMultiSelection = get(store.multiselectionKeyPressed);\n        store.nodes.update((ns) => ns.map((node) => {\n            const nodeWillBeSelected = ids.includes(node.id);\n            const selected = isMultiSelection\n                ? node.selected || nodeWillBeSelected\n                : nodeWillBeSelected;\n            // we need to mutate the node here in order to have the correct selected state in the drag handler\n            node.selected = selected;\n            return node;\n        }));\n        if (!isMultiSelection) {\n            store.edges.update((es) => es.map((edge) => {\n                edge.selected = false;\n                return edge;\n            }));\n        }\n    }\n    function addSelectedEdges(ids) {\n        const isMultiSelection = get(store.multiselectionKeyPressed);\n        store.edges.update((edges) => edges.map((edge) => {\n            const edgeWillBeSelected = ids.includes(edge.id);\n            const selected = isMultiSelection\n                ? edge.selected || edgeWillBeSelected\n                : edgeWillBeSelected;\n            edge.selected = selected;\n            return edge;\n        }));\n        if (!isMultiSelection) {\n            store.nodes.update((ns) => ns.map((node) => {\n                node.selected = false;\n                return node;\n            }));\n        }\n    }\n    function handleNodeSelection(id) {\n        const node = get(store.nodes)?.find((n) => n.id === id);\n        if (!node) {\n            console.warn('012', errorMessages['error012'](id));\n            return;\n        }\n        store.selectionRect.set(null);\n        store.selectionRectMode.set(null);\n        if (!node.selected) {\n            addSelectedNodes([id]);\n        }\n        else if (node.selected && get(store.multiselectionKeyPressed)) {\n            unselectNodesAndEdges({ nodes: [node], edges: [] });\n        }\n    }\n    function panBy(delta) {\n        const viewport = get(store.viewport);\n        return panBySystem({\n            delta,\n            panZoom: get(store.panZoom),\n            transform: [viewport.x, viewport.y, viewport.zoom],\n            translateExtent: get(store.translateExtent),\n            width: get(store.width),\n            height: get(store.height)\n        });\n    }\n    const _connection = writable(initialConnection);\n    const updateConnection = (newConnection) => {\n        _connection.set({ ...newConnection });\n    };\n    function cancelConnection() {\n        _connection.set(initialConnection);\n    }\n    function reset() {\n        store.fitViewOnInitDone.set(false);\n        store.selectionRect.set(null);\n        store.selectionRectMode.set(null);\n        store.snapGrid.set(null);\n        store.isValidConnection.set(() => true);\n        unselectNodesAndEdges();\n        cancelConnection();\n    }\n    return {\n        // state\n        ...store,\n        // derived state\n        visibleEdges: getVisibleEdges(store),\n        visibleNodes: getVisibleNodes(store),\n        connection: derived([_connection, store.viewport], ([connection, viewport]) => {\n            return connection.inProgress\n                ? {\n                    ...connection,\n                    to: pointToRendererPoint(connection.to, [viewport.x, viewport.y, viewport.zoom])\n                }\n                : { ...connection };\n        }),\n        markers: derived([store.edges, store.defaultMarkerColor, store.flowId], ([edges, defaultColor, id]) => createMarkerIds(edges, { defaultColor, id })),\n        initialized: (() => {\n            let initialized = false;\n            const initialNodesLength = get(store.nodes).length;\n            const initialEdgesLength = get(store.edges).length;\n            return derived([store.nodesInitialized, store.edgesInitialized, store.viewportInitialized], ([nodesInitialized, edgesInitialized, viewportInitialized]) => {\n                // If it was already initialized, return true from then on\n                if (initialized)\n                    return initialized;\n                // if it hasn't been initialised check if it's now\n                if (initialNodesLength === 0) {\n                    initialized = viewportInitialized;\n                }\n                else if (initialEdgesLength === 0) {\n                    initialized = viewportInitialized && nodesInitialized;\n                }\n                else {\n                    initialized = viewportInitialized && nodesInitialized && edgesInitialized;\n                }\n                return initialized;\n            });\n        })(),\n        // actions\n        syncNodeStores: (nodes) => syncNodeStores(store.nodes, nodes),\n        syncEdgeStores: (edges) => syncEdgeStores(store.edges, edges),\n        syncViewport: (viewport) => syncViewportStores(store.panZoom, store.viewport, viewport),\n        setNodeTypes,\n        setEdgeTypes,\n        addEdge,\n        updateNodePositions,\n        updateNodeInternals,\n        zoomIn,\n        zoomOut,\n        fitView: (options) => fitView(options),\n        setMinZoom,\n        setMaxZoom,\n        setTranslateExtent,\n        setPaneClickDistance,\n        unselectNodesAndEdges,\n        addSelectedNodes,\n        addSelectedEdges,\n        handleNodeSelection,\n        panBy,\n        updateConnection,\n        cancelConnection,\n        reset\n    };\n}\nexport function useStore() {\n    const store = getContext(key);\n    if (!store) {\n        throw new Error('In order to use useStore you need to wrap your component in a <SvelteFlowProvider />');\n    }\n    return store.getStore();\n}\nexport function createStoreContext({ nodes, edges, width, height, fitView, nodeOrigin, nodeExtent }) {\n    const store = createStore({ nodes, edges, width, height, fitView, nodeOrigin, nodeExtent });\n    setContext(key, {\n        getStore: () => store\n    });\n    return store;\n}\n","<script>import { onMount } from 'svelte';\nimport { PanOnScrollMode } from '@xyflow/system';\nimport { useStore } from '../../store';\nimport zoom from '../../actions/zoom';\nexport let initialViewport = undefined;\nexport let onMoveStart = undefined;\nexport let onMove = undefined;\nexport let onMoveEnd = undefined;\nexport let panOnScrollMode;\nexport let preventScrolling;\nexport let zoomOnScroll;\nexport let zoomOnDoubleClick;\nexport let zoomOnPinch;\nexport let panOnDrag;\nexport let panOnScroll;\nexport let paneClickDistance;\nconst { viewport, panZoom, selectionRect, minZoom, maxZoom, dragging, translateExtent, lib, panActivationKeyPressed, zoomActivationKeyPressed, viewportInitialized } = useStore();\n$: viewPort = initialViewport || { x: 0, y: 0, zoom: 1 };\n$: _panOnDrag = $panActivationKeyPressed || panOnDrag;\n$: _panOnScroll = $panActivationKeyPressed || panOnScroll;\nconst onTransformChange = (transform) => viewport.set({ x: transform[0], y: transform[1], zoom: transform[2] });\nonMount(() => {\n    $viewportInitialized = true;\n});\n</script>\n\n<div\n  class=\"svelte-flow__zoom\"\n  use:zoom={{\n    viewport,\n    minZoom: $minZoom,\n    maxZoom: $maxZoom,\n    initialViewport: viewPort,\n    dragging,\n    panZoom,\n    onPanZoomStart: onMoveStart,\n    onPanZoom: onMove,\n    onPanZoomEnd: onMoveEnd,\n    zoomOnScroll,\n    zoomOnDoubleClick,\n    zoomOnPinch,\n    panOnScroll: _panOnScroll,\n    panOnDrag: _panOnDrag,\n    panOnScrollSpeed: 0.5,\n    panOnScrollMode: panOnScrollMode || PanOnScrollMode.Free,\n    zoomActivationKeyPressed: $zoomActivationKeyPressed,\n    preventScrolling: typeof preventScrolling === 'boolean' ? preventScrolling : true,\n    noPanClassName: 'nopan',\n    noWheelClassName: 'nowheel',\n    userSelectionActive: !!$selectionRect,\n    translateExtent: $translateExtent,\n    lib: $lib,\n    paneClickDistance,\n    onTransformChange\n  }}\n>\n  <slot />\n</div>\n\n<style>\n  .svelte-flow__zoom {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 4;\n  }\n</style>\n","<script context=\"module\">export function wrapHandler(handler, container) {\n    return (event) => {\n        if (event.target !== container) {\n            return;\n        }\n        handler?.(event);\n    };\n}\nexport function toggleSelected(ids) {\n    return (item) => {\n        const isSelected = ids.includes(item.id);\n        if (item.selected !== isSelected) {\n            item.selected = isSelected;\n        }\n        return item;\n    };\n}\n</script>\n\n<script>import { createEventDispatcher } from 'svelte';\nimport { SelectionMode, getEventPosition, getNodesInside, getConnectedEdges } from '@xyflow/system';\nimport { useStore } from '../../store';\nexport let panOnDrag = undefined;\nexport let selectionOnDrag = undefined;\nconst dispatch = createEventDispatcher();\nconst { nodes, nodeLookup, edges, viewport, dragging, elementsSelectable, selectionRect, selectionRectMode, selectionKeyPressed, selectionMode, panActivationKeyPressed, unselectNodesAndEdges } = useStore();\nlet container;\nlet containerBounds = null;\nlet selectedNodes = [];\n$: _panOnDrag = $panActivationKeyPressed || panOnDrag;\n$: isSelecting =\n    $selectionKeyPressed || $selectionRect || (selectionOnDrag && _panOnDrag !== true);\n$: hasActiveSelection = $elementsSelectable && (isSelecting || $selectionRectMode === 'user');\n// Used to prevent click events when the user lets go of the selectionKey during a selection\nlet selectionInProgress = false;\nfunction onClick(event) {\n    // We prevent click events when the user let go of the selectionKey during a selection\n    if (selectionInProgress) {\n        selectionInProgress = false;\n        return;\n    }\n    dispatch('paneclick', { event });\n    unselectNodesAndEdges();\n    selectionRectMode.set(null);\n}\nfunction onPointerDown(event) {\n    containerBounds = container.getBoundingClientRect();\n    if (!elementsSelectable ||\n        !isSelecting ||\n        event.button !== 0 ||\n        event.target !== container ||\n        !containerBounds) {\n        return;\n    }\n    event.target?.setPointerCapture?.(event.pointerId);\n    const { x, y } = getEventPosition(event, containerBounds);\n    unselectNodesAndEdges();\n    selectionRect.set({\n        width: 0,\n        height: 0,\n        startX: x,\n        startY: y,\n        x,\n        y\n    });\n    // onSelectionStart?.(event);\n}\nfunction onPointerMove(event) {\n    if (!isSelecting || !containerBounds || !$selectionRect) {\n        return;\n    }\n    selectionInProgress = true;\n    const mousePos = getEventPosition(event, containerBounds);\n    const startX = $selectionRect.startX ?? 0;\n    const startY = $selectionRect.startY ?? 0;\n    const nextUserSelectRect = {\n        ...$selectionRect,\n        x: mousePos.x < startX ? mousePos.x : startX,\n        y: mousePos.y < startY ? mousePos.y : startY,\n        width: Math.abs(mousePos.x - startX),\n        height: Math.abs(mousePos.y - startY)\n    };\n    const prevSelectedNodeIds = selectedNodes.map((n) => n.id);\n    const prevSelectedEdgeIds = getConnectedEdges(selectedNodes, $edges).map((e) => e.id);\n    selectedNodes = getNodesInside($nodeLookup, nextUserSelectRect, [$viewport.x, $viewport.y, $viewport.zoom], $selectionMode === SelectionMode.Partial, true);\n    const selectedEdgeIds = getConnectedEdges(selectedNodes, $edges).map((e) => e.id);\n    const selectedNodeIds = selectedNodes.map((n) => n.id);\n    // this prevents unnecessary updates while updating the selection rectangle\n    if (prevSelectedNodeIds.length !== selectedNodeIds.length ||\n        selectedNodeIds.some((id) => !prevSelectedNodeIds.includes(id))) {\n        nodes.update((nodes) => nodes.map(toggleSelected(selectedNodeIds)));\n    }\n    if (prevSelectedEdgeIds.length !== selectedEdgeIds.length ||\n        selectedEdgeIds.some((id) => !prevSelectedEdgeIds.includes(id))) {\n        edges.update((edges) => edges.map(toggleSelected(selectedEdgeIds)));\n    }\n    selectionRectMode.set('user');\n    selectionRect.set(nextUserSelectRect);\n}\nfunction onPointerUp(event) {\n    if (event.button !== 0) {\n        return;\n    }\n    event.target?.releasePointerCapture?.(event.pointerId);\n    // We only want to trigger click functions when in selection mode if\n    // the user did not move the mouse.\n    if (!isSelecting && $selectionRectMode === 'user' && event.target === container) {\n        onClick?.(event);\n    }\n    selectionRect.set(null);\n    if (selectedNodes.length > 0) {\n        $selectionRectMode = 'nodes';\n    }\n    // If the user kept holding the selectionKey during the selection,\n    // we need to reset the selectionInProgress, so the next click event is not prevented\n    if ($selectionKeyPressed) {\n        selectionInProgress = false;\n    }\n    // onSelectionEnd?.(event);\n}\nconst onContextMenu = (event) => {\n    if (Array.isArray(_panOnDrag) && _panOnDrag?.includes(2)) {\n        event.preventDefault();\n        return;\n    }\n    dispatch('panecontextmenu', { event });\n};\n</script>\n\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<div\n  bind:this={container}\n  class=\"svelte-flow__pane\"\n  class:draggable={panOnDrag === true || (Array.isArray(panOnDrag) && panOnDrag.includes(0))}\n  class:dragging={$dragging}\n  class:selection={isSelecting}\n  on:click={hasActiveSelection ? undefined : wrapHandler(onClick, container)}\n  on:pointerdown={hasActiveSelection ? onPointerDown : undefined}\n  on:pointermove={hasActiveSelection ? onPointerMove : undefined}\n  on:pointerup={hasActiveSelection ? onPointerUp : undefined}\n  on:contextmenu={wrapHandler(onContextMenu, container)}\n>\n  <slot />\n</div>\n\n<style>\n  .svelte-flow__pane {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n</style>\n","<script>import { useStore } from '../../store';\nconst { viewport } = useStore();\n</script>\n\n<div\n  class=\"svelte-flow__viewport xyflow__viewport\"\n  style=\"transform: translate({$viewport.x}px, {$viewport.y}px) scale({$viewport.zoom})\"\n>\n  <slot />\n</div>\n\n<style>\n  .svelte-flow__viewport {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n</style>\n","export function getNodeInlineStyleDimensions({ width, height, initialWidth, initialHeight, measuredWidth, measuredHeight }) {\n    if (measuredWidth === undefined && measuredHeight === undefined) {\n        const styleWidth = width ?? initialWidth;\n        const styleHeight = height ?? initialHeight;\n        return {\n            width: styleWidth ? `width:${styleWidth}px;` : '',\n            height: styleHeight ? `height:${styleHeight}px;` : ''\n        };\n    }\n    return {\n        width: width ? `width:${width}px;` : '',\n        height: height ? `height:${height}px;` : ''\n    };\n}\n","<svelte:options immutable />\n\n<script>import { setContext, onDestroy, createEventDispatcher } from 'svelte';\nimport { get, writable } from 'svelte/store';\nimport cc from 'classcat';\nimport { errorMessages, Position } from '@xyflow/system';\nimport drag from '../../actions/drag';\nimport { useStore } from '../../store';\nimport DefaultNode from '../nodes/DefaultNode.svelte';\nimport { getNodeInlineStyleDimensions } from './utils';\nexport let node;\nexport let id;\nexport let data = {};\nexport let selected = false;\nexport let draggable = undefined;\nexport let selectable = undefined;\nexport let connectable = true;\nexport let deletable = true;\nexport let hidden = false;\nexport let dragging = false;\nexport let resizeObserver = null;\nexport let style = undefined;\nexport let type = 'default';\nexport let isParent = false;\nexport let positionX;\nexport let positionY;\nexport let sourcePosition = undefined;\nexport let targetPosition = undefined;\nexport let zIndex;\nexport let measuredWidth = undefined;\nexport let measuredHeight = undefined;\nexport let initialWidth = undefined;\nexport let initialHeight = undefined;\nexport let width = undefined;\nexport let height = undefined;\nexport let dragHandle = undefined;\nexport let initialized = false;\nexport let parentId = undefined;\nexport let nodeClickDistance = undefined;\nlet className = '';\nexport { className as class };\nconst store = useStore();\nconst { nodeTypes, nodeDragThreshold, selectNodesOnDrag, handleNodeSelection, updateNodeInternals } = store;\nlet nodeRef;\nlet prevNodeRef = null;\nconst dispatchNodeEvent = createEventDispatcher();\nconst connectableStore = writable(connectable);\nlet prevType = undefined;\nlet prevSourcePosition = undefined;\nlet prevTargetPosition = undefined;\n$: nodeType = type || 'default';\n$: nodeTypeValid = !!$nodeTypes[nodeType];\n$: nodeComponent = $nodeTypes[nodeType] || DefaultNode;\n$: {\n    if (!nodeTypeValid) {\n        console.warn('003', errorMessages['error003'](type));\n    }\n}\n$: inlineStyleDimensions = getNodeInlineStyleDimensions({\n    width,\n    height,\n    initialWidth,\n    initialHeight,\n    measuredWidth,\n    measuredHeight\n});\n$: {\n    connectableStore.set(!!connectable);\n}\n$: {\n    // if type, sourcePosition or targetPosition changes,\n    // we need to re-calculate the handle positions\n    const doUpdate = (prevType && nodeType !== prevType) ||\n        (prevSourcePosition && sourcePosition !== prevSourcePosition) ||\n        (prevTargetPosition && targetPosition !== prevTargetPosition);\n    if (doUpdate) {\n        requestAnimationFrame(() => updateNodeInternals(new Map([\n            [\n                id,\n                {\n                    id,\n                    nodeElement: nodeRef,\n                    force: true\n                }\n            ]\n        ])));\n    }\n    prevType = nodeType;\n    prevSourcePosition = sourcePosition;\n    prevTargetPosition = targetPosition;\n}\nsetContext('svelteflow__node_id', id);\nsetContext('svelteflow__node_connectable', connectableStore);\n$: {\n    if (resizeObserver && (nodeRef !== prevNodeRef || !initialized)) {\n        prevNodeRef && resizeObserver.unobserve(prevNodeRef);\n        nodeRef && resizeObserver.observe(nodeRef);\n        prevNodeRef = nodeRef;\n    }\n}\nonDestroy(() => {\n    if (prevNodeRef) {\n        resizeObserver?.unobserve(prevNodeRef);\n    }\n});\nfunction onSelectNodeHandler(event) {\n    if (selectable && (!get(selectNodesOnDrag) || !draggable || get(nodeDragThreshold) > 0)) {\n        // this handler gets called by XYDrag on drag start when selectNodesOnDrag=true\n        // here we only need to call it when selectNodesOnDrag=false\n        handleNodeSelection(id);\n    }\n    dispatchNodeEvent('nodeclick', { node: node.internals.userNode, event });\n}\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n{#if !hidden}\n  <div\n    use:drag={{\n      nodeId: id,\n      isSelectable: selectable,\n      disabled: false,\n      handleSelector: dragHandle,\n      noDragClass: 'nodrag',\n      nodeClickDistance,\n      onNodeMouseDown: handleNodeSelection,\n      onDrag: (event, _, targetNode, nodes) => {\n        dispatchNodeEvent('nodedrag', { event, targetNode, nodes });\n      },\n      onDragStart: (event, _, targetNode, nodes) => {\n        dispatchNodeEvent('nodedragstart', { event, targetNode, nodes });\n      },\n      onDragStop: (event, _, targetNode, nodes) => {\n        dispatchNodeEvent('nodedragstop', { event, targetNode, nodes });\n      },\n      store\n    }}\n    bind:this={nodeRef}\n    data-id={id}\n    class={cc(['svelte-flow__node', `svelte-flow__node-${nodeType}`, className])}\n    class:dragging\n    class:selected\n    class:draggable\n    class:connectable\n    class:selectable\n    class:nopan={draggable}\n    class:parent={isParent}\n    style:z-index={zIndex}\n    style:transform=\"translate({positionX}px, {positionY}px)\"\n    style:visibility={initialized ? 'visible' : 'hidden'}\n    style=\"{style ?? ''};{inlineStyleDimensions.width}{inlineStyleDimensions.height}\"\n    on:click={onSelectNodeHandler}\n    on:mouseenter={(event) => dispatchNodeEvent('nodemouseenter', { node, event })}\n    on:mouseleave={(event) => dispatchNodeEvent('nodemouseleave', { node, event })}\n    on:mousemove={(event) => dispatchNodeEvent('nodemousemove', { node, event })}\n    on:contextmenu={(event) => dispatchNodeEvent('nodecontextmenu', { node, event })}\n  >\n    <svelte:component\n      this={nodeComponent}\n      {data}\n      {id}\n      {selected}\n      {selectable}\n      {deletable}\n      {sourcePosition}\n      {targetPosition}\n      {zIndex}\n      {dragging}\n      {draggable}\n      {dragHandle}\n      {parentId}\n      type={nodeType}\n      isConnectable={$connectableStore}\n      positionAbsoluteX={positionX}\n      positionAbsoluteY={positionY}\n      {width}\n      {height}\n    />\n  </div>\n{/if}\n","<script>import { onDestroy } from 'svelte';\nimport { nodeHasDimensions } from '@xyflow/system';\nimport { NodeWrapper } from '../../components/NodeWrapper';\nimport { useStore } from '../../store';\nexport let nodeClickDistance = 0;\nconst { visibleNodes, nodesDraggable, nodesConnectable, elementsSelectable, updateNodeInternals, parentLookup } = useStore();\nconst resizeObserver = typeof ResizeObserver === 'undefined'\n    ? null\n    : new ResizeObserver((entries) => {\n        const updates = new Map();\n        entries.forEach((entry) => {\n            const id = entry.target.getAttribute('data-id');\n            updates.set(id, {\n                id,\n                nodeElement: entry.target,\n                force: true\n            });\n        });\n        updateNodeInternals(updates);\n    });\nonDestroy(() => {\n    resizeObserver?.disconnect();\n});\n</script>\n\n<div class=\"svelte-flow__nodes\">\n  {#each $visibleNodes as node (node.id)}\n    <NodeWrapper\n      {node}\n      id={node.id}\n      data={node.data}\n      selected={!!node.selected}\n      hidden={!!node.hidden}\n      draggable={!!(node.draggable || ($nodesDraggable && typeof node.draggable === 'undefined'))}\n      selectable={!!(\n        node.selectable ||\n        ($elementsSelectable && typeof node.selectable === 'undefined')\n      )}\n      connectable={!!(\n        node.connectable ||\n        ($nodesConnectable && typeof node.connectable === 'undefined')\n      )}\n      deletable={node.deletable ?? true}\n      positionX={node.internals.positionAbsolute.x}\n      positionY={node.internals.positionAbsolute.y}\n      isParent={$parentLookup.has(node.id)}\n      style={node.style}\n      class={node.class}\n      type={node.type ?? 'default'}\n      sourcePosition={node.sourcePosition}\n      targetPosition={node.targetPosition}\n      dragging={node.dragging}\n      zIndex={node.internals.z ?? 0}\n      dragHandle={node.dragHandle}\n      initialized={nodeHasDimensions(node)}\n      width={node.width}\n      height={node.height}\n      initialWidth={node.initialWidth}\n      initialHeight={node.initialHeight}\n      measuredWidth={node.measured.width}\n      measuredHeight={node.measured.height}\n      parentId={node.parentId}\n      {resizeObserver}\n      {nodeClickDistance}\n      on:nodeclick\n      on:nodemouseenter\n      on:nodemousemove\n      on:nodemouseleave\n      on:nodedrag\n      on:nodedragstart\n      on:nodedragstop\n      on:nodecontextmenu\n    />\n  {/each}\n</div>\n\n<style>\n  .svelte-flow__nodes {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n</style>\n","<svelte:options immutable />\n\n<script>import { createEventDispatcher, setContext } from 'svelte';\nimport cc from 'classcat';\nimport { getMarkerId } from '@xyflow/system';\nimport { useStore } from '../../store';\nimport { BezierEdgeInternal } from '../edges';\nimport { useHandleEdgeSelect } from '../../hooks/useHandleEdgeSelect';\nexport let id;\nexport let type = 'default';\nexport let source = '';\nexport let target = '';\nexport let data = {};\nexport let style = undefined;\nexport let zIndex = undefined;\nexport let animated = false;\nexport let selected = false;\nexport let selectable = undefined;\nexport let deletable = undefined;\nexport let hidden = false;\nexport let label = undefined;\nexport let labelStyle = undefined;\nexport let markerStart = undefined;\nexport let markerEnd = undefined;\nexport let sourceHandle = undefined;\nexport let targetHandle = undefined;\nexport let sourceX;\nexport let sourceY;\nexport let targetX;\nexport let targetY;\nexport let sourcePosition;\nexport let targetPosition;\nexport let ariaLabel = undefined;\nexport let interactionWidth = undefined;\n// @ todo: support edge updates\nlet className = '';\nexport { className as class };\nsetContext('svelteflow__edge_id', id);\nconst { edgeLookup, edgeTypes, flowId, elementsSelectable } = useStore();\nconst dispatch = createEventDispatcher();\n$: edgeType = type || 'default';\n$: edgeComponent = $edgeTypes[edgeType] || BezierEdgeInternal;\n$: markerStartUrl = markerStart ? `url('#${getMarkerId(markerStart, $flowId)}')` : undefined;\n$: markerEndUrl = markerEnd ? `url('#${getMarkerId(markerEnd, $flowId)}')` : undefined;\n$: isSelectable = selectable ?? $elementsSelectable;\nconst handleEdgeSelect = useHandleEdgeSelect();\nfunction onClick(event) {\n    const edge = $edgeLookup.get(id);\n    if (edge) {\n        handleEdgeSelect(id);\n        dispatch('edgeclick', { event, edge });\n    }\n}\nfunction onMouseEvent(event, type) {\n    const edge = $edgeLookup.get(id);\n    if (edge) {\n        dispatch(type, { event, edge });\n    }\n}\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n{#if !hidden}\n  <svg style:z-index={zIndex}>\n    <g\n      class={cc(['svelte-flow__edge', className])}\n      class:animated\n      class:selected\n      class:selectable={isSelectable}\n      data-id={id}\n      on:click={onClick}\n      on:contextmenu={(e) => {\n        onMouseEvent(e, 'edgecontextmenu');\n      }}\n      on:mouseenter={(e) => {\n        onMouseEvent(e, 'edgemouseenter');\n      }}\n      on:mouseleave={(e) => {\n        onMouseEvent(e, 'edgemouseleave');\n      }}\n      aria-label={ariaLabel === null\n        ? undefined\n        : ariaLabel\n          ? ariaLabel\n          : `Edge from ${source} to ${target}`}\n      role=\"img\"\n    >\n      <svelte:component\n        this={edgeComponent}\n        {id}\n        {source}\n        {target}\n        {sourceX}\n        {sourceY}\n        {targetX}\n        {targetY}\n        {sourcePosition}\n        {targetPosition}\n        {animated}\n        {selected}\n        {label}\n        {labelStyle}\n        {data}\n        {style}\n        {interactionWidth}\n        selectable={isSelectable}\n        deletable={deletable ?? true}\n        type={edgeType}\n        sourceHandleId={sourceHandle}\n        targetHandleId={targetHandle}\n        markerStart={markerStartUrl}\n        markerEnd={markerEndUrl}\n      />\n    </g>\n  </svg>\n{/if}\n","<script>import { onMount } from 'svelte';\nlet _onMount = undefined;\nexport { _onMount as onMount };\nlet _onDestroy = undefined;\nexport { _onDestroy as onDestroy };\nonMount(() => {\n    _onMount?.();\n    return _onDestroy;\n});\n</script>\n","<script>import { useStore } from '../../../store';\nimport { Marker } from './';\nconst { markers } = useStore();\n</script>\n\n<defs>\n  {#each $markers as marker (marker.id)}\n    <Marker {...marker} />\n  {/each}\n</defs>\n","<script>import { MarkerType } from '@xyflow/system';\nexport let id;\nexport let type;\nexport let width = 12.5;\nexport let height = 12.5;\nexport let markerUnits = 'strokeWidth';\nexport let orient = 'auto-start-reverse';\nexport let color = undefined;\nexport let strokeWidth = undefined;\n</script>\n\n<marker\n  class=\"svelte-flow__arrowhead\"\n  {id}\n  markerWidth={`${width}`}\n  markerHeight={`${height}`}\n  viewBox=\"-10 -10 20 20\"\n  {markerUnits}\n  {orient}\n  refX=\"0\"\n  refY=\"0\"\n>\n  {#if type === MarkerType.Arrow}\n    <polyline\n      stroke={color}\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width={strokeWidth}\n      fill=\"none\"\n      points=\"-5,-4 0,0 -5,4\"\n    />\n  {:else if type === MarkerType.ArrowClosed}\n    <polyline\n      stroke={color}\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width={strokeWidth}\n      fill={color}\n      points=\"-5,-4 0,0 -5,4 -5,-4\"\n    />\n  {/if}\n</marker>\n","<script>import { onMount } from 'svelte';\nimport { EdgeWrapper } from '../../components/EdgeWrapper';\nimport { CallOnMount } from '../../components/CallOnMount';\nimport { MarkerDefinition } from './MarkerDefinition';\nimport { useStore } from '../../store';\nexport let defaultEdgeOptions;\nconst { visibleEdges, edgesInitialized, edges: { setDefaultOptions }, elementsSelectable } = useStore();\nonMount(() => {\n    if (defaultEdgeOptions)\n        setDefaultOptions(defaultEdgeOptions);\n});\n</script>\n\n<div class=\"svelte-flow__edges\">\n  <svg class=\"svelte-flow__marker\">\n    <MarkerDefinition />\n  </svg>\n\n  {#each $visibleEdges as edge (edge.id)}\n    <EdgeWrapper\n      id={edge.id}\n      source={edge.source}\n      target={edge.target}\n      data={edge.data}\n      style={edge.style}\n      animated={edge.animated}\n      selected={edge.selected}\n      selectable={edge.selectable ?? $elementsSelectable}\n      deletable={edge.deletable}\n      hidden={edge.hidden}\n      label={edge.label}\n      labelStyle={edge.labelStyle}\n      markerStart={edge.markerStart}\n      markerEnd={edge.markerEnd}\n      sourceHandle={edge.sourceHandle}\n      targetHandle={edge.targetHandle}\n      sourceX={edge.sourceX}\n      sourceY={edge.sourceY}\n      targetX={edge.targetX}\n      targetY={edge.targetY}\n      sourcePosition={edge.sourcePosition}\n      targetPosition={edge.targetPosition}\n      ariaLabel={edge.ariaLabel}\n      interactionWidth={edge.interactionWidth}\n      class={edge.class}\n      type={edge.type || 'default'}\n      zIndex={edge.zIndex}\n      on:edgeclick\n      on:edgecontextmenu\n      on:edgemouseenter\n      on:edgemouseleave\n    />\n  {/each}\n\n  {#if $visibleEdges.length > 0}\n    <CallOnMount\n      onMount={() => {\n        $edgesInitialized = true;\n      }}\n      onDestroy={() => {\n        $edgesInitialized = false;\n      }}\n    />\n  {/if}\n</div>\n","<script>export let x = 0;\nexport let y = 0;\nexport let width = 0;\nexport let height = 0;\nexport let isVisible = true;\n</script>\n\n{#if isVisible}\n  <div\n    class=\"svelte-flow__selection\"\n    style:width={typeof width === 'string' ? width : `${width}px`}\n    style:height={typeof height === 'string' ? height : `${height}px`}\n    style:transform={`translate(${x}px, ${y}px)`}\n  />\n{/if}\n\n<style>\n  .svelte-flow__selection {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n</style>\n","<script>import { useStore } from '../../store';\nimport { Selection } from '../Selection';\nconst { selectionRect, selectionRectMode } = useStore();\n</script>\n\n<Selection\n  isVisible={!!($selectionRect && $selectionRectMode === 'user')}\n  width={$selectionRect?.width}\n  height={$selectionRect?.height}\n  x={$selectionRect?.x}\n  y={$selectionRect?.y}\n/>\n","<script>import { createEventDispatcher } from 'svelte';\nimport { getInternalNodesBounds, isNumeric } from '@xyflow/system';\nimport { useStore } from '../../store';\nimport { Selection } from '../Selection';\nimport drag from '../../actions/drag';\nconst store = useStore();\nconst { selectionRectMode, nodes, nodeLookup } = store;\nconst dispatch = createEventDispatcher();\nlet bounds = null;\n$: if ($selectionRectMode === 'nodes') {\n    bounds = getInternalNodesBounds($nodeLookup, { filter: (node) => !!node.selected });\n    $nodes;\n}\nfunction onContextMenu(event) {\n    const selectedNodes = $nodes.filter((n) => n.selected);\n    dispatch('selectioncontextmenu', { nodes: selectedNodes, event });\n}\nfunction onClick(event) {\n    const selectedNodes = $nodes.filter((n) => n.selected);\n    dispatch('selectionclick', { nodes: selectedNodes, event });\n}\n</script>\n\n{#if $selectionRectMode === 'nodes' && bounds && isNumeric(bounds.x) && isNumeric(bounds.y)}\n  <div\n    class=\"selection-wrapper nopan\"\n    style=\"width: {bounds.width}px; height: {bounds.height}px; transform: translate({bounds.x}px, {bounds.y}px)\"\n    use:drag={{\n      disabled: false,\n      store,\n      onDrag: (event, _, __, nodes) => {\n        dispatch('nodedrag', { event, targetNode: null, nodes });\n      },\n      onDragStart: (event, _, __, nodes) => {\n        dispatch('nodedragstart', { event, targetNode: null, nodes });\n      },\n      onDragStop: (event, _, __, nodes) => {\n        dispatch('nodedragstop', { event, targetNode: null, nodes });\n      }\n    }}\n    on:contextmenu={onContextMenu}\n    on:click={onClick}\n    role=\"button\"\n    tabindex=\"-1\"\n    on:keyup={() => {}}\n  >\n    <Selection width=\"100%\" height=\"100%\" x={0} y={0} />\n  </div>\n{/if}\n\n<style>\n  .selection-wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 7;\n    pointer-events: all;\n  }\n</style>\n","<script>import { shortcut } from '@svelte-put/shortcut';\nimport { isInputDOMNode, isMacOs } from '@xyflow/system';\nimport { useStore } from '../../store';\nexport let selectionKey = 'Shift';\nexport let multiSelectionKey = isMacOs() ? 'Meta' : 'Control';\nexport let deleteKey = 'Backspace';\nexport let panActivationKey = ' ';\nexport let zoomActivationKey = isMacOs() ? 'Meta' : 'Control';\nconst { selectionKeyPressed, multiselectionKeyPressed, deleteKeyPressed, panActivationKeyPressed, zoomActivationKeyPressed, selectionRect } = useStore();\nfunction isKeyObject(key) {\n    return key !== null && typeof key === 'object';\n}\nfunction getModifier(key) {\n    return isKeyObject(key) ? key.modifier || [] : [];\n}\nfunction getKeyString(key) {\n    if (key === null || key === undefined) {\n        // this is a workaround to check if a key is set\n        // if not we won't call the callback\n        return '';\n    }\n    return isKeyObject(key) ? key.key : key;\n}\nfunction getShortcutTrigger(key, callback) {\n    const keys = Array.isArray(key) ? key : [key];\n    return keys.map((_key) => {\n        const keyString = getKeyString(_key);\n        return {\n            key: keyString,\n            modifier: getModifier(_key),\n            enabled: keyString !== null,\n            callback\n        };\n    });\n}\nfunction resetKeysAndSelection() {\n    selectionRect.set(null);\n    selectionKeyPressed.set(false);\n    multiselectionKeyPressed.set(false);\n    deleteKeyPressed.set(false);\n    panActivationKeyPressed.set(false);\n    zoomActivationKeyPressed.set(false);\n}\n</script>\n\n<svelte:window\n  on:blur={resetKeysAndSelection}\n  on:contextmenu={resetKeysAndSelection}\n  use:shortcut={{\n    trigger: getShortcutTrigger(selectionKey, () => selectionKeyPressed.set(true)),\n    type: 'keydown'\n  }}\n  use:shortcut={{\n    trigger: getShortcutTrigger(selectionKey, () => selectionKeyPressed.set(false)),\n    type: 'keyup'\n  }}\n  use:shortcut={{\n    trigger: getShortcutTrigger(multiSelectionKey, () => multiselectionKeyPressed.set(true)),\n    type: 'keydown'\n  }}\n  use:shortcut={{\n    trigger: getShortcutTrigger(multiSelectionKey, () => multiselectionKeyPressed.set(false)),\n    type: 'keyup'\n  }}\n  use:shortcut={{\n    trigger: getShortcutTrigger(deleteKey, (detail) => {\n      const isModifierKey =\n        detail.originalEvent.ctrlKey ||\n        detail.originalEvent.metaKey ||\n        detail.originalEvent.shiftKey;\n      if (!isModifierKey && !isInputDOMNode(detail.originalEvent)) {\n        deleteKeyPressed.set(true);\n      }\n    }),\n    type: 'keydown'\n  }}\n  use:shortcut={{\n    trigger: getShortcutTrigger(deleteKey, () => deleteKeyPressed.set(false)),\n    type: 'keyup'\n  }}\n  use:shortcut={{\n    trigger: getShortcutTrigger(panActivationKey, () => panActivationKeyPressed.set(true)),\n    type: 'keydown'\n  }}\n  use:shortcut={{\n    trigger: getShortcutTrigger(panActivationKey, () => panActivationKeyPressed.set(false)),\n    type: 'keyup'\n  }}\n  use:shortcut={{\n    trigger: getShortcutTrigger(zoomActivationKey, () => zoomActivationKeyPressed.set(true)),\n    type: 'keydown'\n  }}\n  use:shortcut={{\n    trigger: getShortcutTrigger(zoomActivationKey, () => zoomActivationKeyPressed.set(false)),\n    type: 'keyup'\n  }}\n/>\n","<script>import cc from 'classcat';\nimport { useStore } from '../../store';\nimport { ConnectionLineType, getBezierPath, getConnectionStatus, getSmoothStepPath, getStraightPath } from '@xyflow/system';\nexport let containerStyle = '';\nexport let style = '';\nexport let isCustomComponent = false;\nconst { width, height, connection, connectionLineType } = useStore();\nlet path = null;\n$: if ($connection.inProgress && !isCustomComponent) {\n    const { from, to, fromPosition, toPosition } = $connection;\n    const pathParams = {\n        sourceX: from.x,\n        sourceY: from.y,\n        sourcePosition: fromPosition,\n        targetX: to.x,\n        targetY: to.y,\n        targetPosition: toPosition\n    };\n    switch ($connectionLineType) {\n        case ConnectionLineType.Bezier:\n            [path] = getBezierPath(pathParams);\n            break;\n        case ConnectionLineType.Step:\n            [path] = getSmoothStepPath({\n                ...pathParams,\n                borderRadius: 0\n            });\n            break;\n        case ConnectionLineType.SmoothStep:\n            [path] = getSmoothStepPath(pathParams);\n            break;\n        default:\n            [path] = getStraightPath(pathParams);\n    }\n}\n</script>\n\n{#if $connection.inProgress}\n  <svg width={$width} height={$height} class=\"svelte-flow__connectionline\" style={containerStyle}>\n    <g class={cc(['svelte-flow__connection', getConnectionStatus($connection.isValid)])}>\n      <slot name=\"connectionLine\" />\n      <!-- slot fallbacks do not work if slots are forwarded in parent -->\n      {#if !isCustomComponent}\n        <path d={path} {style} fill=\"none\" class=\"svelte-flow__connection-path\" />\n      {/if}\n    </g>\n  </svg>\n{/if}\n","<script>import cc from 'classcat';\nimport { useStore } from '../../store';\nexport let position = 'top-right';\nexport let style = undefined;\nlet className = undefined;\nexport { className as class };\nconst { selectionRectMode } = useStore();\n$: positionClasses = `${position}`.split('-');\n</script>\n\n<div\n  class={cc(['svelte-flow__panel', className, ...positionClasses])}\n  {style}\n  style:pointer-events={$selectionRectMode ? 'none' : ''}\n  {...$$restProps}\n>\n  <slot />\n</div>\n","<script>import { Panel } from '../../container/Panel';\nexport let proOptions = undefined;\nexport let position = 'bottom-right';\n</script>\n\n{#if !proOptions?.hideAttribution}\n  <Panel\n    {position}\n    class=\"svelte-flow__attribution\"\n    data-message=\"Feel free to remove the attribution or check out how you could support us: https://svelteflow.dev/support-us\"\n  >\n    <a\n      href=\"https://svelteflow.dev\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      aria-label=\"Svelte Flow attribution\"\n    >\n      Svelte Flow\n    </a>\n  </Panel>\n{/if}\n","// this is helper function for updating the store\n// for props where we need to call a specific store action\nexport function updateStore(store, { nodeTypes, edgeTypes, minZoom, maxZoom, translateExtent, paneClickDistance }) {\n    if (nodeTypes !== undefined) {\n        store.setNodeTypes(nodeTypes);\n    }\n    if (edgeTypes !== undefined) {\n        store.setEdgeTypes(edgeTypes);\n    }\n    if (minZoom !== undefined) {\n        store.setMinZoom(minZoom);\n    }\n    if (maxZoom !== undefined) {\n        store.setMaxZoom(maxZoom);\n    }\n    if (translateExtent !== undefined) {\n        store.setTranslateExtent(translateExtent);\n    }\n    if (paneClickDistance !== undefined) {\n        store.setPaneClickDistance(paneClickDistance);\n    }\n}\nconst getKeys = (obj) => Object.keys(obj);\nexport function updateStoreByKeys(store, keys) {\n    getKeys(keys).forEach((prop) => {\n        const update = keys[prop];\n        if (update !== undefined) {\n            // @ts-expect-error @todo: how to fix this TS error?\n            store[prop].set(update);\n        }\n    });\n}\n","import { readable } from 'svelte/store';\nfunction getMediaQuery() {\n    if (typeof window === 'undefined' || !window.matchMedia) {\n        return null;\n    }\n    return window.matchMedia('(prefers-color-scheme: dark)');\n}\n/**\n * Hook for receiving the current color mode class 'dark' or 'light'.\n *\n * @internal\n * @param colorMode - The color mode to use ('dark', 'light' or 'system')\n */\nexport function useColorModeClass(colorMode = 'light') {\n    const colorModeClass = readable('light', (set) => {\n        if (colorMode !== 'system') {\n            set(colorMode);\n            return;\n        }\n        const mediaQuery = getMediaQuery();\n        const updateColorModeClass = () => set(mediaQuery?.matches ? 'dark' : 'light');\n        set(mediaQuery?.matches ? 'dark' : 'light');\n        mediaQuery?.addEventListener('change', updateColorModeClass);\n        return () => {\n            mediaQuery?.removeEventListener('change', updateColorModeClass);\n        };\n    });\n    return colorModeClass;\n}\n","<script>import { onMount, hasContext } from 'svelte';\nimport { get } from 'svelte/store';\nimport cc from 'classcat';\nimport { ConnectionMode, PanOnScrollMode } from '@xyflow/system';\nimport { Zoom } from '../Zoom';\nimport { Pane } from '../Pane';\nimport { Viewport as ViewportComponent } from '../Viewport';\nimport { NodeRenderer } from '../NodeRenderer';\nimport { EdgeRenderer } from '../EdgeRenderer';\nimport { UserSelection } from '../../components/UserSelection';\nimport { NodeSelection } from '../../components/NodeSelection';\nimport { KeyHandler } from '../../components/KeyHandler';\nimport { ConnectionLine } from '../../components/ConnectionLine';\nimport { Attribution } from '../../components/Attribution';\nimport { key, useStore, createStoreContext } from '../../store';\nimport { updateStore, updateStoreByKeys } from './utils';\nimport { useColorModeClass } from '../../hooks/useColorModeClass';\nexport let id = '1';\nexport let nodes;\nexport let edges;\nexport let fitView = undefined;\nexport let fitViewOptions = undefined;\nexport let minZoom = undefined;\nexport let maxZoom = undefined;\nexport let initialViewport = undefined;\nexport let viewport = undefined;\nexport let nodeTypes = undefined;\nexport let edgeTypes = undefined;\nexport let selectionKey = undefined;\nexport let selectionMode = undefined;\nexport let panActivationKey = undefined;\nexport let multiSelectionKey = undefined;\nexport let zoomActivationKey = undefined;\nexport let nodesDraggable = undefined;\nexport let nodesConnectable = undefined;\nexport let nodeDragThreshold = undefined;\nexport let elementsSelectable = undefined;\nexport let snapGrid = undefined;\nexport let deleteKey = undefined;\nexport let connectionRadius = undefined;\nexport let connectionLineType = undefined;\nexport let connectionMode = ConnectionMode.Strict;\nexport let connectionLineStyle = '';\nexport let connectionLineContainerStyle = '';\nexport let onMoveStart = undefined;\nexport let onMove = undefined;\nexport let onMoveEnd = undefined;\nexport let isValidConnection = undefined;\nexport let translateExtent = undefined;\nexport let nodeExtent = undefined;\nexport let onlyRenderVisibleElements = undefined;\nexport let panOnScrollMode = PanOnScrollMode.Free;\nexport let preventScrolling = true;\nexport let zoomOnScroll = true;\nexport let zoomOnDoubleClick = true;\nexport let zoomOnPinch = true;\nexport let panOnScroll = false;\nexport let panOnDrag = true;\nexport let selectionOnDrag = undefined;\nexport let autoPanOnConnect = true;\nexport let autoPanOnNodeDrag = true;\nexport let onerror = undefined;\nexport let ondelete = undefined;\nexport let onedgecreate = undefined;\nexport let attributionPosition = undefined;\nexport let proOptions = undefined;\nexport let defaultEdgeOptions = undefined;\nexport let width = undefined;\nexport let height = undefined;\nexport let colorMode = 'light';\nexport let onconnect = undefined;\nexport let onconnectstart = undefined;\nexport let onconnectend = undefined;\nexport let onbeforedelete = undefined;\nexport let oninit = undefined;\nexport let nodeOrigin = undefined;\nexport let paneClickDistance = 0;\nexport let nodeClickDistance = 0;\nexport let defaultMarkerColor = '#b1b1b7';\nexport let style = undefined;\nlet className = undefined;\nexport { className as class };\nlet domNode;\nlet clientWidth;\nlet clientHeight;\nconst initViewport = $viewport || initialViewport;\nconst store = hasContext(key)\n    ? useStore()\n    : createStoreContext({\n        nodes: get(nodes),\n        edges: get(edges),\n        width,\n        height,\n        fitView,\n        nodeOrigin,\n        nodeExtent\n    });\nonMount(() => {\n    store.width.set(clientWidth);\n    store.height.set(clientHeight);\n    store.domNode.set(domNode);\n    store.syncNodeStores(nodes);\n    store.syncEdgeStores(edges);\n    store.syncViewport(viewport);\n    if (fitView !== undefined) {\n        store.fitViewOnInit.set(fitView);\n    }\n    if (fitViewOptions) {\n        store.fitViewOptions.set(fitViewOptions);\n    }\n    updateStore(store, {\n        nodeTypes,\n        edgeTypes,\n        minZoom,\n        maxZoom,\n        translateExtent,\n        paneClickDistance\n    });\n    return () => {\n        store.reset();\n    };\n});\n// Update width & height on resize\n$: {\n    if (clientWidth !== undefined && clientHeight !== undefined) {\n        store.width.set(clientWidth);\n        store.height.set(clientHeight);\n    }\n}\n// Call oninit once when flow is intialized\nconst { initialized } = store;\nlet onInitCalled = false;\n$: {\n    if (!onInitCalled && $initialized) {\n        oninit?.();\n        onInitCalled = true;\n    }\n}\n// this updates the store for simple changes\n// where the prop names equals the store name\n$: {\n    const updatableProps = {\n        flowId: id,\n        connectionLineType,\n        connectionRadius,\n        selectionMode,\n        snapGrid,\n        defaultMarkerColor,\n        nodesDraggable,\n        nodesConnectable,\n        elementsSelectable,\n        onlyRenderVisibleElements,\n        isValidConnection,\n        autoPanOnConnect,\n        autoPanOnNodeDrag,\n        onerror,\n        ondelete,\n        onedgecreate,\n        connectionMode,\n        nodeDragThreshold,\n        onconnect,\n        onconnectstart,\n        onconnectend,\n        onbeforedelete,\n        nodeOrigin\n    };\n    updateStoreByKeys(store, updatableProps);\n}\n$: updateStore(store, {\n    nodeTypes,\n    edgeTypes,\n    minZoom,\n    maxZoom,\n    translateExtent,\n    paneClickDistance\n});\n$: colorModeClass = useColorModeClass(colorMode);\n</script>\n\n<div\n  bind:this={domNode}\n  bind:clientWidth\n  bind:clientHeight\n  {style}\n  class={cc(['svelte-flow', className, $colorModeClass])}\n  data-testid=\"svelte-flow__wrapper\"\n  on:dragover\n  on:drop\n  {...$$restProps}\n  role=\"application\"\n>\n  <KeyHandler\n    {selectionKey}\n    {deleteKey}\n    {panActivationKey}\n    {multiSelectionKey}\n    {zoomActivationKey}\n  />\n  <Zoom\n    initialViewport={initViewport}\n    {onMoveStart}\n    {onMove}\n    {onMoveEnd}\n    panOnScrollMode={panOnScrollMode === undefined ? PanOnScrollMode.Free : panOnScrollMode}\n    preventScrolling={preventScrolling === undefined ? true : preventScrolling}\n    zoomOnScroll={zoomOnScroll === undefined ? true : zoomOnScroll}\n    zoomOnDoubleClick={zoomOnDoubleClick === undefined ? true : zoomOnDoubleClick}\n    zoomOnPinch={zoomOnPinch === undefined ? true : zoomOnPinch}\n    panOnScroll={panOnScroll === undefined ? false : panOnScroll}\n    panOnDrag={panOnDrag === undefined ? true : panOnDrag}\n    paneClickDistance={paneClickDistance === undefined ? 0 : paneClickDistance}\n  >\n    <Pane\n      on:paneclick\n      on:panecontextmenu\n      panOnDrag={panOnDrag === undefined ? true : panOnDrag}\n      {selectionOnDrag}\n    >\n      <ViewportComponent>\n        <EdgeRenderer\n          on:edgeclick\n          on:edgecontextmenu\n          on:edgemouseenter\n          on:edgemouseleave\n          {defaultEdgeOptions}\n        />\n        <ConnectionLine\n          containerStyle={connectionLineContainerStyle}\n          style={connectionLineStyle}\n          isCustomComponent={$$slots.connectionLine}\n        >\n          <slot name=\"connectionLine\" slot=\"connectionLine\" />\n        </ConnectionLine>\n        <div class=\"svelte-flow__edgelabel-renderer\" />\n        <div class=\"svelte-flow__viewport-portal\" />\n        <NodeRenderer\n          {nodeClickDistance}\n          on:nodeclick\n          on:nodemouseenter\n          on:nodemousemove\n          on:nodemouseleave\n          on:nodedragstart\n          on:nodedrag\n          on:nodedragstop\n          on:nodecontextmenu\n        />\n        <NodeSelection\n          on:selectionclick\n          on:selectioncontextmenu\n          on:nodedragstart\n          on:nodedrag\n          on:nodedragstop\n        />\n      </ViewportComponent>\n      <UserSelection />\n    </Pane>\n  </Zoom>\n  <Attribution {proOptions} position={attributionPosition} />\n  <slot />\n</div>\n\n<style>\n  .svelte-flow {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n    z-index: 0;\n\n    background-color: var(--background-color, var(--background-color-default));\n  }\n\n  :root {\n    --background-color-default: #fff;\n    --background-pattern-color-default: #ddd;\n\n    --minimap-mask-color-default: rgb(240, 240, 240, 0.6);\n    --minimap-mask-stroke-color-default: none;\n    --minimap-mask-stroke-width-default: 1;\n\n    --controls-button-background-color-default: #fefefe;\n    --controls-button-background-color-hover-default: #f4f4f4;\n    --controls-button-color-default: inherit;\n    --controls-button-color-hover-default: inherit;\n    --controls-button-border-color-default: #eee;\n  }\n</style>\n","<script>import { onDestroy, setContext } from 'svelte';\nimport { createStore, key } from '../../store';\nexport let initialNodes = undefined;\nexport let initialEdges = undefined;\nexport let initialWidth = undefined;\nexport let initialHeight = undefined;\nexport let fitView = undefined;\nexport let nodeOrigin = undefined;\nconst store = createStore({\n    nodes: initialNodes,\n    edges: initialEdges,\n    width: initialWidth,\n    height: initialHeight,\n    nodeOrigin,\n    fitView\n});\nsetContext(key, {\n    getStore: () => store\n});\nonDestroy(() => {\n    store.reset();\n});\n</script>\n\n<slot />\n","<script>import cc from 'classcat';\nlet className = undefined;\nlet bgColor = undefined;\nlet bgColorHover = undefined;\nlet color = undefined;\nlet colorHover = undefined;\nlet borderColor = undefined;\nexport { className as class };\n</script>\n\n<button\n  type=\"button\"\n  on:click\n  class={cc(['svelte-flow__controls-button', className])}\n  style:--xy-controls-button-background-color-props={bgColor}\n  style:--xy-controls-button-background-color-hover-props={bgColorHover}\n  style:--xy-controls-button-color-props={color}\n  style:--xy-controls-button-color-hover-props={colorHover}\n  style:--xy-controls-button-border-color-props={borderColor}\n  {...$$restProps}\n>\n  <slot class=\"button-svg\" />\n</button>\n","<script>import cc from 'classcat';\nimport Panel from '../../container/Panel/Panel.svelte';\nimport { useStore } from '../../store';\nimport ControlButton from './ControlButton.svelte';\nimport PlusIcon from './Icons/Plus.svelte';\nimport MinusIcon from './Icons/Minus.svelte';\nimport FitViewIcon from './Icons/Fit.svelte';\nimport LockIcon from './Icons/Lock.svelte';\nimport UnlockIcon from './Icons/Unlock.svelte';\nexport let position = 'bottom-left';\nexport let showZoom = true;\nexport let showFitView = true;\nexport let showLock = true;\nexport let buttonBgColor = undefined;\nexport let buttonBgColorHover = undefined;\nexport let buttonColor = undefined;\nexport let buttonColorHover = undefined;\nexport let buttonBorderColor = undefined;\nexport let ariaLabel = undefined;\nexport let style = undefined;\nexport let orientation = 'vertical';\nexport let fitViewOptions = undefined;\nlet className = '';\nexport { className as class };\nconst { zoomIn, zoomOut, fitView, viewport, minZoom, maxZoom, nodesDraggable, nodesConnectable, elementsSelectable } = useStore();\nconst buttonProps = {\n    bgColor: buttonBgColor,\n    bgColorHover: buttonBgColorHover,\n    color: buttonColor,\n    colorHover: buttonColorHover,\n    borderColor: buttonBorderColor\n};\n$: isInteractive = $nodesDraggable || $nodesConnectable || $elementsSelectable;\n$: minZoomReached = $viewport.zoom <= $minZoom;\n$: maxZoomReached = $viewport.zoom >= $maxZoom;\nconst onZoomInHandler = () => {\n    zoomIn();\n};\nconst onZoomOutHandler = () => {\n    zoomOut();\n};\nconst onFitViewHandler = () => {\n    fitView(fitViewOptions);\n};\nconst onToggleInteractivity = () => {\n    isInteractive = !isInteractive;\n    nodesDraggable.set(isInteractive);\n    nodesConnectable.set(isInteractive);\n    elementsSelectable.set(isInteractive);\n};\n$: orientationClass = orientation === 'horizontal' ? 'horizontal' : 'vertical';\n</script>\n\n<Panel\n  class={cc(['svelte-flow__controls', orientationClass, className])}\n  {position}\n  data-testid=\"svelte-flow__controls\"\n  aria-label={ariaLabel ?? 'Svelte Flow controls'}\n  {style}\n>\n  <slot name=\"before\" />\n  {#if showZoom}\n    <ControlButton\n      on:click={onZoomInHandler}\n      class=\"svelte-flow__controls-zoomin\"\n      title=\"zoom in\"\n      aria-label=\"zoom in\"\n      disabled={maxZoomReached}\n      {...buttonProps}\n    >\n      <PlusIcon />\n    </ControlButton>\n    <ControlButton\n      on:click={onZoomOutHandler}\n      class=\"svelte-flow__controls-zoomout\"\n      title=\"zoom out\"\n      aria-label=\"zoom out\"\n      disabled={minZoomReached}\n      {...buttonProps}\n    >\n      <MinusIcon />\n    </ControlButton>\n  {/if}\n  {#if showFitView}\n    <ControlButton\n      class=\"svelte-flow__controls-fitview\"\n      on:click={onFitViewHandler}\n      title=\"fit view\"\n      aria-label=\"fit view\"\n      {...buttonProps}\n    >\n      <FitViewIcon />\n    </ControlButton>\n  {/if}\n  {#if showLock}\n    <ControlButton\n      class=\"svelte-flow__controls-interactive\"\n      on:click={onToggleInteractivity}\n      title=\"toggle interactivity\"\n      aria-label=\"toggle interactivity\"\n      {...buttonProps}\n    >\n      {#if isInteractive}<UnlockIcon />{:else}<LockIcon />{/if}\n    </ControlButton>\n  {/if}\n  <slot />\n  <slot name=\"after\" />\n</Panel>\n","export var BackgroundVariant;\n(function (BackgroundVariant) {\n    BackgroundVariant[\"Lines\"] = \"lines\";\n    BackgroundVariant[\"Dots\"] = \"dots\";\n    BackgroundVariant[\"Cross\"] = \"cross\";\n})(BackgroundVariant || (BackgroundVariant = {}));\n","<script>import cc from 'classcat';\nexport let radius = 5;\nlet className = '';\nexport { className as class };\n</script>\n\n<circle\n  cx={radius}\n  cy={radius}\n  r={radius}\n  class={cc(['svelte-flow__background-pattern', 'dots', className])}\n/>\n","<script>import cc from 'classcat';\nexport let lineWidth = 1;\nexport let dimensions;\nexport let variant = undefined;\nlet className = '';\nexport { className as class };\n</script>\n\n<path\n  stroke-width={lineWidth}\n  d={`M${dimensions[0] / 2} 0 V${dimensions[1]} M0 ${dimensions[1] / 2} H${dimensions[0]}`}\n  class={cc(['svelte-flow__background-pattern', variant, className])}\n/>\n","<script labg=\"ts\" context=\"module\">\n  const defaultSize = {\n    [BackgroundVariant.Dots]: 1,\n    [BackgroundVariant.Lines]: 1,\n    [BackgroundVariant.Cross]: 6\n  };\n</script>\n\n<script>import cc from 'classcat';\nimport DotPattern from './DotPattern.svelte';\nimport LinePattern from './LinePattern.svelte';\nimport { useStore } from '../../store';\nimport { BackgroundVariant } from './types';\nexport let id = undefined;\nexport let variant = BackgroundVariant.Dots;\nexport let gap = 20;\nexport let size = 1;\nexport let lineWidth = 1;\nexport let bgColor = undefined;\nexport let patternColor = undefined;\nexport let patternClass = undefined;\nlet className = '';\nexport { className as class };\nconst { viewport, flowId } = useStore();\nconst patternSize = size || defaultSize[variant];\nconst isDots = variant === BackgroundVariant.Dots;\nconst isCross = variant === BackgroundVariant.Cross;\nconst gapXY = Array.isArray(gap) ? gap : [gap, gap];\n$: patternId = `background-pattern-${$flowId}-${id ? id : ''}`;\n$: scaledGap = [gapXY[0] * $viewport.zoom || 1, gapXY[1] * $viewport.zoom || 1];\n$: scaledSize = patternSize * $viewport.zoom;\n$: patternDimensions = (isCross ? [scaledSize, scaledSize] : scaledGap);\n$: patternOffset = isDots\n    ? [scaledSize / 2, scaledSize / 2]\n    : [patternDimensions[0] / 2, patternDimensions[1] / 2];\n</script>\n\n<svg\n  class={cc(['svelte-flow__background', className])}\n  data-testid=\"svelte-flow__background\"\n  style:--xy-background-color-props={bgColor}\n  style:--xy-background-pattern-color-props={patternColor}\n>\n  <pattern\n    id={patternId}\n    x={$viewport.x % scaledGap[0]}\n    y={$viewport.y % scaledGap[1]}\n    width={scaledGap[0]}\n    height={scaledGap[1]}\n    patternUnits=\"userSpaceOnUse\"\n    patternTransform={`translate(-${patternOffset[0]},-${patternOffset[1]})`}\n  >\n    {#if isDots}\n      <DotPattern radius={scaledSize / 2} class={patternClass} />\n    {:else}\n      <LinePattern dimensions={patternDimensions} {variant} {lineWidth} class={patternClass} />\n    {/if}\n  </pattern>\n  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill={`url(#${patternId})`} />\n</svg>\n\n<style>\n  .svelte-flow__background {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n  }\n</style>\n","import { isNodeBase, isEdgeBase } from '@xyflow/system';\n/**\n * Test whether an object is useable as a Node\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Node if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Node\n */\nexport const isNode = (element) => isNodeBase(element);\n/**\n * Test whether an object is useable as an Edge\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Edge if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Edge\n */\nexport const isEdge = (element) => isEdgeBase(element);\n","import { get } from 'svelte/store';\nimport { getOverlappingArea, isRectObject, nodeToRect, pointToRendererPoint, getViewportForBounds, getElementsToRemove, rendererPointToPoint, evaluateAbsolutePosition, getNodesBounds } from '@xyflow/system';\nimport { useStore } from '../store';\nimport { isNode } from '../utils';\n/**\n * Hook for accessing the ReactFlow instance.\n *\n * @public\n *\n * @returns helper functions\n */\nexport function useSvelteFlow() {\n    const { zoomIn, zoomOut, fitView, onbeforedelete, snapGrid, viewport, width, height, minZoom, maxZoom, panZoom, nodes, edges, domNode, nodeLookup, nodeOrigin, edgeLookup, connectionLookup } = useStore();\n    const getNodeRect = (node) => {\n        const $nodeLookup = get(nodeLookup);\n        const nodeToUse = isNode(node) ? node : $nodeLookup.get(node.id);\n        const position = nodeToUse.parentId\n            ? evaluateAbsolutePosition(nodeToUse.position, nodeToUse.measured, nodeToUse.parentId, $nodeLookup, get(nodeOrigin))\n            : nodeToUse.position;\n        const nodeWithPosition = {\n            id: nodeToUse.id,\n            position,\n            width: nodeToUse.measured?.width ?? nodeToUse.width,\n            height: nodeToUse.measured?.height ?? nodeToUse.height,\n            data: nodeToUse.data\n        };\n        return nodeToRect(nodeWithPosition);\n    };\n    const updateNode = (id, nodeUpdate, options = { replace: false }) => {\n        const node = get(nodeLookup).get(id)?.internals.userNode;\n        if (!node) {\n            return;\n        }\n        const nextNode = typeof nodeUpdate === 'function' ? nodeUpdate(node) : nodeUpdate;\n        if (options.replace) {\n            nodes.update((nds) => nds.map((node) => {\n                if (node.id === id) {\n                    return isNode(nextNode) ? nextNode : { ...node, ...nextNode };\n                }\n                return node;\n            }));\n        }\n        else {\n            Object.assign(node, nextNode);\n            nodes.update((nds) => nds);\n        }\n    };\n    const getInternalNode = (id) => get(nodeLookup).get(id);\n    return {\n        zoomIn,\n        zoomOut,\n        getInternalNode,\n        getNode: (id) => getInternalNode(id)?.internals.userNode,\n        getNodes: (ids) => (ids === undefined ? get(nodes) : getElements(get(nodeLookup), ids)),\n        getEdge: (id) => get(edgeLookup).get(id),\n        getEdges: (ids) => (ids === undefined ? get(edges) : getElements(get(edgeLookup), ids)),\n        setZoom: (zoomLevel, options) => {\n            const currentPanZoom = get(panZoom);\n            return currentPanZoom\n                ? currentPanZoom.scaleTo(zoomLevel, { duration: options?.duration })\n                : Promise.resolve(false);\n        },\n        getZoom: () => get(viewport).zoom,\n        setViewport: async (nextViewport, options) => {\n            const currentViewport = get(viewport);\n            const currentPanZoom = get(panZoom);\n            if (!currentPanZoom) {\n                return Promise.resolve(false);\n            }\n            await currentPanZoom.setViewport({\n                x: nextViewport.x ?? currentViewport.x,\n                y: nextViewport.y ?? currentViewport.y,\n                zoom: nextViewport.zoom ?? currentViewport.zoom\n            }, { duration: options?.duration });\n            return Promise.resolve(true);\n        },\n        getViewport: () => get(viewport),\n        setCenter: async (x, y, options) => {\n            const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : get(maxZoom);\n            const currentPanZoom = get(panZoom);\n            if (!currentPanZoom) {\n                return Promise.resolve(false);\n            }\n            await currentPanZoom.setViewport({\n                x: get(width) / 2 - x * nextZoom,\n                y: get(height) / 2 - y * nextZoom,\n                zoom: nextZoom\n            }, { duration: options?.duration });\n            return Promise.resolve(true);\n        },\n        fitView,\n        fitBounds: async (bounds, options) => {\n            const currentPanZoom = get(panZoom);\n            if (!currentPanZoom) {\n                return Promise.resolve(false);\n            }\n            const viewport = getViewportForBounds(bounds, get(width), get(height), get(minZoom), get(maxZoom), options?.padding ?? 0.1);\n            await currentPanZoom.setViewport(viewport, { duration: options?.duration });\n            return Promise.resolve(true);\n        },\n        getIntersectingNodes: (nodeOrRect, partially = true, nodesToIntersect) => {\n            const isRect = isRectObject(nodeOrRect);\n            const nodeRect = isRect ? nodeOrRect : getNodeRect(nodeOrRect);\n            if (!nodeRect) {\n                return [];\n            }\n            return (nodesToIntersect || get(nodes)).filter((n) => {\n                const internalNode = get(nodeLookup).get(n.id);\n                if (!internalNode || (!isRect && n.id === nodeOrRect.id)) {\n                    return false;\n                }\n                const currNodeRect = nodeToRect(internalNode);\n                const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n                const partiallyVisible = partially && overlappingArea > 0;\n                return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n            });\n        },\n        isNodeIntersecting: (nodeOrRect, area, partially = true) => {\n            const isRect = isRectObject(nodeOrRect);\n            const nodeRect = isRect ? nodeOrRect : getNodeRect(nodeOrRect);\n            if (!nodeRect) {\n                return false;\n            }\n            const overlappingArea = getOverlappingArea(nodeRect, area);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n        },\n        deleteElements: async ({ nodes: nodesToRemove = [], edges: edgesToRemove = [] }) => {\n            const { nodes: matchingNodes, edges: matchingEdges } = await getElementsToRemove({\n                nodesToRemove,\n                edgesToRemove,\n                nodes: get(nodes),\n                edges: get(edges),\n                onBeforeDelete: get(onbeforedelete)\n            });\n            if (matchingNodes) {\n                nodes.update((nds) => nds.filter((node) => !matchingNodes.some(({ id }) => id === node.id)));\n            }\n            if (matchingEdges) {\n                edges.update((eds) => eds.filter((edge) => !matchingEdges.some(({ id }) => id === edge.id)));\n            }\n            return {\n                deletedNodes: matchingNodes,\n                deletedEdges: matchingEdges\n            };\n        },\n        screenToFlowPosition: (position, options = { snapToGrid: true }) => {\n            const _domNode = get(domNode);\n            if (!_domNode) {\n                return position;\n            }\n            const _snapGrid = options.snapToGrid ? get(snapGrid) : false;\n            const { x, y, zoom } = get(viewport);\n            const { x: domX, y: domY } = _domNode.getBoundingClientRect();\n            const correctedPosition = {\n                x: position.x - domX,\n                y: position.y - domY\n            };\n            return pointToRendererPoint(correctedPosition, [x, y, zoom], _snapGrid !== null, _snapGrid || [1, 1]);\n        },\n        /**\n         *\n         * @param position\n         * @returns\n         */\n        flowToScreenPosition: (position) => {\n            const _domNode = get(domNode);\n            if (!_domNode) {\n                return position;\n            }\n            const { x, y, zoom } = get(viewport);\n            const { x: domX, y: domY } = _domNode.getBoundingClientRect();\n            const rendererPosition = rendererPointToPoint(position, [x, y, zoom]);\n            return {\n                x: rendererPosition.x + domX,\n                y: rendererPosition.y + domY\n            };\n        },\n        toObject: () => {\n            return {\n                nodes: get(nodes).map((node) => ({\n                    ...node,\n                    // we want to make sure that changes to the nodes object that gets returned by toObject\n                    // do not affect the nodes object\n                    position: { ...node.position },\n                    data: { ...node.data }\n                })),\n                edges: get(edges).map((edge) => ({ ...edge })),\n                viewport: { ...get(viewport) }\n            };\n        },\n        updateNode,\n        updateNodeData: (id, dataUpdate, options) => {\n            const node = get(nodeLookup).get(id)?.internals.userNode;\n            if (!node) {\n                return;\n            }\n            const nextData = typeof dataUpdate === 'function' ? dataUpdate(node) : dataUpdate;\n            node.data = options?.replace ? nextData : { ...node.data, ...nextData };\n            nodes.update((nds) => nds);\n        },\n        getNodesBounds: (nodes) => {\n            const _nodeLookup = get(nodeLookup);\n            const _nodeOrigin = get(nodeOrigin);\n            return getNodesBounds(nodes, { nodeLookup: _nodeLookup, nodeOrigin: _nodeOrigin });\n        },\n        getHandleConnections: ({ type, id, nodeId }) => Array.from(get(connectionLookup)\n            .get(`${nodeId}-${type}-${id ?? null}`)\n            ?.values() ?? []),\n        viewport\n    };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getElements(lookup, ids) {\n    const result = [];\n    for (const id of ids) {\n        const item = lookup.get(id);\n        if (item) {\n            const element = 'internals' in item ? item.internals?.userNode : item;\n            result.push(element);\n        }\n    }\n    return result;\n}\n","import { useStore } from '../store';\n/**\n * Hook for seeing if nodes are initialized\n * @returns - nodesInitialized Writable\n */\nexport function useNodesInitialized() {\n    const { nodesInitialized } = useStore();\n    return {\n        subscribe: nodesInitialized.subscribe\n    };\n}\n/**\n * Hook for seeing if the flow is initialized\n * @returns - initialized Writable\n */\nexport function useInitialized() {\n    const { initialized } = useStore();\n    return {\n        subscribe: initialized.subscribe\n    };\n}\n","<script lang=\"ts\">\n\timport { toast } from 'svelte-sonner';\n\n\timport { config, functions, models, settings, tools, user } from '$lib/stores';\n\timport { createEventDispatcher, onMount, getContext, tick } from 'svelte';\n\n\timport {\n\t\tgetUserValvesSpecById as getToolUserValvesSpecById,\n\t\tgetUserValvesById as getToolUserValvesById,\n\t\tupdateUserValvesById as updateToolUserValvesById,\n\t\tgetTools\n\t} from '$lib/apis/tools';\n\timport {\n\t\tgetUserValvesSpecById as getFunctionUserValvesSpecById,\n\t\tgetUserValvesById as getFunctionUserValvesById,\n\t\tupdateUserValvesById as updateFunctionUserValvesById,\n\t\tgetFunctions\n\t} from '$lib/apis/functions';\n\n\timport Tooltip from '$lib/components/common/Tooltip.svelte';\n\timport Spinner from '$lib/components/common/Spinner.svelte';\n\timport Valves from '$lib/components/common/Valves.svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst i18n = getContext('i18n');\n\n\texport let show = false;\n\n\tlet tab = 'tools';\n\tlet selectedId = '';\n\n\tlet loading = false;\n\n\tlet valvesSpec = null;\n\tlet valves = {};\n\n\tlet debounceTimer;\n\n\tconst debounceSubmitHandler = async () => {\n\t\tif (debounceTimer) {\n\t\t\tclearTimeout(debounceTimer);\n\t\t}\n\n\t\t// Set a new timer\n\t\tdebounceTimer = setTimeout(() => {\n\t\t\tsubmitHandler();\n\t\t}, 500); // 0.5 second debounce\n\t};\n\n\tconst getUserValves = async () => {\n\t\tloading = true;\n\t\tif (tab === 'tools') {\n\t\t\tvalves = await getToolUserValvesById(localStorage.token, selectedId);\n\t\t\tvalvesSpec = await getToolUserValvesSpecById(localStorage.token, selectedId);\n\t\t} else if (tab === 'functions') {\n\t\t\tvalves = await getFunctionUserValvesById(localStorage.token, selectedId);\n\t\t\tvalvesSpec = await getFunctionUserValvesSpecById(localStorage.token, selectedId);\n\t\t}\n\n\t\tif (valvesSpec) {\n\t\t\t// Convert array to string\n\t\t\tfor (const property in valvesSpec.properties) {\n\t\t\t\tif (valvesSpec.properties[property]?.type === 'array') {\n\t\t\t\t\tvalves[property] = (valves[property] ?? []).join(',');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tloading = false;\n\t};\n\n\tconst submitHandler = async () => {\n\t\tif (valvesSpec) {\n\t\t\t// Convert string to array\n\t\t\tfor (const property in valvesSpec.properties) {\n\t\t\t\tif (valvesSpec.properties[property]?.type === 'array') {\n\t\t\t\t\tvalves[property] = (valves[property] ?? '').split(',').map((v) => v.trim());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tab === 'tools') {\n\t\t\t\tconst res = await updateToolUserValvesById(localStorage.token, selectedId, valves).catch(\n\t\t\t\t\t(error) => {\n\t\t\t\t\t\ttoast.error(`${error}`);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif (res) {\n\t\t\t\t\ttoast.success($i18n.t('Valves updated'));\n\t\t\t\t\tvalves = res;\n\t\t\t\t}\n\t\t\t} else if (tab === 'functions') {\n\t\t\t\tconst res = await updateFunctionUserValvesById(\n\t\t\t\t\tlocalStorage.token,\n\t\t\t\t\tselectedId,\n\t\t\t\t\tvalves\n\t\t\t\t).catch((error) => {\n\t\t\t\t\ttoast.error(`${error}`);\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\n\t\t\t\tif (res) {\n\t\t\t\t\ttoast.success($i18n.t('Valves updated'));\n\t\t\t\t\tvalves = res;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t$: if (tab) {\n\t\tselectedId = '';\n\t}\n\n\t$: if (selectedId) {\n\t\tgetUserValves();\n\t}\n\n\t$: if (show) {\n\t\tinit();\n\t}\n\n\tconst init = async () => {\n\t\tloading = true;\n\n\t\tif ($functions === null) {\n\t\t\tfunctions.set(await getFunctions(localStorage.token));\n\t\t}\n\t\tif ($tools === null) {\n\t\t\ttools.set(await getTools(localStorage.token));\n\t\t}\n\n\t\tloading = false;\n\t};\n</script>\n\n{#if show && !loading}\n\t<form\n\t\tclass=\"flex flex-col h-full justify-between space-y-3 text-sm\"\n\t\ton:submit|preventDefault={() => {\n\t\t\tsubmitHandler();\n\t\t\tdispatch('save');\n\t\t}}\n\t>\n\t\t<div class=\"flex flex-col\">\n\t\t\t<div class=\"space-y-1\">\n\t\t\t\t<div class=\"flex gap-2\">\n\t\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tclass=\"  w-full rounded-sm text-xs py-2 px-1 bg-transparent outline-hidden\"\n\t\t\t\t\t\t\tbind:value={tab}\n\t\t\t\t\t\t\tplaceholder=\"Select\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"tools\" class=\"bg-gray-100 dark:bg-gray-800\">{$i18n.t('Tools')}</option>\n\t\t\t\t\t\t\t<option value=\"functions\" class=\"bg-gray-100 dark:bg-gray-800\"\n\t\t\t\t\t\t\t\t>{$i18n.t('Functions')}</option\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tclass=\"w-full rounded-sm py-2 px-1 text-xs bg-transparent outline-hidden\"\n\t\t\t\t\t\t\tbind:value={selectedId}\n\t\t\t\t\t\t\ton:change={async () => {\n\t\t\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#if tab === 'tools'}\n\t\t\t\t\t\t\t\t<option value=\"\" selected disabled class=\"bg-gray-100 dark:bg-gray-800\"\n\t\t\t\t\t\t\t\t\t>{$i18n.t('Select a tool')}</option\n\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t{#each $tools as tool, toolIdx}\n\t\t\t\t\t\t\t\t\t<option value={tool.id} class=\"bg-gray-100 dark:bg-gray-800\">{tool.name}</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t{:else if tab === 'functions'}\n\t\t\t\t\t\t\t\t<option value=\"\" selected disabled class=\"bg-gray-100 dark:bg-gray-800\"\n\t\t\t\t\t\t\t\t\t>{$i18n.t('Select a function')}</option\n\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t{#each $functions as func, funcIdx}\n\t\t\t\t\t\t\t\t\t<option value={func.id} class=\"bg-gray-100 dark:bg-gray-800\">{func.name}</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{#if selectedId}\n\t\t\t\t<hr class=\"dark:border-gray-800 my-1 w-full\" />\n\n\t\t\t\t<div class=\"my-2 text-xs\">\n\t\t\t\t\t{#if !loading}\n\t\t\t\t\t\t<Valves\n\t\t\t\t\t\t\t{valvesSpec}\n\t\t\t\t\t\t\tbind:valves\n\t\t\t\t\t\t\ton:change={() => {\n\t\t\t\t\t\t\t\tdebounceSubmitHandler();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<Spinner className=\"size-5\" />\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t</form>\n{:else}\n\t<Spinner className=\"size-4\" />\n{/if}\n","<script lang=\"ts\">\n\timport { createEventDispatcher, getContext } from 'svelte';\n\tconst dispatch = createEventDispatcher();\n\tconst i18n = getContext('i18n');\n\n\timport XMark from '$lib/components/icons/XMark.svelte';\n\timport AdvancedParams from '../Settings/Advanced/AdvancedParams.svelte';\n\timport Valves from '$lib/components/chat/Controls/Valves.svelte';\n\timport FileItem from '$lib/components/common/FileItem.svelte';\n\timport Collapsible from '$lib/components/common/Collapsible.svelte';\n\n\timport { user } from '$lib/stores';\n\texport let models = [];\n\texport let chatFiles = [];\n\texport let params = {};\n\n\tlet showValves = false;\n</script>\n\n<div class=\" dark:text-white\">\n\t<div class=\" flex items-center justify-between dark:text-gray-100 mb-2\">\n\t\t<div class=\" text-lg font-medium self-center font-primary\">{$i18n.t('Chat Controls')}</div>\n\t\t<button\n\t\t\tclass=\"self-center\"\n\t\t\ton:click={() => {\n\t\t\t\tdispatch('close');\n\t\t\t}}\n\t\t>\n\t\t\t<XMark className=\"size-3.5\" />\n\t\t</button>\n\t</div>\n\n\t{#if $user.role === 'admin' || $user?.permissions.chat?.controls}\n\t\t<div class=\" dark:text-gray-200 text-sm font-primary py-0.5 px-0.5\">\n\t\t\t{#if chatFiles.length > 0}\n\t\t\t\t<Collapsible title={$i18n.t('Files')} open={true} buttonClassName=\"w-full\">\n\t\t\t\t\t<div class=\"flex flex-col gap-1 mt-1.5\" slot=\"content\">\n\t\t\t\t\t\t{#each chatFiles as file, fileIdx}\n\t\t\t\t\t\t\t<FileItem\n\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\titem={file}\n\t\t\t\t\t\t\t\tedit={true}\n\t\t\t\t\t\t\t\turl={file?.url ? file.url : null}\n\t\t\t\t\t\t\t\tname={file.name}\n\t\t\t\t\t\t\t\ttype={file.type}\n\t\t\t\t\t\t\t\tsize={file?.size}\n\t\t\t\t\t\t\t\tdismissible={true}\n\t\t\t\t\t\t\t\ton:dismiss={() => {\n\t\t\t\t\t\t\t\t\t// Remove the file from the chatFiles array\n\n\t\t\t\t\t\t\t\t\tchatFiles.splice(fileIdx, 1);\n\t\t\t\t\t\t\t\t\tchatFiles = chatFiles;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\tconsole.log(file);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</Collapsible>\n\n\t\t\t\t<hr class=\"my-2 border-gray-50 dark:border-gray-700/10\" />\n\t\t\t{/if}\n\n\t\t\t<Collapsible bind:open={showValves} title={$i18n.t('Valves')} buttonClassName=\"w-full\">\n\t\t\t\t<div class=\"text-sm\" slot=\"content\">\n\t\t\t\t\t<Valves show={showValves} />\n\t\t\t\t</div>\n\t\t\t</Collapsible>\n\n\t\t\t<hr class=\"my-2 border-gray-50 dark:border-gray-700/10\" />\n\n\t\t\t<Collapsible title={$i18n.t('System Prompt')} open={true} buttonClassName=\"w-full\">\n\t\t\t\t<div class=\"\" slot=\"content\">\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tbind:value={params.system}\n\t\t\t\t\t\tclass=\"w-full text-xs py-1.5 bg-transparent outline-hidden resize-none\"\n\t\t\t\t\t\trows=\"4\"\n\t\t\t\t\t\tplaceholder={$i18n.t('Enter system prompt')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Collapsible>\n\n\t\t\t<hr class=\"my-2 border-gray-50 dark:border-gray-700/10\" />\n\n\t\t\t<Collapsible title={$i18n.t('Advanced Params')} open={true} buttonClassName=\"w-full\">\n\t\t\t\t<div class=\"text-sm mt-1.5\" slot=\"content\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<AdvancedParams admin={$user?.role === 'admin'} bind:params />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Collapsible>\n\t\t</div>\n\t{:else}\n\t\t<div class=\"text-sm dark:text-gray-300 text-center py-2 px-10\">\n\t\t\t{$i18n.t('You do not have permission to access this feature.')}\n\t\t</div>\n\t{/if}\n</div>\n","<script lang=\"ts\">\n\timport { DropdownMenu } from 'bits-ui';\n\timport { flyAndScale } from '$lib/utils/transitions';\n\timport { getContext, createEventDispatcher } from 'svelte';\n\n\tconst i18n = getContext('i18n');\n\tconst dispatch = createEventDispatcher();\n\n\timport Dropdown from '$lib/components/common/Dropdown.svelte';\n\n\texport let onClose: Function = () => {};\n\texport let devices: any;\n\n\tlet show = false;\n</script>\n\n<Dropdown\n\tbind:show\n\ton:change={(e) => {\n\t\tif (e.detail === false) {\n\t\t\tonClose();\n\t\t}\n\t}}\n>\n\t<slot />\n\n\t<div slot=\"content\">\n\t\t<DropdownMenu.Content\n\t\t\tclass=\"w-full max-w-[180px] rounded-lg px-1 py-1.5 border border-gray-300/30 dark:border-gray-700/50 z-9999 bg-white dark:bg-gray-900 dark:text-white shadow-xs\"\n\t\t\tsideOffset={6}\n\t\t\tside=\"top\"\n\t\t\talign=\"start\"\n\t\t\ttransition={flyAndScale}\n\t\t>\n\t\t\t{#each devices as device}\n\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tdispatch('change', device.deviceId);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t<div class=\" line-clamp-1\">\n\t\t\t\t\t\t\t{device?.label ?? 'Camera'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</DropdownMenu.Item>\n\t\t\t{/each}\n\t\t</DropdownMenu.Content>\n\t</div>\n</Dropdown>\n","<script lang=\"ts\">\n\timport { config, models, settings, showCallOverlay, TTSWorker } from '$lib/stores';\n\timport { onMount, tick, getContext, onDestroy, createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\timport { blobToFile } from '$lib/utils';\n\timport { generateEmoji } from '$lib/apis';\n\timport { synthesizeOpenAISpeech, transcribeAudio } from '$lib/apis/audio';\n\n\timport { toast } from 'svelte-sonner';\n\n\timport Tooltip from '$lib/components/common/Tooltip.svelte';\n\timport VideoInputMenu from './CallOverlay/VideoInputMenu.svelte';\n\timport { KokoroWorker } from '$lib/workers/KokoroWorker';\n\n\tconst i18n = getContext('i18n');\n\n\texport let eventTarget: EventTarget;\n\texport let submitPrompt: Function;\n\texport let stopResponse: Function;\n\texport let files;\n\texport let chatId;\n\texport let modelId;\n\n\tlet wakeLock = null;\n\n\tlet model = null;\n\n\tlet loading = false;\n\tlet confirmed = false;\n\tlet interrupted = false;\n\tlet assistantSpeaking = false;\n\n\tlet emoji = null;\n\tlet camera = false;\n\tlet cameraStream = null;\n\n\tlet chatStreaming = false;\n\tlet rmsLevel = 0;\n\tlet hasStartedSpeaking = false;\n\tlet mediaRecorder;\n\tlet audioStream = null;\n\tlet audioChunks = [];\n\n\tlet videoInputDevices = [];\n\tlet selectedVideoInputDeviceId = null;\n\n\tconst getVideoInputDevices = async () => {\n\t\tconst devices = await navigator.mediaDevices.enumerateDevices();\n\t\tvideoInputDevices = devices.filter((device) => device.kind === 'videoinput');\n\n\t\tif (!!navigator.mediaDevices.getDisplayMedia) {\n\t\t\tvideoInputDevices = [\n\t\t\t\t...videoInputDevices,\n\t\t\t\t{\n\t\t\t\t\tdeviceId: 'screen',\n\t\t\t\t\tlabel: 'Screen Share'\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\n\t\tconsole.log(videoInputDevices);\n\t\tif (selectedVideoInputDeviceId === null && videoInputDevices.length > 0) {\n\t\t\tselectedVideoInputDeviceId = videoInputDevices[0].deviceId;\n\t\t}\n\t};\n\n\tconst startCamera = async () => {\n\t\tawait getVideoInputDevices();\n\n\t\tif (cameraStream === null) {\n\t\t\tcamera = true;\n\t\t\tawait tick();\n\t\t\ttry {\n\t\t\t\tawait startVideoStream();\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Error accessing webcam: ', err);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst startVideoStream = async () => {\n\t\tconst video = document.getElementById('camera-feed');\n\t\tif (video) {\n\t\t\tif (selectedVideoInputDeviceId === 'screen') {\n\t\t\t\tcameraStream = await navigator.mediaDevices.getDisplayMedia({\n\t\t\t\t\tvideo: {\n\t\t\t\t\t\tcursor: 'always'\n\t\t\t\t\t},\n\t\t\t\t\taudio: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcameraStream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\t\tvideo: {\n\t\t\t\t\t\tdeviceId: selectedVideoInputDeviceId ? { exact: selectedVideoInputDeviceId } : undefined\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (cameraStream) {\n\t\t\t\tawait getVideoInputDevices();\n\t\t\t\tvideo.srcObject = cameraStream;\n\t\t\t\tawait video.play();\n\t\t\t}\n\t\t}\n\t};\n\n\tconst stopVideoStream = async () => {\n\t\tif (cameraStream) {\n\t\t\tconst tracks = cameraStream.getTracks();\n\t\t\ttracks.forEach((track) => track.stop());\n\t\t}\n\n\t\tcameraStream = null;\n\t};\n\n\tconst takeScreenshot = () => {\n\t\tconst video = document.getElementById('camera-feed');\n\t\tconst canvas = document.getElementById('camera-canvas');\n\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst context = canvas.getContext('2d');\n\n\t\t// Make the canvas match the video dimensions\n\t\tcanvas.width = video.videoWidth;\n\t\tcanvas.height = video.videoHeight;\n\n\t\t// Draw the image from the video onto the canvas\n\t\tcontext.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n\t\t// Convert the canvas to a data base64 URL and console log it\n\t\tconst dataURL = canvas.toDataURL('image/png');\n\t\tconsole.log(dataURL);\n\n\t\treturn dataURL;\n\t};\n\n\tconst stopCamera = async () => {\n\t\tawait stopVideoStream();\n\t\tcamera = false;\n\t};\n\n\tconst MIN_DECIBELS = -55;\n\tconst VISUALIZER_BUFFER_LENGTH = 300;\n\n\tconst transcribeHandler = async (audioBlob) => {\n\t\t// Create a blob from the audio chunks\n\n\t\tawait tick();\n\t\tconst file = blobToFile(audioBlob, 'recording.wav');\n\n\t\tconst res = await transcribeAudio(localStorage.token, file).catch((error) => {\n\t\t\ttoast.error(`${error}`);\n\t\t\treturn null;\n\t\t});\n\n\t\tif (res) {\n\t\t\tconsole.log(res.text);\n\n\t\t\tif (res.text !== '') {\n\t\t\t\tconst _responses = await submitPrompt(res.text, { _raw: true });\n\t\t\t\tconsole.log(_responses);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst stopRecordingCallback = async (_continue = true) => {\n\t\tif ($showCallOverlay) {\n\t\t\tconsole.log('%c%s', 'color: red; font-size: 20px;', '🚨 stopRecordingCallback 🚨');\n\n\t\t\t// deep copy the audioChunks array\n\t\t\tconst _audioChunks = audioChunks.slice(0);\n\n\t\t\taudioChunks = [];\n\t\t\tmediaRecorder = false;\n\n\t\t\tif (_continue) {\n\t\t\t\tstartRecording();\n\t\t\t}\n\n\t\t\tif (confirmed) {\n\t\t\t\tloading = true;\n\t\t\t\temoji = null;\n\n\t\t\t\tif (cameraStream) {\n\t\t\t\t\tconst imageUrl = takeScreenshot();\n\n\t\t\t\t\tfiles = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\turl: imageUrl\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tconst audioBlob = new Blob(_audioChunks, { type: 'audio/wav' });\n\t\t\t\tawait transcribeHandler(audioBlob);\n\n\t\t\t\tconfirmed = false;\n\t\t\t\tloading = false;\n\t\t\t}\n\t\t} else {\n\t\t\taudioChunks = [];\n\t\t\tmediaRecorder = false;\n\n\t\t\tif (audioStream) {\n\t\t\t\tconst tracks = audioStream.getTracks();\n\t\t\t\ttracks.forEach((track) => track.stop());\n\t\t\t}\n\t\t\taudioStream = null;\n\t\t}\n\t};\n\n\tconst startRecording = async () => {\n\t\tif ($showCallOverlay) {\n\t\t\tif (!audioStream) {\n\t\t\t\taudioStream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\t\taudio: {\n\t\t\t\t\t\techoCancellation: true,\n\t\t\t\t\t\tnoiseSuppression: true,\n\t\t\t\t\t\tautoGainControl: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tmediaRecorder = new MediaRecorder(audioStream);\n\n\t\t\tmediaRecorder.onstart = () => {\n\t\t\t\tconsole.log('Recording started');\n\t\t\t\taudioChunks = [];\n\t\t\t\tanalyseAudio(audioStream);\n\t\t\t};\n\n\t\t\tmediaRecorder.ondataavailable = (event) => {\n\t\t\t\tif (hasStartedSpeaking) {\n\t\t\t\t\taudioChunks.push(event.data);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmediaRecorder.onstop = (e) => {\n\t\t\t\tconsole.log('Recording stopped', audioStream, e);\n\t\t\t\tstopRecordingCallback();\n\t\t\t};\n\n\t\t\tmediaRecorder.start();\n\t\t}\n\t};\n\n\tconst stopAudioStream = async () => {\n\t\ttry {\n\t\t\tif (mediaRecorder) {\n\t\t\t\tmediaRecorder.stop();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log('Error stopping audio stream:', error);\n\t\t}\n\n\t\tif (!audioStream) return;\n\n\t\taudioStream.getAudioTracks().forEach(function (track) {\n\t\t\ttrack.stop();\n\t\t});\n\n\t\taudioStream = null;\n\t};\n\n\t// Function to calculate the RMS level from time domain data\n\tconst calculateRMS = (data: Uint8Array) => {\n\t\tlet sumSquares = 0;\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst normalizedValue = (data[i] - 128) / 128; // Normalize the data\n\t\t\tsumSquares += normalizedValue * normalizedValue;\n\t\t}\n\t\treturn Math.sqrt(sumSquares / data.length);\n\t};\n\n\tconst analyseAudio = (stream) => {\n\t\tconst audioContext = new AudioContext();\n\t\tconst audioStreamSource = audioContext.createMediaStreamSource(stream);\n\n\t\tconst analyser = audioContext.createAnalyser();\n\t\tanalyser.minDecibels = MIN_DECIBELS;\n\t\taudioStreamSource.connect(analyser);\n\n\t\tconst bufferLength = analyser.frequencyBinCount;\n\n\t\tconst domainData = new Uint8Array(bufferLength);\n\t\tconst timeDomainData = new Uint8Array(analyser.fftSize);\n\n\t\tlet lastSoundTime = Date.now();\n\t\thasStartedSpeaking = false;\n\n\t\tconsole.log('🔊 Sound detection started', lastSoundTime, hasStartedSpeaking);\n\n\t\tconst detectSound = () => {\n\t\t\tconst processFrame = () => {\n\t\t\t\tif (!mediaRecorder || !$showCallOverlay) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (assistantSpeaking && !($settings?.voiceInterruption ?? false)) {\n\t\t\t\t\t// Mute the audio if the assistant is speaking\n\t\t\t\t\tanalyser.maxDecibels = 0;\n\t\t\t\t\tanalyser.minDecibels = -1;\n\t\t\t\t} else {\n\t\t\t\t\tanalyser.minDecibels = MIN_DECIBELS;\n\t\t\t\t\tanalyser.maxDecibels = -30;\n\t\t\t\t}\n\n\t\t\t\tanalyser.getByteTimeDomainData(timeDomainData);\n\t\t\t\tanalyser.getByteFrequencyData(domainData);\n\n\t\t\t\t// Calculate RMS level from time domain data\n\t\t\t\trmsLevel = calculateRMS(timeDomainData);\n\n\t\t\t\t// Check if initial speech/noise has started\n\t\t\t\tconst hasSound = domainData.some((value) => value > 0);\n\t\t\t\tif (hasSound) {\n\t\t\t\t\t// BIG RED TEXT\n\t\t\t\t\tconsole.log('%c%s', 'color: red; font-size: 20px;', '🔊 Sound detected');\n\n\t\t\t\t\tif (!hasStartedSpeaking) {\n\t\t\t\t\t\thasStartedSpeaking = true;\n\t\t\t\t\t\tstopAllAudio();\n\t\t\t\t\t}\n\n\t\t\t\t\tlastSoundTime = Date.now();\n\t\t\t\t}\n\n\t\t\t\t// Start silence detection only after initial speech/noise has been detected\n\t\t\t\tif (hasStartedSpeaking) {\n\t\t\t\t\tif (Date.now() - lastSoundTime > 2000) {\n\t\t\t\t\t\tconfirmed = true;\n\n\t\t\t\t\t\tif (mediaRecorder) {\n\t\t\t\t\t\t\tconsole.log('%c%s', 'color: red; font-size: 20px;', '🔇 Silence detected');\n\t\t\t\t\t\t\tmediaRecorder.stop();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twindow.requestAnimationFrame(processFrame);\n\t\t\t};\n\n\t\t\twindow.requestAnimationFrame(processFrame);\n\t\t};\n\n\t\tdetectSound();\n\t};\n\n\tlet finishedMessages = {};\n\tlet currentMessageId = null;\n\tlet currentUtterance = null;\n\n\tconst speakSpeechSynthesisHandler = (content) => {\n\t\tif ($showCallOverlay) {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tlet voices = [];\n\t\t\t\tconst getVoicesLoop = setInterval(async () => {\n\t\t\t\t\tvoices = await speechSynthesis.getVoices();\n\t\t\t\t\tif (voices.length > 0) {\n\t\t\t\t\t\tclearInterval(getVoicesLoop);\n\n\t\t\t\t\t\tconst voice =\n\t\t\t\t\t\t\tvoices\n\t\t\t\t\t\t\t\t?.filter(\n\t\t\t\t\t\t\t\t\t(v) => v.voiceURI === ($settings?.audio?.tts?.voice ?? $config?.audio?.tts?.voice)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t?.at(0) ?? undefined;\n\n\t\t\t\t\t\tcurrentUtterance = new SpeechSynthesisUtterance(content);\n\t\t\t\t\t\tcurrentUtterance.rate = $settings.audio?.tts?.playbackRate ?? 1;\n\n\t\t\t\t\t\tif (voice) {\n\t\t\t\t\t\t\tcurrentUtterance.voice = voice;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tspeechSynthesis.speak(currentUtterance);\n\t\t\t\t\t\tcurrentUtterance.onend = async (e) => {\n\t\t\t\t\t\t\tawait new Promise((r) => setTimeout(r, 200));\n\t\t\t\t\t\t\tresolve(e);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t};\n\n\tconst playAudio = (audio) => {\n\t\tif ($showCallOverlay) {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tconst audioElement = document.getElementById('audioElement') as HTMLAudioElement;\n\n\t\t\t\tif (audioElement) {\n\t\t\t\t\taudioElement.src = audio.src;\n\t\t\t\t\taudioElement.muted = true;\n\t\t\t\t\taudioElement.playbackRate = $settings.audio?.tts?.playbackRate ?? 1;\n\n\t\t\t\t\taudioElement\n\t\t\t\t\t\t.play()\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\taudioElement.muted = false;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t});\n\n\t\t\t\t\taudioElement.onended = async (e) => {\n\t\t\t\t\t\tawait new Promise((r) => setTimeout(r, 100));\n\t\t\t\t\t\tresolve(e);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t};\n\n\tconst stopAllAudio = async () => {\n\t\tassistantSpeaking = false;\n\t\tinterrupted = true;\n\n\t\tif (chatStreaming) {\n\t\t\tstopResponse();\n\t\t}\n\n\t\tif (currentUtterance) {\n\t\t\tspeechSynthesis.cancel();\n\t\t\tcurrentUtterance = null;\n\t\t}\n\n\t\tconst audioElement = document.getElementById('audioElement');\n\t\tif (audioElement) {\n\t\t\taudioElement.muted = true;\n\t\t\taudioElement.pause();\n\t\t\taudioElement.currentTime = 0;\n\t\t}\n\t};\n\n\tlet audioAbortController = new AbortController();\n\n\t// Audio cache map where key is the content and value is the Audio object.\n\tconst audioCache = new Map();\n\tconst emojiCache = new Map();\n\n\tconst fetchAudio = async (content) => {\n\t\tif (!audioCache.has(content)) {\n\t\t\ttry {\n\t\t\t\t// Set the emoji for the content if needed\n\t\t\t\tif ($settings?.showEmojiInCall ?? false) {\n\t\t\t\t\tconst emoji = await generateEmoji(localStorage.token, modelId, content, chatId);\n\t\t\t\t\tif (emoji) {\n\t\t\t\t\t\temojiCache.set(content, emoji);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($settings.audio?.tts?.engine === 'browser-kokoro') {\n\t\t\t\t\tconst blob = await $TTSWorker\n\t\t\t\t\t\t.generate({\n\t\t\t\t\t\t\ttext: content,\n\t\t\t\t\t\t\tvoice: $settings?.audio?.tts?.voice ?? $config?.audio?.tts?.voice\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\ttoast.error(`${error}`);\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (blob) {\n\t\t\t\t\t\taudioCache.set(content, new Audio(blob));\n\t\t\t\t\t}\n\t\t\t\t} else if ($config.audio.tts.engine !== '') {\n\t\t\t\t\tconst res = await synthesizeOpenAISpeech(\n\t\t\t\t\t\tlocalStorage.token,\n\t\t\t\t\t\t$settings?.audio?.tts?.defaultVoice === $config.audio.tts.voice\n\t\t\t\t\t\t\t? ($settings?.audio?.tts?.voice ?? $config?.audio?.tts?.voice)\n\t\t\t\t\t\t\t: $config?.audio?.tts?.voice,\n\t\t\t\t\t\tcontent\n\t\t\t\t\t).catch((error) => {\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\tconst blob = await res.blob();\n\t\t\t\t\t\tconst blobUrl = URL.createObjectURL(blob);\n\t\t\t\t\t\taudioCache.set(content, new Audio(blobUrl));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\taudioCache.set(content, true);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error synthesizing speech:', error);\n\t\t\t}\n\t\t}\n\n\t\treturn audioCache.get(content);\n\t};\n\n\tlet messages = {};\n\n\tconst monitorAndPlayAudio = async (id, signal) => {\n\t\twhile (!signal.aborted) {\n\t\t\tif (messages[id] && messages[id].length > 0) {\n\t\t\t\t// Retrieve the next content string from the queue\n\t\t\t\tconst content = messages[id].shift(); // Dequeues the content for playing\n\n\t\t\t\tif (audioCache.has(content)) {\n\t\t\t\t\t// If content is available in the cache, play it\n\n\t\t\t\t\t// Set the emoji for the content if available\n\t\t\t\t\tif (($settings?.showEmojiInCall ?? false) && emojiCache.has(content)) {\n\t\t\t\t\t\temoji = emojiCache.get(content);\n\t\t\t\t\t} else {\n\t\t\t\t\t\temoji = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($config.audio.tts.engine !== '') {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'%c%s',\n\t\t\t\t\t\t\t\t'color: red; font-size: 20px;',\n\t\t\t\t\t\t\t\t`Playing audio for content: ${content}`\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst audio = audioCache.get(content);\n\t\t\t\t\t\t\tawait playAudio(audio); // Here ensure that playAudio is indeed correct method to execute\n\t\t\t\t\t\t\tconsole.log(`Played audio for content: ${content}`);\n\t\t\t\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, 200)); // Wait before retrying to reduce tight loop\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.error('Error playing audio:', error);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait speakSpeechSynthesisHandler(content);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// If not available in the cache, push it back to the queue and delay\n\t\t\t\t\tmessages[id].unshift(content); // Re-queue the content at the start\n\t\t\t\t\tconsole.log(`Audio for \"${content}\" not yet available in the cache, re-queued...`);\n\t\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, 200)); // Wait before retrying to reduce tight loop\n\t\t\t\t}\n\t\t\t} else if (finishedMessages[id] && messages[id] && messages[id].length === 0) {\n\t\t\t\t// If the message is finished and there are no more messages to process, break the loop\n\t\t\t\tassistantSpeaking = false;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\t// No messages to process, sleep for a bit\n\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, 200));\n\t\t\t}\n\t\t}\n\t\tconsole.log(`Audio monitoring and playing stopped for message ID ${id}`);\n\t};\n\n\tconst chatStartHandler = async (e) => {\n\t\tconst { id } = e.detail;\n\n\t\tchatStreaming = true;\n\n\t\tif (currentMessageId !== id) {\n\t\t\tconsole.log(`Received chat start event for message ID ${id}`);\n\n\t\t\tcurrentMessageId = id;\n\t\t\tif (audioAbortController) {\n\t\t\t\taudioAbortController.abort();\n\t\t\t}\n\t\t\taudioAbortController = new AbortController();\n\n\t\t\tassistantSpeaking = true;\n\t\t\t// Start monitoring and playing audio for the message ID\n\t\t\tmonitorAndPlayAudio(id, audioAbortController.signal);\n\t\t}\n\t};\n\n\tconst chatEventHandler = async (e) => {\n\t\tconst { id, content } = e.detail;\n\t\t// \"id\" here is message id\n\t\t// if \"id\" is not the same as \"currentMessageId\" then do not process\n\t\t// \"content\" here is a sentence from the assistant,\n\t\t// there will be many sentences for the same \"id\"\n\n\t\tif (currentMessageId === id) {\n\t\t\tconsole.log(`Received chat event for message ID ${id}: ${content}`);\n\n\t\t\ttry {\n\t\t\t\tif (messages[id] === undefined) {\n\t\t\t\t\tmessages[id] = [content];\n\t\t\t\t} else {\n\t\t\t\t\tmessages[id].push(content);\n\t\t\t\t}\n\n\t\t\t\tconsole.log(content);\n\n\t\t\t\tfetchAudio(content);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Failed to fetch or play audio:', error);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst chatFinishHandler = async (e) => {\n\t\tconst { id, content } = e.detail;\n\t\t// \"content\" here is the entire message from the assistant\n\t\tfinishedMessages[id] = true;\n\n\t\tchatStreaming = false;\n\t};\n\n\tonMount(async () => {\n\t\tconst setWakeLock = async () => {\n\t\t\ttry {\n\t\t\t\twakeLock = await navigator.wakeLock.request('screen');\n\t\t\t} catch (err) {\n\t\t\t\t// The Wake Lock request has failed - usually system related, such as battery.\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\n\t\t\tif (wakeLock) {\n\t\t\t\t// Add a listener to release the wake lock when the page is unloaded\n\t\t\t\twakeLock.addEventListener('release', () => {\n\t\t\t\t\t// the wake lock has been released\n\t\t\t\t\tconsole.log('Wake Lock released');\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif ('wakeLock' in navigator) {\n\t\t\tawait setWakeLock();\n\n\t\t\tdocument.addEventListener('visibilitychange', async () => {\n\t\t\t\t// Re-request the wake lock if the document becomes visible\n\t\t\t\tif (wakeLock !== null && document.visibilityState === 'visible') {\n\t\t\t\t\tawait setWakeLock();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tmodel = $models.find((m) => m.id === modelId);\n\n\t\tstartRecording();\n\n\t\teventTarget.addEventListener('chat:start', chatStartHandler);\n\t\teventTarget.addEventListener('chat', chatEventHandler);\n\t\teventTarget.addEventListener('chat:finish', chatFinishHandler);\n\n\t\treturn async () => {\n\t\t\tawait stopAllAudio();\n\n\t\t\tstopAudioStream();\n\n\t\t\teventTarget.removeEventListener('chat:start', chatStartHandler);\n\t\t\teventTarget.removeEventListener('chat', chatEventHandler);\n\t\t\teventTarget.removeEventListener('chat:finish', chatFinishHandler);\n\n\t\t\taudioAbortController.abort();\n\t\t\tawait tick();\n\n\t\t\tawait stopAllAudio();\n\n\t\t\tawait stopRecordingCallback(false);\n\t\t\tawait stopCamera();\n\t\t};\n\t});\n\n\tonDestroy(async () => {\n\t\tawait stopAllAudio();\n\t\tawait stopRecordingCallback(false);\n\t\tawait stopCamera();\n\n\t\tawait stopAudioStream();\n\t\teventTarget.removeEventListener('chat:start', chatStartHandler);\n\t\teventTarget.removeEventListener('chat', chatEventHandler);\n\t\teventTarget.removeEventListener('chat:finish', chatFinishHandler);\n\t\taudioAbortController.abort();\n\n\t\tawait tick();\n\n\t\tawait stopAllAudio();\n\t});\n</script>\n\n{#if $showCallOverlay}\n\t<div class=\"max-w-lg w-full h-full max-h-[100dvh] flex flex-col justify-between p-3 md:p-6\">\n\t\t{#if camera}\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"flex justify-center items-center w-full h-20 min-h-20\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tif (assistantSpeaking) {\n\t\t\t\t\t\tstopAllAudio();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{#if emoji}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"  transition-all rounded-full\"\n\t\t\t\t\t\tstyle=\"font-size:{rmsLevel * 100 > 4\n\t\t\t\t\t\t\t? '4.5'\n\t\t\t\t\t\t\t: rmsLevel * 100 > 2\n\t\t\t\t\t\t\t\t? '4.25'\n\t\t\t\t\t\t\t\t: rmsLevel * 100 > 1\n\t\t\t\t\t\t\t\t\t? '3.75'\n\t\t\t\t\t\t\t\t\t: '3.5'}rem;width: 100%; text-align:center;\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{emoji}\n\t\t\t\t\t</div>\n\t\t\t\t{:else if loading || assistantSpeaking}\n\t\t\t\t\t<svg\n\t\t\t\t\t\tclass=\"size-12 text-gray-900 dark:text-gray-400\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t><style>\n\t\t\t\t\t\t\t.spinner_qM83 {\n\t\t\t\t\t\t\t\tanimation: spinner_8HQG 1.05s infinite;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t.spinner_oXPr {\n\t\t\t\t\t\t\t\tanimation-delay: 0.1s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t.spinner_ZTLf {\n\t\t\t\t\t\t\t\tanimation-delay: 0.2s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t@keyframes spinner_8HQG {\n\t\t\t\t\t\t\t\t0%,\n\t\t\t\t\t\t\t\t57.14% {\n\t\t\t\t\t\t\t\t\tanimation-timing-function: cubic-bezier(0.33, 0.66, 0.66, 1);\n\t\t\t\t\t\t\t\t\ttransform: translate(0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t28.57% {\n\t\t\t\t\t\t\t\t\tanimation-timing-function: cubic-bezier(0.33, 0, 0.66, 0.33);\n\t\t\t\t\t\t\t\t\ttransform: translateY(-6px);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t100% {\n\t\t\t\t\t\t\t\t\ttransform: translate(0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</style><circle class=\"spinner_qM83\" cx=\"4\" cy=\"12\" r=\"3\" /><circle\n\t\t\t\t\t\t\tclass=\"spinner_qM83 spinner_oXPr\"\n\t\t\t\t\t\t\tcx=\"12\"\n\t\t\t\t\t\t\tcy=\"12\"\n\t\t\t\t\t\t\tr=\"3\"\n\t\t\t\t\t\t/><circle class=\"spinner_qM83 spinner_ZTLf\" cx=\"20\" cy=\"12\" r=\"3\" /></svg\n\t\t\t\t\t>\n\t\t\t\t{:else}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\" {rmsLevel * 100 > 4\n\t\t\t\t\t\t\t? ' size-[4.5rem]'\n\t\t\t\t\t\t\t: rmsLevel * 100 > 2\n\t\t\t\t\t\t\t\t? ' size-16'\n\t\t\t\t\t\t\t\t: rmsLevel * 100 > 1\n\t\t\t\t\t\t\t\t\t? 'size-14'\n\t\t\t\t\t\t\t\t\t: 'size-12'}  transition-all rounded-full {(model?.info?.meta\n\t\t\t\t\t\t\t?.profile_image_url ?? '/static/favicon.png') !== '/static/favicon.png'\n\t\t\t\t\t\t\t? ' bg-cover bg-center bg-no-repeat'\n\t\t\t\t\t\t\t: 'bg-black dark:bg-white'}  bg-black dark:bg-white\"\n\t\t\t\t\t\tstyle={(model?.info?.meta?.profile_image_url ?? '/static/favicon.png') !==\n\t\t\t\t\t\t'/static/favicon.png'\n\t\t\t\t\t\t\t? `background-image: url('${model?.info?.meta?.profile_image_url}');`\n\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t<!-- navbar -->\n\t\t\t</button>\n\t\t{/if}\n\n\t\t<div class=\"flex justify-center items-center flex-1 h-full w-full max-h-full\">\n\t\t\t{#if !camera}\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tif (assistantSpeaking) {\n\t\t\t\t\t\t\tstopAllAudio();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{#if emoji}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"  transition-all rounded-full\"\n\t\t\t\t\t\t\tstyle=\"font-size:{rmsLevel * 100 > 4\n\t\t\t\t\t\t\t\t? '13'\n\t\t\t\t\t\t\t\t: rmsLevel * 100 > 2\n\t\t\t\t\t\t\t\t\t? '12'\n\t\t\t\t\t\t\t\t\t: rmsLevel * 100 > 1\n\t\t\t\t\t\t\t\t\t\t? '11.5'\n\t\t\t\t\t\t\t\t\t\t: '11'}rem;width:100%;text-align:center;\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{emoji}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else if loading || assistantSpeaking}\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tclass=\"size-44 text-gray-900 dark:text-gray-400\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t><style>\n\t\t\t\t\t\t\t\t.spinner_qM83 {\n\t\t\t\t\t\t\t\t\tanimation: spinner_8HQG 1.05s infinite;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t.spinner_oXPr {\n\t\t\t\t\t\t\t\t\tanimation-delay: 0.1s;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t.spinner_ZTLf {\n\t\t\t\t\t\t\t\t\tanimation-delay: 0.2s;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@keyframes spinner_8HQG {\n\t\t\t\t\t\t\t\t\t0%,\n\t\t\t\t\t\t\t\t\t57.14% {\n\t\t\t\t\t\t\t\t\t\tanimation-timing-function: cubic-bezier(0.33, 0.66, 0.66, 1);\n\t\t\t\t\t\t\t\t\t\ttransform: translate(0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t28.57% {\n\t\t\t\t\t\t\t\t\t\tanimation-timing-function: cubic-bezier(0.33, 0, 0.66, 0.33);\n\t\t\t\t\t\t\t\t\t\ttransform: translateY(-6px);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t100% {\n\t\t\t\t\t\t\t\t\t\ttransform: translate(0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</style><circle class=\"spinner_qM83\" cx=\"4\" cy=\"12\" r=\"3\" /><circle\n\t\t\t\t\t\t\t\tclass=\"spinner_qM83 spinner_oXPr\"\n\t\t\t\t\t\t\t\tcx=\"12\"\n\t\t\t\t\t\t\t\tcy=\"12\"\n\t\t\t\t\t\t\t\tr=\"3\"\n\t\t\t\t\t\t\t/><circle class=\"spinner_qM83 spinner_ZTLf\" cx=\"20\" cy=\"12\" r=\"3\" /></svg\n\t\t\t\t\t\t>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\" {rmsLevel * 100 > 4\n\t\t\t\t\t\t\t\t? ' size-52'\n\t\t\t\t\t\t\t\t: rmsLevel * 100 > 2\n\t\t\t\t\t\t\t\t\t? 'size-48'\n\t\t\t\t\t\t\t\t\t: rmsLevel * 100 > 1\n\t\t\t\t\t\t\t\t\t\t? 'size-44'\n\t\t\t\t\t\t\t\t\t\t: 'size-40'}  transition-all rounded-full {(model?.info?.meta\n\t\t\t\t\t\t\t\t?.profile_image_url ?? '/static/favicon.png') !== '/static/favicon.png'\n\t\t\t\t\t\t\t\t? ' bg-cover bg-center bg-no-repeat'\n\t\t\t\t\t\t\t\t: 'bg-black dark:bg-white'} \"\n\t\t\t\t\t\t\tstyle={(model?.info?.meta?.profile_image_url ?? '/static/favicon.png') !==\n\t\t\t\t\t\t\t'/static/favicon.png'\n\t\t\t\t\t\t\t\t? `background-image: url('${model?.info?.meta?.profile_image_url}');`\n\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t/>\n\t\t\t\t\t{/if}\n\t\t\t\t</button>\n\t\t\t{:else}\n\t\t\t\t<div class=\"relative flex video-container w-full max-h-full pt-2 pb-4 md:py-6 px-2 h-full\">\n\t\t\t\t\t<video\n\t\t\t\t\t\tid=\"camera-feed\"\n\t\t\t\t\t\tautoplay\n\t\t\t\t\t\tclass=\"rounded-2xl h-full min-w-full object-cover object-center\"\n\t\t\t\t\t\tplaysinline\n\t\t\t\t\t/>\n\n\t\t\t\t\t<canvas id=\"camera-canvas\" style=\"display:none;\" />\n\n\t\t\t\t\t<div class=\" absolute top-4 md:top-8 left-4\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"p-1.5 text-white cursor-pointer backdrop-blur-xl bg-black/10 rounded-full\"\n\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\tstopCamera();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\tclass=\"size-6\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\td=\"M5.28 4.22a.75.75 0 0 0-1.06 1.06L6.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L8 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L9.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L8 6.94 5.28 4.22Z\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<div class=\"flex justify-between items-center pb-2 w-full\">\n\t\t\t<div>\n\t\t\t\t{#if camera}\n\t\t\t\t\t<VideoInputMenu\n\t\t\t\t\t\tdevices={videoInputDevices}\n\t\t\t\t\t\ton:change={async (e) => {\n\t\t\t\t\t\t\tconsole.log(e.detail);\n\t\t\t\t\t\t\tselectedVideoInputDeviceId = e.detail;\n\t\t\t\t\t\t\tawait stopVideoStream();\n\t\t\t\t\t\t\tawait startVideoStream();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button class=\" p-3 rounded-full bg-gray-50 dark:bg-gray-900\" type=\"button\">\n\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\tclass=\"size-5\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\td=\"M15.312 11.424a5.5 5.5 0 0 1-9.201 2.466l-.312-.311h2.433a.75.75 0 0 0 0-1.5H3.989a.75.75 0 0 0-.75.75v4.242a.75.75 0 0 0 1.5 0v-2.43l.31.31a7 7 0 0 0 11.712-3.138.75.75 0 0 0-1.449-.39Zm1.23-3.723a.75.75 0 0 0 .219-.53V2.929a.75.75 0 0 0-1.5 0V5.36l-.31-.31A7 7 0 0 0 3.239 8.188a.75.75 0 1 0 1.448.389A5.5 5.5 0 0 1 13.89 6.11l.311.31h-2.432a.75.75 0 0 0 0 1.5h4.243a.75.75 0 0 0 .53-.219Z\"\n\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</VideoInputMenu>\n\t\t\t\t{:else}\n\t\t\t\t\t<Tooltip content={$i18n.t('Camera')}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\" p-3 rounded-full bg-gray-50 dark:bg-gray-900\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\ton:click={async () => {\n\t\t\t\t\t\t\t\tawait navigator.mediaDevices.getUserMedia({ video: true });\n\t\t\t\t\t\t\t\tstartCamera();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\tstroke-width=\"1.5\"\n\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\tclass=\"size-5\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\t\td=\"M6.827 6.175A2.31 2.31 0 0 1 5.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 0 0-1.134-.175 2.31 2.31 0 0 1-1.64-1.055l-.822-1.316a2.192 2.192 0 0 0-1.736-1.039 48.774 48.774 0 0 0-5.232 0 2.192 2.192 0 0 0-1.736 1.039l-.821 1.316Z\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\t\td=\"M16.5 12.75a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0ZM18.75 10.5h.008v.008h-.008V10.5Z\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tif (assistantSpeaking) {\n\t\t\t\t\t\t\tstopAllAudio();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div class=\" line-clamp-1 text-sm font-medium\">\n\t\t\t\t\t\t{#if loading}\n\t\t\t\t\t\t\t{$i18n.t('Thinking...')}\n\t\t\t\t\t\t{:else if assistantSpeaking}\n\t\t\t\t\t\t\t{$i18n.t('Tap to interrupt')}\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t{$i18n.t('Listening...')}\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\tclass=\" p-3 rounded-full bg-gray-50 dark:bg-gray-900\"\n\t\t\t\t\ton:click={async () => {\n\t\t\t\t\t\tawait stopAudioStream();\n\t\t\t\t\t\tawait stopVideoStream();\n\n\t\t\t\t\t\tconsole.log(audioStream);\n\t\t\t\t\t\tconsole.log(cameraStream);\n\n\t\t\t\t\t\tshowCallOverlay.set(false);\n\t\t\t\t\t\tdispatch('close');\n\t\t\t\t\t}}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\tclass=\"size-5\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\td=\"M6.28 5.22a.75.75 0 0 0-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 1 0 1.06 1.06L10 11.06l3.72 3.72a.75.75 0 1 0 1.06-1.06L11.06 10l3.72-3.72a.75.75 0 0 0-1.06-1.06L10 8.94 6.28 5.22Z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n{/if}\n","<script lang=\"ts\">\n\timport { WEBUI_BASE_URL } from '$lib/constants';\n\timport { Handle, Position, type NodeProps } from '@xyflow/svelte';\n\n\timport ProfileImage from '../Messages/ProfileImage.svelte';\n\timport Tooltip from '$lib/components/common/Tooltip.svelte';\n\timport Heart from '$lib/components/icons/Heart.svelte';\n\n\ttype $$Props = NodeProps;\n\texport let data: $$Props['data'];\n</script>\n\n<div\n\tclass=\"px-4 py-3 shadow-md rounded-xl dark:bg-black bg-white border dark:border-gray-900 w-60 h-20 group\"\n>\n\t<Tooltip\n\t\tcontent={data?.message?.error ? data.message.error.content : data.message.content}\n\t\tclass=\"w-full\"\n\t\tallowHTML={false}\n\t>\n\t\t{#if data.message.role === 'user'}\n\t\t\t<div class=\"flex w-full\">\n\t\t\t\t<ProfileImage\n\t\t\t\t\tsrc={data.user?.profile_image_url ?? '/user.png'}\n\t\t\t\t\tclassName={'size-5 -translate-y-[1px]'}\n\t\t\t\t/>\n\t\t\t\t<div class=\"ml-2\">\n\t\t\t\t\t<div class=\" flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\"text-xs text-black dark:text-white font-medium line-clamp-1\">\n\t\t\t\t\t\t\t{data?.user?.name ?? 'User'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{#if data?.message?.error}\n\t\t\t\t\t\t<div class=\"text-red-500 line-clamp-2 text-xs mt-0.5\">{data.message.error.content}</div>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<div class=\"text-gray-500 line-clamp-2 text-xs mt-0.5\">{data.message.content}</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{:else}\n\t\t\t<div class=\"flex w-full\">\n\t\t\t\t<ProfileImage\n\t\t\t\t\tsrc={data?.model?.info?.meta?.profile_image_url ?? ''}\n\t\t\t\t\tclassName={'size-5 -translate-y-[1px]'}\n\t\t\t\t/>\n\n\t\t\t\t<div class=\"ml-2\">\n\t\t\t\t\t<div class=\" flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\"text-xs text-black dark:text-white font-medium line-clamp-1\">\n\t\t\t\t\t\t\t{data?.model?.name ?? data?.message?.model ?? 'Assistant'}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass={data?.message?.favorite ? '' : 'invisible group-hover:visible'}\n\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\tdata.message.favorite = !(data?.message?.favorite ?? false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Heart\n\t\t\t\t\t\t\t\tclassName=\"size-3 {data?.message?.favorite\n\t\t\t\t\t\t\t\t\t? 'fill-red-500 stroke-red-500'\n\t\t\t\t\t\t\t\t\t: 'hover:fill-red-500 hover:stroke-red-500'} \"\n\t\t\t\t\t\t\t\tstrokeWidth=\"2.5\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{#if data?.message?.error}\n\t\t\t\t\t\t<div class=\"text-red-500 line-clamp-2 text-xs mt-0.5\">\n\t\t\t\t\t\t\t{data.message.error.content}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<div class=\"text-gray-500 line-clamp-2 text-xs mt-0.5\">{data.message.content}</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\t</Tooltip>\n\t<Handle type=\"target\" position={Position.Top} class=\"w-2 rounded-full dark:bg-gray-900\" />\n\t<Handle type=\"source\" position={Position.Bottom} class=\"w-2 rounded-full dark:bg-gray-900\" />\n</div>\n","<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\timport { theme } from '$lib/stores';\n\timport { Background, Controls, SvelteFlow, BackgroundVariant } from '@xyflow/svelte';\n\n\texport let nodes;\n\texport let nodeTypes;\n\texport let edges;\n</script>\n\n<SvelteFlow\n\t{nodes}\n\t{nodeTypes}\n\t{edges}\n\tfitView\n\tminZoom={0.001}\n\tcolorMode={$theme.includes('dark')\n\t\t? 'dark'\n\t\t: $theme === 'system'\n\t\t\t? window.matchMedia('(prefers-color-scheme: dark)').matches\n\t\t\t\t? 'dark'\n\t\t\t\t: 'light'\n\t\t\t: 'light'}\n\tnodesConnectable={false}\n\tnodesDraggable={false}\n\ton:nodeclick={(e) => dispatch('nodeclick', e.detail)}\n\toninit={() => {\n\t\tconsole.log('Flow initialized');\n\t}}\n>\n\t<Controls showLock={false} />\n\t<Background variant={BackgroundVariant.Dots} />\n</SvelteFlow>\n","<script lang=\"ts\">\n\texport let className = 'size-4';\n\texport let strokeWidth = '1.5';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tfill=\"none\"\n\tviewBox=\"0 0 24 24\"\n\tstroke-width={strokeWidth}\n\tstroke=\"currentColor\"\n\tclass={className}\n>\n\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18\" />\n</svg>\n","<script lang=\"ts\">\n\timport { getContext, createEventDispatcher, onDestroy } from 'svelte';\n\timport { useSvelteFlow, useNodesInitialized, useStore } from '@xyflow/svelte';\n\n\tconst dispatch = createEventDispatcher();\n\tconst i18n = getContext('i18n');\n\n\timport { onMount, tick } from 'svelte';\n\n\timport { writable } from 'svelte/store';\n\timport { models, showOverview, theme, user } from '$lib/stores';\n\n\timport '@xyflow/svelte/dist/style.css';\n\n\timport CustomNode from './Overview/Node.svelte';\n\timport Flow from './Overview/Flow.svelte';\n\timport XMark from '../icons/XMark.svelte';\n\timport ArrowLeft from '../icons/ArrowLeft.svelte';\n\n\tconst { width, height } = useStore();\n\n\tconst { fitView, getViewport } = useSvelteFlow();\n\tconst nodesInitialized = useNodesInitialized();\n\n\texport let history;\n\n\tlet selectedMessageId = null;\n\n\tconst nodes = writable([]);\n\tconst edges = writable([]);\n\n\tconst nodeTypes = {\n\t\tcustom: CustomNode\n\t};\n\n\t$: if (history) {\n\t\tdrawFlow();\n\t}\n\n\t$: if (history && history.currentId) {\n\t\tfocusNode();\n\t}\n\n\tconst focusNode = async () => {\n\t\tif (selectedMessageId === null) {\n\t\t\tawait fitView({ nodes: [{ id: history.currentId }] });\n\t\t} else {\n\t\t\tawait fitView({ nodes: [{ id: selectedMessageId }] });\n\t\t}\n\n\t\tselectedMessageId = null;\n\t};\n\n\tconst drawFlow = async () => {\n\t\tconst nodeList = [];\n\t\tconst edgeList = [];\n\t\tconst levelOffset = 150; // Vertical spacing between layers\n\t\tconst siblingOffset = 250; // Horizontal spacing between nodes at the same layer\n\n\t\t// Map to keep track of node positions at each level\n\t\tlet positionMap = new Map();\n\n\t\t// Helper function to truncate labels\n\t\tfunction createLabel(content) {\n\t\t\tconst maxLength = 100;\n\t\t\treturn content.length > maxLength ? content.substr(0, maxLength) + '...' : content;\n\t\t}\n\n\t\t// Create nodes and map children to ensure alignment in width\n\t\tlet layerWidths = {}; // Track widths of each layer\n\n\t\tObject.keys(history.messages).forEach((id) => {\n\t\t\tconst message = history.messages[id];\n\t\t\tconst level = message.parentId ? (positionMap.get(message.parentId)?.level ?? -1) + 1 : 0;\n\t\t\tif (!layerWidths[level]) layerWidths[level] = 0;\n\n\t\t\tpositionMap.set(id, {\n\t\t\t\tid: message.id,\n\t\t\t\tlevel,\n\t\t\t\tposition: layerWidths[level]++\n\t\t\t});\n\t\t});\n\n\t\t// Adjust positions based on siblings count to centralize vertical spacing\n\t\tObject.keys(history.messages).forEach((id) => {\n\t\t\tconst pos = positionMap.get(id);\n\t\t\tconst xOffset = pos.position * siblingOffset;\n\t\t\tconst y = pos.level * levelOffset;\n\t\t\tconst x = xOffset;\n\n\t\t\tnodeList.push({\n\t\t\t\tid: pos.id,\n\t\t\t\ttype: 'custom',\n\t\t\t\tdata: {\n\t\t\t\t\tuser: $user,\n\t\t\t\t\tmessage: history.messages[id],\n\t\t\t\t\tmodel: $models.find((model) => model.id === history.messages[id].model)\n\t\t\t\t},\n\t\t\t\tposition: { x, y }\n\t\t\t});\n\n\t\t\t// Create edges\n\t\t\tconst parentId = history.messages[id].parentId;\n\t\t\tif (parentId) {\n\t\t\t\tedgeList.push({\n\t\t\t\t\tid: parentId + '-' + pos.id,\n\t\t\t\t\tsource: parentId,\n\t\t\t\t\ttarget: pos.id,\n\t\t\t\t\tselectable: false,\n\t\t\t\t\tclass: ' dark:fill-gray-300 fill-gray-300',\n\t\t\t\t\ttype: 'smoothstep',\n\t\t\t\t\tanimated: history.currentId === id || recurseCheckChild(id, history.currentId)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tawait edges.set([...edgeList]);\n\t\tawait nodes.set([...nodeList]);\n\t};\n\n\tconst recurseCheckChild = (nodeId, currentId) => {\n\t\tconst node = history.messages[nodeId];\n\t\treturn (\n\t\t\tnode.childrenIds &&\n\t\t\tnode.childrenIds.some((id) => id === currentId || recurseCheckChild(id, currentId))\n\t\t);\n\t};\n\n\tonMount(() => {\n\t\tdrawFlow();\n\n\t\tnodesInitialized.subscribe(async (initialized) => {\n\t\t\tif (initialized) {\n\t\t\t\tawait tick();\n\t\t\t\tconst res = await fitView({ nodes: [{ id: history.currentId }] });\n\t\t\t}\n\t\t});\n\n\t\twidth.subscribe((value) => {\n\t\t\tif (value) {\n\t\t\t\t// fitView();\n\t\t\t\tfitView({ nodes: [{ id: history.currentId }] });\n\t\t\t}\n\t\t});\n\n\t\theight.subscribe((value) => {\n\t\t\tif (value) {\n\t\t\t\t// fitView();\n\t\t\t\tfitView({ nodes: [{ id: history.currentId }] });\n\t\t\t}\n\t\t});\n\t});\n\n\tonDestroy(() => {\n\t\tconsole.log('Overview destroyed');\n\n\t\tnodes.set([]);\n\t\tedges.set([]);\n\t});\n</script>\n\n<div class=\"w-full h-full relative\">\n\t<div class=\" absolute z-50 w-full flex justify-between dark:text-gray-100 px-4 py-3.5\">\n\t\t<div class=\"flex items-center gap-2.5\">\n\t\t\t<!-- <button\n\t\t\t\tclass=\"self-center p-0.5\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tshowOverview.set(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowLeft className=\"size-3.5\" />\n\t\t\t</button> -->\n\t\t\t<div class=\" text-lg font-medium self-center font-primary\">{$i18n.t('Chat Overview')}</div>\n\t\t</div>\n\t\t<button\n\t\t\tclass=\"self-center p-0.5\"\n\t\t\ton:click={() => {\n\t\t\t\tdispatch('close');\n\t\t\t\tshowOverview.set(false);\n\t\t\t}}\n\t\t>\n\t\t\t<XMark className=\"size-3.5\" />\n\t\t</button>\n\t</div>\n\n\t{#if $nodes.length > 0}\n\t\t<Flow\n\t\t\t{nodes}\n\t\t\t{nodeTypes}\n\t\t\t{edges}\n\t\t\ton:nodeclick={(e) => {\n\t\t\t\tconsole.log(e.detail.node.data);\n\t\t\t\tdispatch('nodeclick', e.detail);\n\t\t\t\tselectedMessageId = e.detail.node.data.message.id;\n\t\t\t\tfitView({ nodes: [{ id: selectedMessageId }] });\n\t\t\t}}\n\t\t/>\n\t{/if}\n</div>\n","<script lang=\"ts\">\n\texport let className = 'w-4 h-4';\n\texport let strokeWidth = '1.5';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tfill=\"none\"\n\tviewBox=\"0 0 24 24\"\n\tstroke-width={strokeWidth}\n\tstroke=\"currentColor\"\n\tclass={className}\n>\n\t<path\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t\td=\"M12 6.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 12.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 18.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5Z\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\texport let className = 'size-4';\n\texport let strokeWidth = '1.5';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tfill=\"none\"\n\tviewBox=\"0 0 24 24\"\n\tstroke-width={strokeWidth}\n\tstroke=\"currentColor\"\n\tclass={className}\n>\n\t<path\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t\td=\"M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\timport { toast } from 'svelte-sonner';\n\timport { onMount, getContext, createEventDispatcher } from 'svelte';\n\tconst i18n = getContext('i18n');\n\tconst dispatch = createEventDispatcher();\n\n\timport { chatId, showArtifacts, showControls } from '$lib/stores';\n\timport XMark from '../icons/XMark.svelte';\n\timport { copyToClipboard, createMessagesList } from '$lib/utils';\n\timport ArrowsPointingOut from '../icons/ArrowsPointingOut.svelte';\n\timport Tooltip from '../common/Tooltip.svelte';\n\timport SvgPanZoom from '../common/SVGPanZoom.svelte';\n\timport ArrowLeft from '../icons/ArrowLeft.svelte';\n\n\texport let overlay = false;\n\texport let history;\n\tlet messages = [];\n\n\tlet contents: Array<{ type: string; content: string }> = [];\n\tlet selectedContentIdx = 0;\n\n\tlet copied = false;\n\tlet iframeElement: HTMLIFrameElement;\n\n\t$: if (history) {\n\t\tmessages = createMessagesList(history, history.currentId);\n\t\tgetContents();\n\t} else {\n\t\tmessages = [];\n\t\tgetContents();\n\t}\n\n\tconst getContents = () => {\n\t\tcontents = [];\n\t\tmessages.forEach((message) => {\n\t\t\tif (message?.role !== 'user' && message?.content) {\n\t\t\t\tconst codeBlockContents = message.content.match(/```[\\s\\S]*?```/g);\n\t\t\t\tlet codeBlocks = [];\n\n\t\t\t\tif (codeBlockContents) {\n\t\t\t\t\tcodeBlockContents.forEach((block) => {\n\t\t\t\t\t\tconst lang = block.split('\\n')[0].replace('```', '').trim().toLowerCase();\n\t\t\t\t\t\tconst code = block.replace(/```[\\s\\S]*?\\n/, '').replace(/```$/, '');\n\t\t\t\t\t\tcodeBlocks.push({ lang, code });\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlet htmlContent = '';\n\t\t\t\tlet cssContent = '';\n\t\t\t\tlet jsContent = '';\n\n\t\t\t\tcodeBlocks.forEach((block) => {\n\t\t\t\t\tconst { lang, code } = block;\n\n\t\t\t\t\tif (lang === 'html') {\n\t\t\t\t\t\thtmlContent += code + '\\n';\n\t\t\t\t\t} else if (lang === 'css') {\n\t\t\t\t\t\tcssContent += code + '\\n';\n\t\t\t\t\t} else if (lang === 'javascript' || lang === 'js') {\n\t\t\t\t\t\tjsContent += code + '\\n';\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst inlineHtml = message.content.match(/<html>[\\s\\S]*?<\\/html>/gi);\n\t\t\t\tconst inlineCss = message.content.match(/<style>[\\s\\S]*?<\\/style>/gi);\n\t\t\t\tconst inlineJs = message.content.match(/<script>[\\s\\S]*?<\\/script>/gi);\n\n\t\t\t\tif (inlineHtml) {\n\t\t\t\t\tinlineHtml.forEach((block) => {\n\t\t\t\t\t\tconst content = block.replace(/<\\/?html>/gi, ''); // Remove <html> tags\n\t\t\t\t\t\thtmlContent += content + '\\n';\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (inlineCss) {\n\t\t\t\t\tinlineCss.forEach((block) => {\n\t\t\t\t\t\tconst content = block.replace(/<\\/?style>/gi, ''); // Remove <style> tags\n\t\t\t\t\t\tcssContent += content + '\\n';\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (inlineJs) {\n\t\t\t\t\tinlineJs.forEach((block) => {\n\t\t\t\t\t\tconst content = block.replace(/<\\/?script>/gi, ''); // Remove <script> tags\n\t\t\t\t\t\tjsContent += content + '\\n';\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (htmlContent || cssContent || jsContent) {\n\t\t\t\t\tconst renderedContent = `\n                        <!DOCTYPE html>\n                        <html lang=\"en\">\n                        <head>\n                            <meta charset=\"UTF-8\">\n                            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t\t\t\t\t<${''}style>\n\t\t\t\t\t\t\t\tbody {\n\t\t\t\t\t\t\t\t\tbackground-color: white; /* Ensure the iframe has a white background */\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t${cssContent}\n\t\t\t\t\t\t\t</${''}style>\n                        </head>\n                        <body>\n                            ${htmlContent}\n\n\t\t\t\t\t\t\t<${''}script>\n                            \t${jsContent}\n\t\t\t\t\t\t\t</${''}script>\n                        </body>\n                        </html>\n                    `;\n\t\t\t\t\tcontents = [...contents, { type: 'iframe', content: renderedContent }];\n\t\t\t\t} else {\n\t\t\t\t\t// Check for SVG content\n\t\t\t\t\tfor (const block of codeBlocks) {\n\t\t\t\t\t\tif (block.lang === 'svg' || (block.lang === 'xml' && block.code.includes('<svg'))) {\n\t\t\t\t\t\t\tcontents = [...contents, { type: 'svg', content: block.code }];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (contents.length === 0) {\n\t\t\tshowControls.set(false);\n\t\t\tshowArtifacts.set(false);\n\t\t}\n\n\t\tselectedContentIdx = contents ? contents.length - 1 : 0;\n\t};\n\n\tfunction navigateContent(direction: 'prev' | 'next') {\n\t\tconsole.log(selectedContentIdx);\n\n\t\tselectedContentIdx =\n\t\t\tdirection === 'prev'\n\t\t\t\t? Math.max(selectedContentIdx - 1, 0)\n\t\t\t\t: Math.min(selectedContentIdx + 1, contents.length - 1);\n\n\t\tconsole.log(selectedContentIdx);\n\t}\n\n\tconst iframeLoadHandler = () => {\n\t\tiframeElement.contentWindow.addEventListener(\n\t\t\t'click',\n\t\t\tfunction (e) {\n\t\t\t\tconst target = e.target.closest('a');\n\t\t\t\tif (target && target.href) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tconst url = new URL(target.href, iframeElement.baseURI);\n\t\t\t\t\tif (url.origin === window.location.origin) {\n\t\t\t\t\t\tiframeElement.contentWindow.history.pushState(\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\turl.pathname + url.search + url.hash\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('External navigation blocked:', url.href);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\n\t\t// Cancel drag when hovering over iframe\n\t\tiframeElement.contentWindow.addEventListener('mouseenter', function (e) {\n\t\t\te.preventDefault();\n\t\t\tiframeElement.contentWindow.addEventListener('dragstart', (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t\t});\n\t};\n\n\tconst showFullScreen = () => {\n\t\tif (iframeElement.requestFullscreen) {\n\t\t\tiframeElement.requestFullscreen();\n\t\t} else if (iframeElement.webkitRequestFullscreen) {\n\t\t\tiframeElement.webkitRequestFullscreen();\n\t\t} else if (iframeElement.msRequestFullscreen) {\n\t\t\tiframeElement.msRequestFullscreen();\n\t\t}\n\t};\n\n\tonMount(() => {});\n</script>\n\n<div class=\" w-full h-full relative flex flex-col bg-gray-50 dark:bg-gray-850\">\n\t<div class=\"w-full h-full flex-1 relative\">\n\t\t{#if overlay}\n\t\t\t<div class=\" absolute top-0 left-0 right-0 bottom-0 z-10\"></div>\n\t\t{/if}\n\n\t\t<div class=\"absolute pointer-events-none z-50 w-full flex items-center justify-start p-4\">\n\t\t\t<button\n\t\t\t\tclass=\"self-center pointer-events-auto p-1 rounded-full bg-white dark:bg-gray-850\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tshowArtifacts.set(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowLeft className=\"size-3.5  text-gray-900 dark:text-white\" />\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div class=\" absolute pointer-events-none z-50 w-full flex items-center justify-end p-4\">\n\t\t\t<button\n\t\t\t\tclass=\"self-center pointer-events-auto p-1 rounded-full bg-white dark:bg-gray-850\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tdispatch('close');\n\t\t\t\t\tshowControls.set(false);\n\t\t\t\t\tshowArtifacts.set(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<XMark className=\"size-3.5 text-gray-900 dark:text-white\" />\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div class=\"flex-1 w-full h-full\">\n\t\t\t<div class=\" h-full flex flex-col\">\n\t\t\t\t{#if contents.length > 0}\n\t\t\t\t\t<div class=\"max-w-full w-full h-full\">\n\t\t\t\t\t\t{#if contents[selectedContentIdx].type === 'iframe'}\n\t\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\t\tbind:this={iframeElement}\n\t\t\t\t\t\t\t\ttitle=\"Content\"\n\t\t\t\t\t\t\t\tsrcdoc={contents[selectedContentIdx].content}\n\t\t\t\t\t\t\t\tclass=\"w-full border-0 h-full rounded-none\"\n\t\t\t\t\t\t\t\tsandbox=\"allow-scripts allow-forms allow-same-origin\"\n\t\t\t\t\t\t\t\ton:load={iframeLoadHandler}\n\t\t\t\t\t\t\t></iframe>\n\t\t\t\t\t\t{:else if contents[selectedContentIdx].type === 'svg'}\n\t\t\t\t\t\t\t<SvgPanZoom\n\t\t\t\t\t\t\t\tclassName=\" w-full h-full max-h-full overflow-hidden\"\n\t\t\t\t\t\t\t\tsvg={contents[selectedContentIdx].content}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t{:else}\n\t\t\t\t\t<div class=\"m-auto font-medium text-xs text-gray-900 dark:text-white\">\n\t\t\t\t\t\t{$i18n.t('No HTML, CSS, or JavaScript content found.')}\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t{#if contents.length > 0}\n\t\t<div class=\"flex justify-between items-center p-2.5 font-primar text-gray-900 dark:text-white\">\n\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t<div class=\"flex items-center gap-0.5 self-center min-w-fit\" dir=\"ltr\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"self-center p-1 hover:bg-black/5 dark:hover:bg-white/5 dark:hover:text-white hover:text-black rounded-md transition disabled:cursor-not-allowed\"\n\t\t\t\t\t\ton:click={() => navigateContent('prev')}\n\t\t\t\t\t\tdisabled={contents.length <= 1}\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstroke-width=\"2.5\"\n\t\t\t\t\t\t\tclass=\"size-3.5\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\td=\"M15.75 19.5 8.25 12l7.5-7.5\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<div class=\"text-xs self-center dark:text-gray-100 min-w-fit\">\n\t\t\t\t\t\t{$i18n.t('Version {{selectedVersion}} of {{totalVersions}}', {\n\t\t\t\t\t\t\tselectedVersion: selectedContentIdx + 1,\n\t\t\t\t\t\t\ttotalVersions: contents.length\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"self-center p-1 hover:bg-black/5 dark:hover:bg-white/5 dark:hover:text-white hover:text-black rounded-md transition disabled:cursor-not-allowed\"\n\t\t\t\t\t\ton:click={() => navigateContent('next')}\n\t\t\t\t\t\tdisabled={contents.length <= 1}\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstroke-width=\"2.5\"\n\t\t\t\t\t\t\tclass=\"size-3.5\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m8.25 4.5 7.5 7.5-7.5 7.5\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"flex items-center gap-1\">\n\t\t\t\t<button\n\t\t\t\t\tclass=\"copy-code-button bg-none border-none text-xs bg-gray-50 hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800 transition rounded-md px-1.5 py-0.5\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tcopyToClipboard(contents[selectedContentIdx].content);\n\t\t\t\t\t\tcopied = true;\n\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tcopied = false;\n\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t}}>{copied ? $i18n.t('Copied') : $i18n.t('Copy')}</button\n\t\t\t\t>\n\n\t\t\t\t{#if contents[selectedContentIdx].type === 'iframe'}\n\t\t\t\t\t<Tooltip content={$i18n.t('Open in full screen')}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\" bg-none border-none text-xs bg-gray-50 hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800 transition rounded-md p-0.5\"\n\t\t\t\t\t\t\ton:click={showFullScreen}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ArrowsPointingOut className=\"size-3.5\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n</div>\n","<script lang=\"ts\">\n\timport { SvelteFlowProvider } from '@xyflow/svelte';\n\timport { slide } from 'svelte/transition';\n\timport { Pane, PaneResizer } from 'paneforge';\n\n\timport { onDestroy, onMount, tick } from 'svelte';\n\timport { mobile, showControls, showCallOverlay, showOverview, showArtifacts } from '$lib/stores';\n\n\timport Modal from '../common/Modal.svelte';\n\timport Controls from './Controls/Controls.svelte';\n\timport CallOverlay from './MessageInput/CallOverlay.svelte';\n\timport Drawer from '../common/Drawer.svelte';\n\timport Overview from './Overview.svelte';\n\timport EllipsisVertical from '../icons/EllipsisVertical.svelte';\n\timport Artifacts from './Artifacts.svelte';\n\timport { min } from '@floating-ui/utils';\n\n\texport let history;\n\texport let models = [];\n\n\texport let chatId = null;\n\n\texport let chatFiles = [];\n\texport let params = {};\n\n\texport let eventTarget: EventTarget;\n\texport let submitPrompt: Function;\n\texport let stopResponse: Function;\n\texport let showMessage: Function;\n\texport let files;\n\texport let modelId;\n\n\texport let pane;\n\n\tlet mediaQuery;\n\tlet largeScreen = false;\n\tlet dragged = false;\n\n\tlet minSize = 0;\n\n\texport const openPane = () => {\n\t\tif (parseInt(localStorage?.chatControlsSize)) {\n\t\t\tpane.resize(parseInt(localStorage?.chatControlsSize));\n\t\t} else {\n\t\t\tpane.resize(minSize);\n\t\t}\n\t};\n\n\tconst handleMediaQuery = async (e) => {\n\t\tif (e.matches) {\n\t\t\tlargeScreen = true;\n\n\t\t\tif ($showCallOverlay) {\n\t\t\t\tshowCallOverlay.set(false);\n\t\t\t\tawait tick();\n\t\t\t\tshowCallOverlay.set(true);\n\t\t\t}\n\t\t} else {\n\t\t\tlargeScreen = false;\n\n\t\t\tif ($showCallOverlay) {\n\t\t\t\tshowCallOverlay.set(false);\n\t\t\t\tawait tick();\n\t\t\t\tshowCallOverlay.set(true);\n\t\t\t}\n\t\t\tpane = null;\n\t\t}\n\t};\n\n\tconst onMouseDown = (event) => {\n\t\tdragged = true;\n\t};\n\n\tconst onMouseUp = (event) => {\n\t\tdragged = false;\n\t};\n\n\tonMount(() => {\n\t\t// listen to resize 1024px\n\t\tmediaQuery = window.matchMedia('(min-width: 1024px)');\n\n\t\tmediaQuery.addEventListener('change', handleMediaQuery);\n\t\thandleMediaQuery(mediaQuery);\n\n\t\t// Select the container element you want to observe\n\t\tconst container = document.getElementById('chat-container');\n\n\t\t// initialize the minSize based on the container width\n\t\tminSize = Math.floor((350 / container.clientWidth) * 100);\n\n\t\t// Create a new ResizeObserver instance\n\t\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\t\tfor (let entry of entries) {\n\t\t\t\tconst width = entry.contentRect.width;\n\t\t\t\t// calculate the percentage of 200px\n\t\t\t\tconst percentage = (350 / width) * 100;\n\t\t\t\t// set the minSize to the percentage, must be an integer\n\t\t\t\tminSize = Math.floor(percentage);\n\n\t\t\t\tif ($showControls) {\n\t\t\t\t\tif (pane && pane.isExpanded() && pane.getSize() < minSize) {\n\t\t\t\t\t\tpane.resize(minSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Start observing the container's size changes\n\t\tresizeObserver.observe(container);\n\n\t\tdocument.addEventListener('mousedown', onMouseDown);\n\t\tdocument.addEventListener('mouseup', onMouseUp);\n\t});\n\n\tonDestroy(() => {\n\t\tshowControls.set(false);\n\n\t\tmediaQuery.removeEventListener('change', handleMediaQuery);\n\t\tdocument.removeEventListener('mousedown', onMouseDown);\n\t\tdocument.removeEventListener('mouseup', onMouseUp);\n\t});\n\n\tconst closeHandler = () => {\n\t\tshowControls.set(false);\n\t\tshowOverview.set(false);\n\t\tshowArtifacts.set(false);\n\n\t\tif ($showCallOverlay) {\n\t\t\tshowCallOverlay.set(false);\n\t\t}\n\t};\n\n\t$: if (!chatId) {\n\t\tcloseHandler();\n\t}\n</script>\n\n<SvelteFlowProvider>\n\t{#if !largeScreen}\n\t\t{#if $showControls}\n\t\t\t<Drawer\n\t\t\t\tshow={$showControls}\n\t\t\t\ton:close={() => {\n\t\t\t\t\tshowControls.set(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclass=\" {$showCallOverlay || $showOverview || $showArtifacts\n\t\t\t\t\t\t? ' h-screen  w-full'\n\t\t\t\t\t\t: 'px-6 py-4'} h-full\"\n\t\t\t\t>\n\t\t\t\t\t{#if $showCallOverlay}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\" h-full max-h-[100dvh] bg-white text-gray-700 dark:bg-black dark:text-gray-300 flex justify-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CallOverlay\n\t\t\t\t\t\t\t\tbind:files\n\t\t\t\t\t\t\t\t{submitPrompt}\n\t\t\t\t\t\t\t\t{stopResponse}\n\t\t\t\t\t\t\t\t{modelId}\n\t\t\t\t\t\t\t\t{chatId}\n\t\t\t\t\t\t\t\t{eventTarget}\n\t\t\t\t\t\t\t\ton:close={() => {\n\t\t\t\t\t\t\t\t\tshowControls.set(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else if $showArtifacts}\n\t\t\t\t\t\t<Artifacts {history} />\n\t\t\t\t\t{:else if $showOverview}\n\t\t\t\t\t\t<Overview\n\t\t\t\t\t\t\t{history}\n\t\t\t\t\t\t\ton:nodeclick={(e) => {\n\t\t\t\t\t\t\t\tshowMessage(e.detail.node.data.message);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ton:close={() => {\n\t\t\t\t\t\t\t\tshowControls.set(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<Controls\n\t\t\t\t\t\t\ton:close={() => {\n\t\t\t\t\t\t\t\tshowControls.set(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t{models}\n\t\t\t\t\t\t\tbind:chatFiles\n\t\t\t\t\t\t\tbind:params\n\t\t\t\t\t\t/>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t{/if}\n\t{:else}\n\t\t<!-- if $showControls -->\n\n\t\t{#if $showControls}\n\t\t\t<PaneResizer class=\"relative flex w-2 items-center justify-center bg-background group\">\n\t\t\t\t<div class=\"z-10 flex h-7 w-5 items-center justify-center rounded-xs\">\n\t\t\t\t\t<EllipsisVertical className=\"size-4 invisible group-hover:visible\" />\n\t\t\t\t</div>\n\t\t\t</PaneResizer>\n\t\t{/if}\n\n\t\t<Pane\n\t\t\tbind:pane\n\t\t\tdefaultSize={0}\n\t\t\tonResize={(size) => {\n\t\t\t\tconsole.log('size', size, minSize);\n\n\t\t\t\tif ($showControls && pane.isExpanded()) {\n\t\t\t\t\tif (size < minSize) {\n\t\t\t\t\t\tpane.resize(minSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (size < minSize) {\n\t\t\t\t\t\tlocalStorage.chatControlsSize = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocalStorage.chatControlsSize = size;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonCollapse={() => {\n\t\t\t\tshowControls.set(false);\n\t\t\t}}\n\t\t\tcollapsible={true}\n\t\t\tclass=\"pt-8\"\n\t\t>\n\t\t\t{#if $showControls}\n\t\t\t\t<div class=\"pr-4 pb-8 flex max-h-full min-h-full\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"w-full {($showOverview || $showArtifacts) && !$showCallOverlay\n\t\t\t\t\t\t\t? ' '\n\t\t\t\t\t\t\t: 'px-4 py-4 bg-white dark:shadow-lg dark:bg-gray-850  border border-gray-100 dark:border-gray-850'}  rounded-xl z-40 pointer-events-auto overflow-y-auto scrollbar-hidden\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{#if $showCallOverlay}\n\t\t\t\t\t\t\t<div class=\"w-full h-full flex justify-center\">\n\t\t\t\t\t\t\t\t<CallOverlay\n\t\t\t\t\t\t\t\t\tbind:files\n\t\t\t\t\t\t\t\t\t{submitPrompt}\n\t\t\t\t\t\t\t\t\t{stopResponse}\n\t\t\t\t\t\t\t\t\t{modelId}\n\t\t\t\t\t\t\t\t\t{chatId}\n\t\t\t\t\t\t\t\t\t{eventTarget}\n\t\t\t\t\t\t\t\t\ton:close={() => {\n\t\t\t\t\t\t\t\t\t\tshowControls.set(false);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{:else if $showArtifacts}\n\t\t\t\t\t\t\t<Artifacts {history} overlay={dragged} />\n\t\t\t\t\t\t{:else if $showOverview}\n\t\t\t\t\t\t\t<Overview\n\t\t\t\t\t\t\t\t{history}\n\t\t\t\t\t\t\t\ton:nodeclick={(e) => {\n\t\t\t\t\t\t\t\t\tif (e.detail.node.data.message.favorite) {\n\t\t\t\t\t\t\t\t\t\thistory.messages[e.detail.node.data.message.id].favorite = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\thistory.messages[e.detail.node.data.message.id].favorite = null;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tshowMessage(e.detail.node.data.message);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ton:close={() => {\n\t\t\t\t\t\t\t\t\tshowControls.set(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<Controls\n\t\t\t\t\t\t\t\ton:close={() => {\n\t\t\t\t\t\t\t\t\tshowControls.set(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t{models}\n\t\t\t\t\t\t\t\tbind:chatFiles\n\t\t\t\t\t\t\t\tbind:params\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</Pane>\n\t{/if}\n</SvelteFlowProvider>\n","<script lang=\"ts\">\n\timport { toast } from 'svelte-sonner';\n\timport { marked } from 'marked';\n\n\timport { onMount, getContext, tick, createEventDispatcher } from 'svelte';\n\timport { blur, fade } from 'svelte/transition';\n\n\tconst dispatch = createEventDispatcher();\n\n\timport { config, user, models as _models, temporaryChatEnabled } from '$lib/stores';\n\timport { sanitizeResponseContent, findWordIndices } from '$lib/utils';\n\timport { WEBUI_BASE_URL } from '$lib/constants';\n\n\timport Suggestions from './Suggestions.svelte';\n\timport Tooltip from '$lib/components/common/Tooltip.svelte';\n\timport EyeSlash from '$lib/components/icons/EyeSlash.svelte';\n\timport MessageInput from './MessageInput.svelte';\n\n\tconst i18n = getContext('i18n');\n\n\texport let transparentBackground = false;\n\n\texport let createMessagePair: Function;\n\texport let stopResponse: Function;\n\n\texport let autoScroll = false;\n\n\texport let atSelectedModel: Model | undefined;\n\texport let selectedModels: [''];\n\n\texport let history;\n\n\texport let prompt = '';\n\texport let files = [];\n\n\texport let selectedToolIds = [];\n\texport let imageGenerationEnabled = false;\n\texport let codeInterpreterEnabled = false;\n\texport let webSearchEnabled = false;\n\n\tlet models = [];\n\n\tconst selectSuggestionPrompt = async (p) => {\n\t\tlet text = p;\n\n\t\tif (p.includes('{{CLIPBOARD}}')) {\n\t\t\tconst clipboardText = await navigator.clipboard.readText().catch((err) => {\n\t\t\t\ttoast.error($i18n.t('Failed to read clipboard contents'));\n\t\t\t\treturn '{{CLIPBOARD}}';\n\t\t\t});\n\n\t\t\ttext = p.replaceAll('{{CLIPBOARD}}', clipboardText);\n\n\t\t\tconsole.log('Clipboard text:', clipboardText, text);\n\t\t}\n\n\t\tprompt = text;\n\n\t\tconsole.log(prompt);\n\t\tawait tick();\n\n\t\tconst chatInputContainerElement = document.getElementById('chat-input-container');\n\t\tconst chatInputElement = document.getElementById('chat-input');\n\n\t\tif (chatInputContainerElement) {\n\t\t\tchatInputContainerElement.style.height = '';\n\t\t\tchatInputContainerElement.style.height =\n\t\t\t\tMath.min(chatInputContainerElement.scrollHeight, 200) + 'px';\n\t\t}\n\n\t\tawait tick();\n\t\tif (chatInputElement) {\n\t\t\tchatInputElement.focus();\n\t\t\tchatInputElement.dispatchEvent(new Event('input'));\n\t\t}\n\n\t\tawait tick();\n\t};\n\n\tlet selectedModelIdx = 0;\n\n\t$: if (selectedModels.length > 0) {\n\t\tselectedModelIdx = models.length - 1;\n\t}\n\n\t$: models = selectedModels.map((id) => $_models.find((m) => m.id === id));\n\n\tonMount(() => {});\n</script>\n\n<div class=\"m-auto w-full max-w-6xl px-2 @2xl:px-20 translate-y-6 py-24 text-center\">\n\t{#if $temporaryChatEnabled}\n\t\t<Tooltip\n\t\t\tcontent=\"This chat won't appear in history and your messages will not be saved.\"\n\t\t\tclassName=\"w-full flex justify-center mb-0.5\"\n\t\t\tplacement=\"top\"\n\t\t>\n\t\t\t<div class=\"flex items-center gap-2 text-gray-500 font-medium text-lg my-2 w-fit\">\n\t\t\t\t<EyeSlash strokeWidth=\"2.5\" className=\"size-5\" /> Temporary Chat\n\t\t\t</div>\n\t\t</Tooltip>\n\t{/if}\n\n\t<div\n\t\tclass=\"w-full text-3xl text-gray-800 dark:text-gray-100 font-medium text-center flex items-center gap-4 font-primary\"\n\t>\n\t\t<div class=\"w-full flex flex-col justify-center items-center\">\n\t\t\t<div class=\"flex flex-row justify-center gap-3 @sm:gap-3.5 w-fit px-5\">\n\t\t\t\t<div class=\"flex shrink-0 justify-center\">\n\t\t\t\t\t<div class=\"flex -space-x-4 mb-0.5\" in:fade={{ duration: 100 }}>\n\t\t\t\t\t\t{#each models as model, modelIdx}\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\tcontent={(models[modelIdx]?.info?.meta?.tags ?? [])\n\t\t\t\t\t\t\t\t\t.map((tag) => tag.name.toUpperCase())\n\t\t\t\t\t\t\t\t\t.join(', ')}\n\t\t\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\tselectedModelIdx = modelIdx;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tcrossorigin=\"anonymous\"\n\t\t\t\t\t\t\t\t\t\tsrc={model?.info?.meta?.profile_image_url ??\n\t\t\t\t\t\t\t\t\t\t\t($i18n.language === 'dg-DG'\n\t\t\t\t\t\t\t\t\t\t\t\t? `/doge.png`\n\t\t\t\t\t\t\t\t\t\t\t\t: `${WEBUI_BASE_URL}/static/favicon.png`)}\n\t\t\t\t\t\t\t\t\t\tclass=\" size-9 @sm:size-10 rounded-full border-[1px] border-gray-200 dark:border-none\"\n\t\t\t\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t\t\t\t\tdraggable=\"false\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\" text-3xl @sm:text-4xl line-clamp-1\" in:fade={{ duration: 100 }}>\n\t\t\t\t\t{#if models[selectedModelIdx]?.name}\n\t\t\t\t\t\t{models[selectedModelIdx]?.name}\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t{$i18n.t('Hello, {{name}}', { name: $user.name })}\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"flex mt-1 mb-2\">\n\t\t\t\t<div in:fade={{ duration: 100, delay: 50 }}>\n\t\t\t\t\t{#if models[selectedModelIdx]?.info?.meta?.description ?? null}\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tclassName=\" w-fit\"\n\t\t\t\t\t\t\tcontent={marked.parse(\n\t\t\t\t\t\t\t\tsanitizeResponseContent(models[selectedModelIdx]?.info?.meta?.description ?? '')\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"mt-0.5 px-2 text-sm font-normal text-gray-500 dark:text-gray-400 line-clamp-2 max-w-xl markdown\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{@html marked.parse(\n\t\t\t\t\t\t\t\t\tsanitizeResponseContent(models[selectedModelIdx]?.info?.meta?.description)\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t\t{#if models[selectedModelIdx]?.info?.meta?.user}\n\t\t\t\t\t\t\t<div class=\"mt-0.5 text-sm font-normal text-gray-400 dark:text-gray-500\">\n\t\t\t\t\t\t\t\tBy\n\t\t\t\t\t\t\t\t{#if models[selectedModelIdx]?.info?.meta?.user.community}\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref=\"https://openwebui.com/m/{models[selectedModelIdx]?.info?.meta?.user\n\t\t\t\t\t\t\t\t\t\t\t.username}\"\n\t\t\t\t\t\t\t\t\t\t>{models[selectedModelIdx]?.info?.meta?.user.name\n\t\t\t\t\t\t\t\t\t\t\t? models[selectedModelIdx]?.info?.meta?.user.name\n\t\t\t\t\t\t\t\t\t\t\t: `@${models[selectedModelIdx]?.info?.meta?.user.username}`}</a\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t{models[selectedModelIdx]?.info?.meta?.user.name}\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"text-base font-normal @md:max-w-3xl w-full py-3 {atSelectedModel ? 'mt-2' : ''}\">\n\t\t\t\t<MessageInput\n\t\t\t\t\t{history}\n\t\t\t\t\t{selectedModels}\n\t\t\t\t\tbind:files\n\t\t\t\t\tbind:prompt\n\t\t\t\t\tbind:autoScroll\n\t\t\t\t\tbind:selectedToolIds\n\t\t\t\t\tbind:imageGenerationEnabled\n\t\t\t\t\tbind:codeInterpreterEnabled\n\t\t\t\t\tbind:webSearchEnabled\n\t\t\t\t\tbind:atSelectedModel\n\t\t\t\t\t{transparentBackground}\n\t\t\t\t\t{stopResponse}\n\t\t\t\t\t{createMessagePair}\n\t\t\t\t\tplaceholder={$i18n.t('How can I help you today?')}\n\t\t\t\t\ton:upload={(e) => {\n\t\t\t\t\t\tdispatch('upload', e.detail);\n\t\t\t\t\t}}\n\t\t\t\t\ton:submit={(e) => {\n\t\t\t\t\t\tdispatch('submit', e.detail);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- <div class=\"mx-auto max-w-2xl font-primary\" in:fade={{ duration: 200, delay: 200 }}>\n\t\t<div class=\"mx-5\">\n\t\t\t<Suggestions\n\t\t\t\tsuggestionPrompts={atSelectedModel?.info?.meta?.suggestion_prompts ??\n\t\t\t\t\tmodels[selectedModelIdx]?.info?.meta?.suggestion_prompts ??\n\t\t\t\t\t$config?.default_prompt_suggestions ??\n\t\t\t\t\t[]}\n\t\t\t\tinputValue={prompt}\n\t\t\t\ton:select={(e) => {\n\t\t\t\t\tselectSuggestionPrompt(e.detail);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t</div> -->\n</div>\n","<script lang=\"ts\">\n\timport { v4 as uuidv4 } from 'uuid';\n\timport { toast } from 'svelte-sonner';\n\timport mermaid from 'mermaid';\n\timport { PaneGroup, Pane, PaneResizer } from 'paneforge';\n\n\timport { getContext, onDestroy, onMount, tick } from 'svelte';\n\tconst i18n: Writable<i18nType> = getContext('i18n');\n\n\timport { goto } from '$app/navigation';\n\timport { page } from '$app/stores';\n\n\timport { get, type Unsubscriber, type Writable } from 'svelte/store';\n\timport type { i18n as i18nType } from 'i18next';\n\timport { WEBUI_BASE_URL } from '$lib/constants';\n\n\timport {\n\t\tchatId,\n\t\tchats,\n\t\tconfig,\n\t\ttype Model,\n\t\tmodels,\n\t\ttags as allTags,\n\t\tsettings,\n\t\tshowSidebar,\n\t\tWEBUI_NAME,\n\t\tbanners,\n\t\tuser,\n\t\tsocket,\n\t\tshowControls,\n\t\tshowCallOverlay,\n\t\tcurrentChatPage,\n\t\ttemporaryChatEnabled,\n\t\tmobile,\n\t\tshowOverview,\n\t\tchatTitle,\n\t\tshowArtifacts,\n\t\ttools,\n\t\tuserAPIKey\n\t} from '$lib/stores';\n\timport {\n\t\tconvertMessagesToHistory,\n\t\tcopyToClipboard,\n\t\tgetMessageContentParts,\n\t\tcreateMessagesList,\n\t\textractSentencesForAudio,\n\t\tpromptTemplate,\n\t\tsplitStream,\n\t\tsleep,\n\t\tremoveDetails,\n\t\tgetPromptVariables\n\t} from '$lib/utils';\n\n\timport { generateChatCompletion } from '$lib/apis/ollama';\n\timport {\n\t\taddTagById,\n\t\tcreateNewChat,\n\t\tdeleteTagById,\n\t\tdeleteTagsById,\n\t\tgetAllTags,\n\t\tgetChatById,\n\t\tgetChatList,\n\t\tgetTagsById,\n\t\tupdateChatById\n\t} from '$lib/apis/chats';\n\timport { generateOpenAIChatCompletion } from '$lib/apis/openai';\n\timport { processWeb, processWebSearch, processYoutubeVideo } from '$lib/apis/retrieval';\n\timport { createOpenAITextStream } from '$lib/apis/streaming';\n\timport { queryMemory } from '$lib/apis/memories';\n\timport { getAndUpdateUserLocation, getUserSettings } from '$lib/apis/users';\n\timport {\n\t\tchatCompleted,\n\t\tgenerateQueries,\n\t\tchatAction,\n\t\tgenerateMoACompletion,\n\t\tstopTask\n\t} from '$lib/apis';\n\timport { getTools } from '$lib/apis/tools';\n\n\timport Banner from '../common/Banner.svelte';\n\timport MessageInput from '$lib/components/chat/MessageInput.svelte';\n\timport Messages from '$lib/components/chat/Messages.svelte';\n\timport Navbar from '$lib/components/chat/Navbar.svelte';\n\timport ChatControls from './ChatControls.svelte';\n\timport EventConfirmDialog from '../common/ConfirmDialog.svelte';\n\timport Placeholder from './Placeholder.svelte';\n\timport NotificationToast from '../NotificationToast.svelte';\n\timport Spinner from '../common/Spinner.svelte';\n\n\texport let chatIdProp = '';\n\n\tlet loading = false;\n\n\tconst eventTarget = new EventTarget();\n\tlet controlPane;\n\tlet controlPaneComponent;\n\n\tlet autoScroll = true;\n\tlet processing = '';\n\tlet messagesContainerElement: HTMLDivElement;\n\n\tlet navbarElement;\n\n\tlet showEventConfirmation = false;\n\tlet eventConfirmationTitle = '';\n\tlet eventConfirmationMessage = '';\n\tlet eventConfirmationInput = false;\n\tlet eventConfirmationInputPlaceholder = '';\n\tlet eventConfirmationInputValue = '';\n\tlet eventCallback = null;\n\n\tlet chatIdUnsubscriber: Unsubscriber | undefined;\n\n\tlet selectedModels = [''];\n\tlet atSelectedModel: Model | undefined;\n\tlet selectedModelIds = [];\n\t$: selectedModelIds = atSelectedModel !== undefined ? [atSelectedModel.id] : selectedModels;\n\n\tlet selectedToolIds = [];\n\tlet imageGenerationEnabled = false;\n\tlet webSearchEnabled = false;\n\tlet codeInterpreterEnabled = false;\n\tlet chat = null;\n\tlet tags = [];\n\n\tlet history = {\n\t\tmessages: {},\n\t\tcurrentId: null\n\t};\n\n\tlet taskId = null;\n\n\t// Chat Input\n\tlet prompt = '';\n\tlet chatFiles = [];\n\tlet files = [];\n\tlet params = {};\n\n\t$: if (chatIdProp) {\n\t\t(async () => {\n\t\t\tloading = true;\n\t\t\tconsole.log(chatIdProp);\n\n\t\t\tprompt = '';\n\t\t\tfiles = [];\n\t\t\tselectedToolIds = [];\n\t\t\twebSearchEnabled = false;\n\t\t\timageGenerationEnabled = false;\n\n\t\t\tif (chatIdProp && (await loadChat())) {\n\t\t\t\tawait tick();\n\t\t\t\tloading = false;\n\n\t\t\t\tif (localStorage.getItem(`chat-input-${chatIdProp}`)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst input = JSON.parse(localStorage.getItem(`chat-input-${chatIdProp}`));\n\n\t\t\t\t\t\tprompt = input.prompt;\n\t\t\t\t\t\tfiles = input.files;\n\t\t\t\t\t\tselectedToolIds = input.selectedToolIds;\n\t\t\t\t\t\twebSearchEnabled = input.webSearchEnabled;\n\t\t\t\t\t\timageGenerationEnabled = input.imageGenerationEnabled;\n\t\t\t\t\t} catch (e) {}\n\t\t\t\t}\n\n\t\t\t\twindow.setTimeout(() => scrollToBottom(), 0);\n\t\t\t\tconst chatInput = document.getElementById('chat-input');\n\t\t\t\tchatInput?.focus();\n\t\t\t} else {\n\t\t\t\tawait goto('/');\n\t\t\t}\n\t\t})();\n\t}\n\n\t$: if (selectedModels && chatIdProp !== '') {\n\t\tsaveSessionSelectedModels();\n\t}\n\n\tconst saveSessionSelectedModels = () => {\n\t\tif (selectedModels.length === 0 || (selectedModels.length === 1 && selectedModels[0] === '')) {\n\t\t\treturn;\n\t\t}\n\t\tsessionStorage.selectedModels = JSON.stringify(selectedModels);\n\t\tconsole.log('saveSessionSelectedModels', selectedModels, sessionStorage.selectedModels);\n\t};\n\n\t$: if (selectedModels) {\n\t\tsetToolIds();\n\t}\n\n\t$: if (atSelectedModel || selectedModels) {\n\t\tsetToolIds();\n\t}\n\n\tconst setToolIds = async () => {\n\t\tif (!$tools) {\n\t\t\ttools.set(await getTools(localStorage.token));\n\t\t}\n\n\t\tif (selectedModels.length !== 1 && !atSelectedModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = atSelectedModel ?? $models.find((m) => m.id === selectedModels[0]);\n\t\tif (model) {\n\t\t\tselectedToolIds = (model?.info?.meta?.toolIds ?? []).filter((id) =>\n\t\t\t\t$tools.find((t) => t.id === id)\n\t\t\t);\n\t\t}\n\t};\n\n\tconst showMessage = async (message) => {\n\t\tconst _chatId = JSON.parse(JSON.stringify($chatId));\n\t\tlet _messageId = JSON.parse(JSON.stringify(message.id));\n\n\t\tlet messageChildrenIds = history.messages[_messageId].childrenIds;\n\n\t\twhile (messageChildrenIds.length !== 0) {\n\t\t\t_messageId = messageChildrenIds.at(-1);\n\t\t\tmessageChildrenIds = history.messages[_messageId].childrenIds;\n\t\t}\n\n\t\thistory.currentId = _messageId;\n\n\t\tawait tick();\n\t\tawait tick();\n\t\tawait tick();\n\n\t\tconst messageElement = document.getElementById(`message-${message.id}`);\n\t\tif (messageElement) {\n\t\t\tmessageElement.scrollIntoView({ behavior: 'smooth' });\n\t\t}\n\n\t\tawait tick();\n\t\tsaveChatHandler(_chatId, history);\n\t};\n\n\t// Improved chat completion event handler to better work with agent responses\n\tconst chatCompletionEventHandler = async (data, message, chatId) => {\n\t\tconsole.log('💬 chatCompletionEventHandler data:', JSON.stringify(data));\n\t\tconsole.log('💬 Message ID:', message.id);\n\t\tconsole.log('💬 Message before update:', message.content ? message.content.substring(0, 50) + '...' : 'empty');\n\n\t\tif (data && chatId === $chatId) {\n\t\t\t// Update the message with the new data\n\t\t\tif (data.content !== undefined) {\n\t\t\t\t// Don't overwrite if empty content is provided\n\t\t\t\tif (data.content !== \"\" || !message.content) {\n\t\t\t\t\t// Stop loading animation if real content arrives\n\t\t\t\t\tif (message.isLoading) {\n\t\t\t\t\t\tmessage.isLoading = false;\n\t\t\t\t\t}\n\t\t\t\t\tmessage.content = data.content;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.done !== undefined) {\n\t\t\t\tmessage.done = data.done;\n\t\t\t\t// Make sure we stop the loading animation when done\n\t\t\t\tif (data.done) {\n\t\t\t\t\tmessage.isLoading = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.loading !== undefined) {\n\t\t\t\tmessage.loading = data.loading;\n\t\t\t}\n\n\t\t\tif (data.error !== undefined) {\n\t\t\t\tmessage.error = data.error;\n\t\t\t\t// Stop animation on error\n\t\t\t\tmessage.isLoading = false;\n\t\t\t}\n\n\t\t\tif (data.status !== undefined) {\n\t\t\t\tmessage.status = data.status;\n\t\t\t}\n\n\t\t\t// Handle agent-specific data - check if content is a stringified JSON\n\t\t\ttry {\n\t\t\t\tif (typeof message.content === 'string' && message.content.trim().startsWith('{') && message.content.trim().endsWith('}')) {\n\t\t\t\t\tconst parsedContent = JSON.parse(message.content);\n\t\t\t\t\tif (parsedContent.success && parsedContent.response) {\n\t\t\t\t\t\tconsole.log('🤖 Agent response detected:', parsedContent.response.type);\n\t\t\t\t\t\t// Content is already in the correct format, no need to transform\n\t\t\t\t\t\t// Stop the loading animation as we have a real response\n\t\t\t\t\t\tmessage.isLoading = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// Not JSON or not in agent format, continue with normal processing\n\t\t\t}\n\n\t\t\t// Force update in history object to ensure UI updates\n\t\t\tif (history && history.messages) {\n\t\t\t\thistory.messages[message.id] = {...message};\n\t\t\t\tconsole.log('✅ Updated message in history object');\n\t\t\t}\n\t\t\t\n\t\t\t// If loading is complete, scroll to bottom\n\t\t\tif (data.done || data.loading === false) {\n\t\t\t\tif (autoScroll) {\n\t\t\t\t\tscrollToBottom();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update the message in history to ensure UI updates\n\t\tif (message.done && history && history.messages) {\n\t\t\thistory.messages[message.id] = { ...message };\n\t\t\tconsole.log('📝 Updated final message in history');\n\t\t}\n\t};\n\n\t// Improved socket event handler with better agent response support\n\tconst chatEventHandler = async (event, cb) => {\n\t\tconsole.log('📥 Socket event received:', event && JSON.stringify(event).substring(0, 200) + '...');\n\n\t\tif (event.chat_id === $chatId) {\n\t\t\tawait tick();\n\t\t\tlet message = history.messages[event.message_id];\n\n\t\t\tif (message) {\n\t\t\t\tconst type = event?.data?.type ?? null;\n\t\t\t\tconst data = event?.data?.data ?? null;\n\n\t\t\t\tconsole.log('📥 Event type:', type, 'Data ID:', data?.id);\n\t\t\t\tconsole.log('📥 Content preview:', data?.content ? data.content.substring(0, 50) + '...' : 'No content');\n\n\t\t\t\tif (type === 'chat:completion') {\n\t\t\t\t\tconsole.log('🤖 Processing agent API response from socket event');\n\t\t\t\t\t\n\t\t\t\t\tif (data.content) {\n\t\t\t\t\t\tconsole.log('📝 Content length:', data.content.length);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// If we have real content, stop the loading animation\n\t\t\t\t\t\tif (message.isLoading) {\n\t\t\t\t\t\t\tmessage.isLoading = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tmessage.content = data.content;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (data.done !== false) {\n\t\t\t\t\t\t\tmessage.done = true;\n\t\t\t\t\t\t\tconsole.log('✅ Marking message as done');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Force history update\n\t\t\t\t\t\thistory.messages[event.message_id] = { ...message };\n\t\t\t\t\t\tconsole.log('✅ Updated message in history.messages');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Force UI update\n\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\tconsole.log('✅ Forced UI update');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// If done and autoScroll is enabled, scroll to bottom\n\t\t\t\t\t\tif (data.done && autoScroll) {\n\t\t\t\t\t\t\tscrollToBottom();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (type === 'status') {\n\t\t\t\t\tif (message?.statusHistory) {\n\t\t\t\t\t\tmessage.statusHistory.push(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage.statusHistory = [data];\n\t\t\t\t\t}\n\t\t\t\t} else if (type === 'source' || type === 'citation') {\n\t\t\t\t\tif (data?.type === 'code_execution') {\n\t\t\t\t\t\t// Code execution; update existing code execution by ID, or add new one.\n\t\t\t\t\t\tif (!message.codeExecutions) {\n\t\t\t\t\t\t\tmessage.codeExecutions = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst existingIndex = message.codeExecutions.findIndex(\n\t\t\t\t\t\t\t(exec) => exec.id === data.execution_id\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (existingIndex !== -1) {\n\t\t\t\t\t\t\tmessage.codeExecutions[existingIndex] = {\n\t\t\t\t\t\t\t\t...message.codeExecutions[existingIndex],\n\t\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t\tupdated: Date.now()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmessage.codeExecutions.push({\n\t\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t\tcreated: Date.now(),\n\t\t\t\t\t\t\t\tupdated: Date.now()\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Standard source\n\t\t\t\t\t\tif (!message.sources) {\n\t\t\t\t\t\t\tmessage.sources = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmessage.sources.push(data);\n\t\t\t\t\t\t}\n\t\t\t\t} else if (type === 'chat:title') {\n\t\t\t\t\tchatTitle.set(data);\n\t\t\t\t\tcurrentChatPage.set(1);\n\t\t\t\t\tawait chats.set(await getChatList(localStorage.token, $currentChatPage));\n\t\t\t\t} else if (type === 'chat:tags') {\n\t\t\t\t\tchat = await getChatById(localStorage.token, $chatId);\n\t\t\t\t\tallTags.set(await getAllTags(localStorage.token));\n\t\t\t\t} else if (type === 'message') {\n\t\t\t\t\tconsole.log('📝 Appending message content:', data.content);\n\t\t\t\t\t// If we're still in loading state but receiving actual content, stop the animation\n\t\t\t\t\tif (message.isLoading) {\n\t\t\t\t\t\tmessage.isLoading = false;\n\t\t\t\t\t}\n\t\t\t\t\tmessage.content += data.content;\n\t\t\t\t} else if (type === 'replace') {\n\t\t\t\t\tconsole.log('📝 Replacing message content:', data.content);\n\t\t\t\t\t// If we're still in loading state but receiving actual content, stop the animation\n\t\t\t\t\tif (message.isLoading) {\n\t\t\t\t\t\tmessage.isLoading = false;\n\t\t\t\t\t}\n\t\t\t\t\tmessage.content = data.content;\n\t\t\t\t} else if (type === 'action') {\n\t\t\t\t\tif (data.action === 'continue') {\n\t\t\t\t\t\tconst continueButton = document.getElementById('continue-response-button');\n\n\t\t\t\t\t\tif (continueButton) {\n\t\t\t\t\t\t\tcontinueButton.click();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('❓ Unknown message type:', type, data);\n\t\t\t\t}\n\n\t\t\t\t// Force history to update\n\t\t\t\thistory = { ...history };\n\n\t\t\t\t// Callback\n\t\t\t\tif (cb && typeof cb === 'function') {\n\t\t\t\t\tcb(event, message);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\tconsole.warn('⚠️ No message found for ID:', event.message_id);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst onMessageHandler = async (event: {\n\t\torigin: string;\n\t\tdata: { type: string; text: string };\n\t}) => {\n\t\tif (event.origin !== window.origin) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace with your iframe's origin\n\t\tif (event.data.type === 'input:prompt') {\n\t\t\tconsole.debug(event.data.text);\n\n\t\t\tconst inputElement = document.getElementById('chat-input');\n\n\t\t\tif (inputElement) {\n\t\t\t\tprompt = event.data.text;\n\t\t\t\tinputElement.focus();\n\t\t\t}\n\t\t}\n\n\t\tif (event.data.type === 'action:submit') {\n\t\t\tconsole.debug(event.data.text);\n\n\t\t\tif (prompt !== '') {\n\t\t\t\tawait tick();\n\t\t\t\tsubmitPrompt(prompt);\n\t\t\t}\n\t\t}\n\n\t\tif (event.data.type === 'input:prompt:submit') {\n\t\t\tconsole.debug(event.data.text);\n\n\t\t\tif (prompt !== '') {\n\t\t\t\tawait tick();\n\t\t\t\tsubmitPrompt(event.data.text);\n\t\t\t}\n\t\t}\n\t};\n\n\tonMount(async () => {\n\t\tconsole.log('mounted');\n\t\tconsole.log(\"Initial userAPIKey value:\", $userAPIKey ? \"Present\" : \"Empty/None\");\n\t\t\n\t\twindow.addEventListener('message', onMessageHandler);\n\t\t$socket?.on('chat-events', chatEventHandler);\n\n\t\tif (!$chatId) {\n\t\t\tchatIdUnsubscriber = chatId.subscribe(async (value) => {\n\t\t\t\tif (!value) {\n\t\t\t\t\tawait initNewChat();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tif ($temporaryChatEnabled) {\n\t\t\t\tawait goto('/');\n\t\t\t}\n\t\t}\n\n\t\tif (localStorage.getItem(`chat-input-${chatIdProp}`)) {\n\t\t\ttry {\n\t\t\t\tconst input = JSON.parse(localStorage.getItem(`chat-input-${chatIdProp}`));\n\t\t\t\tprompt = input.prompt;\n\t\t\t\tfiles = input.files;\n\t\t\t\tselectedToolIds = input.selectedToolIds;\n\t\t\t\twebSearchEnabled = input.webSearchEnabled;\n\t\t\t\timageGenerationEnabled = input.imageGenerationEnabled;\n\t\t\t} catch (e) {\n\t\t\t\tprompt = '';\n\t\t\t\tfiles = [];\n\t\t\t\tselectedToolIds = [];\n\t\t\t\twebSearchEnabled = false;\n\t\t\t\timageGenerationEnabled = false;\n\t\t\t}\n\t\t}\n\n\t\tshowControls.subscribe(async (value) => {\n\t\t\tif (controlPane && !$mobile) {\n\t\t\t\ttry {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tcontrolPaneComponent.openPane();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontrolPane.collapse();\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!value) {\n\t\t\t\tshowCallOverlay.set(false);\n\t\t\t\tshowOverview.set(false);\n\t\t\t\tshowArtifacts.set(false);\n\t\t\t}\n\t\t});\n\n\t\tconst chatInput = document.getElementById('chat-input');\n\t\tchatInput?.focus();\n\n\t\tchats.subscribe(() => {});\n\n\t\twindow.addEventListener('beforeunload', (event) => {\n\t\t\tlocalStorage.setItem(`chat-input-${$chatId}`, JSON.stringify({ \n\t\t\t\tprompt,\n\t\t\t\tfiles,\n\t\t\t\tselectedToolIds,\n\t\t\t\twebSearchEnabled,\n\t\t\t\timageGenerationEnabled\n\t\t\t}));\n\t\t});\n\t});\n\n\tonDestroy(() => {\n\t\tchatIdUnsubscriber?.();\n\t\twindow.removeEventListener('message', onMessageHandler);\n\t\t$socket?.off('chat-events', chatEventHandler);\n\t});\n\n\t// File upload functions\n\n\tconst uploadGoogleDriveFile = async (fileData) => {\n\t\tconsole.log('Starting uploadGoogleDriveFile with:', {\n\t\t\tid: fileData.id,\n\t\t\tname: fileData.name,\n\t\t\turl: fileData.url,\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`\n\t\t\t}\n\t\t});\n\n\t\t// Validate input\n\t\tif (!fileData?.id || !fileData?.name || !fileData?.url || !fileData?.headers?.Authorization) {\n\t\t\tthrow new Error('Invalid file data provided');\n\t\t}\n\n\t\tconst tempItemId = uuidv4();\n\t\tconst fileItem = {\n\t\t\ttype: 'file',\n\t\t\tfile: '',\n\t\t\tid: null,\n\t\t\turl: fileData.url,\n\t\t\tname: fileData.name,\n\t\t\tcollection_name: '',\n\t\t\tstatus: 'uploading',\n\t\t\terror: '',\n\t\t\titemId: tempItemId,\n\t\t\tsize: 0\n\t\t};\n\n\t\ttry {\n\t\t\tfiles = [...files, fileItem];\n\t\t\tconsole.log('Processing web file with URL:', fileData.url);\n\n\t\t\t// Configure fetch options with proper headers\n\t\t\tconst fetchOptions = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: fileData.headers.Authorization,\n\t\t\t\t\tAccept: '*/*'\n\t\t\t\t},\n\t\t\t\tmethod: 'GET'\n\t\t\t};\n\n\t\t\t// Attempt to fetch the file\n\t\t\tconsole.log('Fetching file content from Google Drive...');\n\t\t\tconst fileResponse = await fetch(fileData.url, fetchOptions);\n\n\t\t\tif (!fileResponse.ok) {\n\t\t\t\tconst errorText = await fileResponse.text();\n\t\t\t\tthrow new Error(`Failed to fetch file (${fileResponse.status}): ${errorText}`);\n\t\t\t}\n\n\t\t\t// Get content type from response\n\t\t\tconst contentType = fileResponse.headers.get('content-type') || 'application/octet-stream';\n\t\t\tconsole.log('Response received with content-type:', contentType);\n\n\t\t\t// Convert response to blob\n\t\t\tconsole.log('Converting response to blob...');\n\t\t\tconst fileBlob = await fileResponse.blob();\n\n\t\t\tif (fileBlob.size === 0) {\n\t\t\t\tthrow new Error('Retrieved file is empty');\n\t\t\t}\n\n\t\t\tconsole.log('Blob created:', {\n\t\t\t\tsize: fileBlob.size,\n\t\t\t\ttype: fileBlob.type || contentType\n\t\t\t});\n\n\t\t\t// Create File object with proper MIME type\n\t\t\tconst file = new File([fileBlob], fileData.name, {\n\t\t\t\ttype: fileBlob.type || contentType\n\t\t\t});\n\n\t\t\tconsole.log('File object created:', {\n\t\t\t\tname: file.name,\n\t\t\t\tsize: file.size,\n\t\t\t\ttype: file.type\n\t\t\t});\n\n\t\t\tif (file.size === 0) {\n\t\t\t\tthrow new Error('Created file is empty');\n\t\t\t}\n\n\t\t\t// Upload file to server\n\t\t\tconsole.log('Uploading file to server...');\n\t\t\tconst uploadedFile = await uploadFile(localStorage.token, file);\n\n\t\t\tif (!uploadedFile) {\n\t\t\t\tthrow new Error('Server returned null response for file upload');\n\t\t\t}\n\n\t\t\tconsole.log('File uploaded successfully:', uploadedFile);\n\n\t\t\t// Update file item with upload results\n\t\t\tfileItem.status = 'uploaded';\n\t\t\tfileItem.file = uploadedFile;\n\t\t\tfileItem.id = uploadedFile.id;\n\t\t\tfileItem.size = file.size;\n\t\t\tfileItem.collection_name = uploadedFile?.meta?.collection_name;\n\t\t\tfileItem.url = `${WEBUI_API_BASE_URL}/files/${uploadedFile.id}`;\n\n\t\t\tfiles = files;\n\t\t\ttoast.success($i18n.t('File uploaded successfully'));\n\t\t} catch (e) {\n\t\t\tconsole.error('Error uploading file:', e);\n\t\t\tfiles = files.filter((f) => f.itemId !== tempItemId);\n\t\t\ttoast.error(\n\t\t\t\t$i18n.t('Error uploading file: {{error}}', {\n\t\t\t\t\terror: e.message || 'Unknown error'\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t};\n\n\tconst uploadWeb = async (url) => {\n\t\tconsole.log(url);\n\n\t\tconst fileItem = {\n\t\t\ttype: 'doc',\n\t\t\tname: url,\n\t\t\tcollection_name: '',\n\t\t\tstatus: 'uploading',\n\t\t\turl: url,\n\t\t\terror: ''\n\t\t};\n\n\t\ttry {\n\t\t\tfiles = [...files, fileItem];\n\t\t\tconst res = await processWeb(localStorage.token, '', url);\n\n\t\t\tif (res) {\n\t\t\t\tfileItem.status = 'uploaded';\n\t\t\t\tfileItem.collection_name = res.collection_name;\n\t\t\t\tfileItem.file = {\n\t\t\t\t\t...res.file,\n\t\t\t\t\t...fileItem.file\n\t\t\t\t};\n\n\t\t\t\tfiles = files;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Remove the failed doc from the files array\n\t\t\tfiles = files.filter((f) => f.name !== url);\n\t\t\ttoast.error(JSON.stringify(e));\n\t\t}\n\t};\n\n\tconst uploadYoutubeTranscription = async (url) => {\n\t\tconsole.log(url);\n\n\t\tconst fileItem = {\n\t\t\ttype: 'doc',\n\t\t\tname: url,\n\t\t\tcollection_name: '',\n\t\t\tstatus: 'uploading',\n\t\t\tcontext: 'full',\n\t\t\turl: url,\n\t\t\terror: ''\n\t\t};\n\n\t\ttry {\n\t\t\tfiles = [...files, fileItem];\n\t\t\tconst res = await processYoutubeVideo(localStorage.token, url);\n\n\t\t\tif (res) {\n\t\t\t\tfileItem.status = 'uploaded';\n\t\t\t\tfileItem.collection_name = res.collection_name;\n\t\t\t\tfileItem.file = {\n\t\t\t\t\t...res.file,\n\t\t\t\t\t...fileItem.file\n\t\t\t\t};\n\t\t\t\tfiles = files;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Remove the failed doc from the files array\n\t\t\tfiles = files.filter((f) => f.name !== url);\n\t\t\ttoast.error(`${e}`);\n\t\t}\n\t};\n\n\t//////////////////////////\n\t// Web functions\n\t//////////////////////////\n\n\tconst initNewChat = async () => {\n\t\tif ($page.url.searchParams.get('models')) {\n\t\t\tselectedModels = $page.url.searchParams.get('models')?.split(',');\n\t\t} else if ($page.url.searchParams.get('model')) {\n\t\t\tconst urlModels = $page.url.searchParams.get('model')?.split(',');\n\n\t\t\tif (urlModels.length === 1) {\n\t\t\t\tconst m = $models.find((m) => m.id === urlModels[0]);\n\t\t\t\tif (!m) {\n\t\t\t\t\tconst modelSelectorButton = document.getElementById('model-selector-0-button');\n\t\t\t\t\tif (modelSelectorButton) {\n\t\t\t\t\t\tmodelSelectorButton.click();\n\t\t\t\t\t\tawait tick();\n\n\t\t\t\t\t\tconst modelSelectorInput = document.getElementById('model-search-input');\n\t\t\t\t\t\tif (modelSelectorInput) {\n\t\t\t\t\t\t\tmodelSelectorInput.focus();\n\t\t\t\t\t\t\tmodelSelectorInput.value = urlModels[0];\n\t\t\t\t\t\t\tmodelSelectorInput.dispatchEvent(new Event('input'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tselectedModels = urlModels;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tselectedModels = urlModels;\n\t\t\t}\n\t\t} else {\n\t\t\tif (sessionStorage.selectedModels) {\n\t\t\t\tselectedModels = JSON.parse(sessionStorage.selectedModels);\n\t\t\t\tsessionStorage.removeItem('selectedModels');\n\t\t\t} else {\n\t\t\t\tif ($settings?.models) {\n\t\t\t\t\tselectedModels = $settings?.models;\n\t\t\t\t} else if ($config?.default_models) {\n\t\t\t\t\tconsole.log($config?.default_models.split(',') ?? '');\n\t\t\t\t\tselectedModels = $config?.default_models.split(',');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tselectedModels = selectedModels.filter((modelId) => $models.map((m) => m.id).includes(modelId));\n\t\tif (selectedModels.length === 0 || (selectedModels.length === 1 && selectedModels[0] === '')) {\n\t\t\tif ($models.length > 0) {\n\t\t\t\tselectedModels = [$models[0].id];\n\t\t\t} else {\n\t\t\t\tselectedModels = [''];\n\t\t\t}\n\t\t}\n\n\t\tawait showControls.set(false);\n\t\tawait showCallOverlay.set(false);\n\t\tawait showOverview.set(false);\n\t\tawait showArtifacts.set(false);\n\n\t\tif ($page.url.pathname.includes('/c/')) {\n\t\t\twindow.history.replaceState(history.state, '', `/`);\n\t\t}\n\n\t\tautoScroll = true;\n\n\t\tawait chatId.set('');\n\t\tawait chatTitle.set('');\n\n\t\thistory = {\n\t\t\tmessages: {},\n\t\t\tcurrentId: null\n\t\t};\n\n\t\tinitHistoryWithGreetings();\n\n\t\tchatFiles = [];\n\t\tparams = {};\n\n\t\tif ($page.url.searchParams.get('youtube')) {\n\t\t\tuploadYoutubeTranscription(\n\t\t\t\t`https://www.youtube.com/watch?v=${$page.url.searchParams.get('youtube')}`\n\t\t\t);\n\t\t}\n\t\tif ($page.url.searchParams.get('web-search') === 'true') {\n\t\t\twebSearchEnabled = true;\n\t\t}\n\n\t\tif ($page.url.searchParams.get('image-generation') === 'true') {\n\t\t\timageGenerationEnabled = true;\n\t\t}\n\n\t\tif ($page.url.searchParams.get('tools')) {\n\t\t\tselectedToolIds = $page.url.searchParams\n\t\t\t\t.get('tools')\n\t\t\t\t?.split(',')\n\t\t\t\t.map((id) => id.trim())\n\t\t\t\t.filter((id) => id);\n\t\t} else if ($page.url.searchParams.get('tool-ids')) {\n\t\t\tselectedToolIds = $page.url.searchParams\n\t\t\t\t.get('tool-ids')\n\t\t\t\t?.split(',')\n\t\t\t\t.map((id) => id.trim())\n\t\t\t\t.filter((id) => id);\n\t\t}\n\n\t\tif ($page.url.searchParams.get('call') === 'true') {\n\t\t\tshowCallOverlay.set(true);\n\t\t\tshowControls.set(true);\n\t\t}\n\n\t\tif ($page.url.searchParams.get('q')) {\n\t\t\tprompt = $page.url.searchParams.get('q') ?? '';\n\n\t\t\tif (prompt) {\n\t\t\t\tawait tick();\n\t\t\t\tsubmitPrompt(prompt);\n\t\t\t}\n\t\t}\n\n\t\tselectedModels = selectedModels.map((modelId) =>\n\t\t\t$models.map((m) => m.id).includes(modelId) ? modelId : ''\n\t\t);\n\n\t\tconst userSettings = await getUserSettings(localStorage.token);\n\n\t\tif (userSettings) {\n\t\t\tsettings.set(userSettings.ui);\n\t\t} else {\n\t\t\tsettings.set(JSON.parse(localStorage.getItem('settings') ?? '{}'));\n\t\t}\n\n\t\tconst chatInput = document.getElementById('chat-input');\n\t\tsetTimeout(() => chatInput?.focus(), 0);\n\t};\n\n\tconst loadChat = async () => {\n\t\tchatId.set(chatIdProp);\n\t\tchat = await getChatById(localStorage.token, $chatId).catch(async (error) => {\n\t\t\tawait goto('/');\n\t\t\treturn null;\n\t\t});\n\n\t\tif (chat) {\n\t\t\ttags = await getTagsById(localStorage.token, $chatId).catch(async (error) => {\n\t\t\t\treturn [];\n\t\t\t});\n\n\t\t\tconst chatContent = chat.chat;\n\n\t\t\tif (chatContent) {\n\t\t\t\tconsole.log(chatContent);\n\n\t\t\t\tselectedModels =\n\t\t\t\t\t(chatContent?.models ?? undefined) !== undefined\n\t\t\t\t\t\t? chatContent.models\n\t\t\t\t\t\t: [chatContent.models ?? ''];\n\t\t\t\thistory =\n\t\t\t\t\t(chatContent?.history ?? undefined) !== undefined\n\t\t\t\t\t\t? chatContent.history\n\t\t\t\t\t\t: convertMessagesToHistory(chatContent.messages);\n\n\t\t\t\tchatTitle.set(chatContent.title);\n\n\t\t\t\tconst userSettings = await getUserSettings(localStorage.token);\n\n\t\t\t\tif (userSettings) {\n\t\t\t\t\tawait settings.set(userSettings.ui);\n\t\t\t\t} else {\n\t\t\t\t\tawait settings.set(JSON.parse(localStorage.getItem('settings') ?? '{}'));\n\t\t\t\t}\n\n\t\t\t\tparams = chatContent?.params ?? {};\n\t\t\t\tchatFiles = chatContent?.files ?? [];\n\n\t\t\t\tautoScroll = true;\n\t\t\t\tawait tick();\n\n\t\t\t\tif (history.currentId) {\n\t\t\t\t\thistory.messages[history.currentId].done = true;\n\t\t\t\t}\n\t\t\t\tawait tick();\n\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n\tconst scrollToBottom = async () => {\n\t\tawait tick();\n\t\tif (messagesContainerElement) {\n\t\t\tmessagesContainerElement.scrollTop = messagesContainerElement.scrollHeight;\n\t\t}\n\t};\n\tconst chatCompletedHandler = async (chatId, modelId, responseMessageId, messages) => {\n\t\tconsole.log('✅ chatCompletedHandler called:', { chatId, modelId, responseMessageId });\n\t\tconsole.log('📝 messages to save:', messages.length > 0 ? messages[0].role : 'empty');\n\t\t\n\t\tconst res = await chatCompleted(localStorage.token, {\n\t\t\tmodel: modelId,\n\t\t\tmessages: messages.map((m) => ({\n\t\t\t\tid: m.id,\n\t\t\t\trole: m.role,\n\t\t\t\tcontent: m.content,\n\t\t\t\tmodels: m.models\n\t\t\t})),\n\t\t\tmodel_item: $models.find((m) => m.id === modelId),\n\t\t\tchat_id: chatId,\n\t\t\tsession_id: $socket?.id,\n\t\t\tid: responseMessageId\n\t\t}).catch((error) => {\n\t\t\tconsole.error('❌ Error in chatCompleted:', error);\n\t\t\ttoast.error(`${error}`);\n\t\t\treturn null;\n\t\t});\n\n\t\tconsole.log('✅ chatCompleted response:', res ? 'success' : 'failed');\n\n\t\tif (res !== null && res.messages) {\n\t\t\t// Update chat history with the new messages\n\t\t\tfor (const message of res.messages) {\n\t\t\t\tif (message?.id) {\n\t\t\t\t\t// Add null check for message and message.id\n\t\t\t\t\thistory.messages[message.id] = {\n\t\t\t\t\t\t...history.messages[message.id],\n\t\t\t\t\t\t...(history.messages[message.id].content !== message.content\n\t\t\t\t\t\t\t? { originalContent: history.messages[message.id].content }\n\t\t\t\t\t\t\t: {}),\n\t\t\t\t\t\t...message\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait tick();\n\n\t\tif ($chatId == chatId) {\n\t\t\tif (!$temporaryChatEnabled) {\n\t\t\t\tchat = await updateChatById(localStorage.token, chatId, {\n\t\t\t\t\tmodels: selectedModels,\n\t\t\t\t\tmessages: messages,\n\t\t\t\t\thistory: history,\n\t\t\t\t\tparams: params,\n\t\t\t\t\tfiles: chatFiles\n\t\t\t\t});\n\n\t\t\t\tcurrentChatPage.set(1);\n\t\t\t\tawait chats.set(await getChatList(localStorage.token, $currentChatPage));\n\t\t\t}\n\t\t}\n\t};\n\n\tconst chatActionHandler = async (chatId, actionId, modelId, responseMessageId, event = null) => {\n\t\tconst messages = createMessagesList(history, responseMessageId);\n\n\t\tconst res = await chatAction(localStorage.token, actionId, {\n\t\t\tmodel: modelId,\n\t\t\tmessages: messages.map((m) => ({\n\t\t\t\tid: m.id,\n\t\t\t\trole: m.role,\n\t\t\t\tcontent: m.content,\n\t\t\t\tinfo: m.info ? m.info : undefined,\n\t\t\t\ttimestamp: m.timestamp,\n\t\t\t\t...(m.sources ? { sources: m.sources } : {})\n\t\t\t})),\n\t\t\t...(event ? { event: event } : {}),\n\t\t\tmodel_item: $models.find((m) => m.id === modelId),\n\t\t\tchat_id: chatId,\n\t\t\tsession_id: $socket?.id,\n\t\t\tid: responseMessageId\n\t\t}).catch((error) => {\n\t\t\ttoast.error(`${error}`);\n\t\t\tmessages.at(-1).error = { content: error };\n\t\t\treturn null;\n\t\t});\n\n\t\tif (res !== null && res.messages) {\n\t\t\t// Update chat history with the new messages\n\t\t\tfor (const message of res.messages) {\n\t\t\t\thistory.messages[message.id] = {\n\t\t\t\t\t...history.messages[message.id],\n\t\t\t\t\t...(history.messages[message.id].content !== message.content\n\t\t\t\t\t\t? { originalContent: history.messages[message.id].content }\n\t\t\t\t\t\t: {}),\n\t\t\t\t\t...message\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ($chatId == chatId) {\n\t\t\tif (!$temporaryChatEnabled) {\n\t\t\t\tchat = await updateChatById(localStorage.token, chatId, {\n\t\t\t\t\tmodels: selectedModels,\n\t\t\t\t\tmessages: messages,\n\t\t\t\t\thistory: history,\n\t\t\t\t\tparams: params,\n\t\t\t\t\tfiles: chatFiles\n\t\t\t\t});\n\n\t\t\t\tcurrentChatPage.set(1);\n\t\t\t\tawait chats.set(await getChatList(localStorage.token, $currentChatPage));\n\t\t\t}\n\t\t}\n\t};\n\n\tconst getChatEventEmitter = async (modelId: string, chatId: string = '') => {\n\t\treturn setInterval(() => {\n\t\t\t$socket?.emit('usage', {\n\t\t\t\taction: 'chat',\n\t\t\t\tmodel: modelId,\n\t\t\t\tchat_id: chatId\n\t\t\t});\n\t\t}, 1000);\n\t};\n\n\tconst createMessagePair = async (userPrompt) => {\n\t\tprompt = '';\n\t\tif (selectedModels.length === 0) {\n\t\t\ttoast.error($i18n.t('Model not selected'));\n\t\t} else {\n\t\t\tconst modelId = selectedModels[0];\n\t\t\tconst model = $models.filter((m) => m.id === modelId).at(0);\n\n\t\t\tconst messages = createMessagesList(history, history.currentId);\n\t\t\tconst parentMessage = messages.length !== 0 ? messages.at(-1) : null;\n\n\t\t\tconst userMessageId = uuidv4();\n\t\t\tconst responseMessageId = uuidv4();\n\n\t\t\tconst userMessage = {\n\t\t\t\tid: userMessageId,\n\t\t\t\tparentId: parentMessage ? parentMessage.id : null,\n\t\t\t\tchildrenIds: [responseMessageId],\n\t\t\t\trole: 'user',\n\t\t\t\tcontent: userPrompt ? userPrompt : `[PROMPT] ${userMessageId}`,\n\t\t\t\ttimestamp: Math.floor(Date.now() / 1000)\n\t\t\t};\n\n\t\t\tconst responseMessage = {\n\t\t\t\tid: responseMessageId,\n\t\t\t\tparentId: userMessageId,\n\t\t\t\tchildrenIds: [],\n\t\t\t\trole: 'assistant',\n\t\t\t\tcontent: `[RESPONSE] ${responseMessageId}`,\n\t\t\t\tdone: true,\n\n\t\t\t\tmodel: modelId,\n\t\t\t\tmodelName: model.name ?? model.id,\n\t\t\t\tmodelIdx: 0,\n\t\t\t\ttimestamp: Math.floor(Date.now() / 1000)\n\t\t\t};\n\n\t\t\tif (parentMessage) {\n\t\t\t\tparentMessage.childrenIds.push(userMessageId);\n\t\t\t\thistory.messages[parentMessage.id] = parentMessage;\n\t\t\t}\n\t\t\thistory.messages[userMessageId] = userMessage;\n\t\t\thistory.messages[responseMessageId] = responseMessage;\n\n\t\t\thistory.currentId = responseMessageId;\n\n\t\t\tawait tick();\n\n\t\t\tif (autoScroll) {\n\t\t\t\tscrollToBottom();\n\t\t\t}\n\n\t\t\tif (messages.length === 0) {\n\t\t\t\tawait initChatHandler(history);\n\t\t\t} else {\n\t\t\t\tawait saveChatHandler($chatId, history);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst addMessages = async ({ modelId, parentId, messages }) => {\n\t\tconst model = $models.filter((m) => m.id === modelId).at(0);\n\n\t\tlet parentMessage = history.messages[parentId];\n\t\tlet currentParentId = parentMessage ? parentMessage.id : null;\n\t\tfor (const message of messages) {\n\t\t\tlet messageId = uuidv4();\n\n\t\t\tif (message.role === 'user') {\n\t\t\t\tconst userMessage = {\n\t\t\t\t\tid: messageId,\n\t\t\t\t\tparentId: currentParentId,\n\t\t\t\t\tchildrenIds: [],\n\t\t\t\t\ttimestamp: Math.floor(Date.now() / 1000),\n\t\t\t\t\t...message\n\t\t\t\t};\n\n\t\t\t\tif (parentMessage) {\n\t\t\t\t\tparentMessage.childrenIds.push(messageId);\n\t\t\t\t\thistory.messages[parentMessage.id] = parentMessage;\n\t\t\t\t}\n\n\t\t\t\thistory.messages[messageId] = userMessage;\n\t\t\t\tparentMessage = userMessage;\n\t\t\t\tcurrentParentId = messageId;\n\t\t\t} else {\n\t\t\t\tconst responseMessage = {\n\t\t\t\t\tid: messageId,\n\t\t\t\t\tparentId: currentParentId,\n\t\t\t\t\tchildrenIds: [],\n\t\t\t\t\tdone: true,\n\t\t\t\t\tmodel: model.id,\n\t\t\t\t\tmodelName: model.name ?? model.id,\n\t\t\t\t\tmodelIdx: 0,\n\t\t\t\t\ttimestamp: Math.floor(Date.now() / 1000),\n\t\t\t\t\t...message\n\t\t\t\t};\n\n\t\t\t\tif (parentMessage) {\n\t\t\t\t\tparentMessage.childrenIds.push(messageId);\n\t\t\t\t\thistory.messages[parentMessage.id] = parentMessage;\n\t\t\t\t}\n\n\t\t\t\thistory.messages[messageId] = responseMessage;\n\t\t\t\tparentMessage = responseMessage;\n\t\t\t\tcurrentParentId = messageId;\n\t\t\t}\n\t\t}\n\n\t\thistory.currentId = currentParentId;\n\t\tawait tick();\n\n\t\tif (autoScroll) {\n\t\t\tscrollToBottom();\n\t\t}\n\n\t\tif (messages.length === 0) {\n\t\t\tawait initChatHandler(history);\n\t\t} else {\n\t\t\tawait saveChatHandler($chatId, history);\n\t\t}\n\t};\n\n\tconst submitPrompt = async (userPrompt, { _raw = false } = {}) => {\n\t\tconsole.log('🚀 submitPrompt', userPrompt, $chatId);\n\t\tconsole.log('📋 Current history IDs:', { \n\t\t\tcurrentId: history.currentId, \n\t\t\tmessagesCount: Object.keys(history.messages).length \n\t\t});\n\n\t\tconst messages = createMessagesList(history, history.currentId);\n\t\tif (messages) {\n\t\t\tconsole.log('📋 Last message:', messages.length > 0 ? \n\t\t\t\t{ role: messages[messages.length-1].role, content: messages[messages.length-1].content.slice(0, 50) + '...' } : \n\t\t\t\t'No messages');\n\t\t}\n\n\t\tconst _selectedModels = selectedModels.map((modelId) =>\n\t\t\t$models.map((m) => m.id).includes(modelId) ? modelId : ''\n\t\t);\n\t\tif (JSON.stringify(selectedModels) !== JSON.stringify(_selectedModels)) {\n\t\t\tselectedModels = _selectedModels;\n\t\t}\n\n\t\tif (userPrompt === '' && files.length === 0) {\n\t\t\ttoast.error($i18n.t('Please enter a prompt'));\n\t\t\treturn;\n\t\t}\n\t\tif (selectedModels.includes('')) {\n\t\t\ttoast.error($i18n.t('Model not selected'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (messages.length != 0 && messages.at(-1).done != true) {\n\t\t\t// Response not done\n\t\t\treturn;\n\t\t}\n\t\tif (messages.length != 0 && messages.at(-1).error && !messages.at(-1).content) {\n\t\t\t// Error in response\n\t\t\ttoast.error($i18n.t(`Oops! There was an error in the previous response.`));\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tfiles.length > 0 &&\n\t\t\tfiles.filter((file) => file.type !== 'image' && file.status === 'uploading').length > 0\n\t\t) {\n\t\t\ttoast.error(\n\t\t\t\t$i18n.t(`Oops! There are files still uploading. Please wait for the upload to complete.`)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\t($config?.file?.max_count ?? null) !== null &&\n\t\t\tfiles.length + chatFiles.length > $config?.file?.max_count\n\t\t) {\n\t\t\ttoast.error(\n\t\t\t\t$i18n.t(`You can only chat with a maximum of {{maxCount}} file(s) at a time.`, {\n\t\t\t\t\tmaxCount: $config?.file?.max_count\n\t\t\t\t})\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tprompt = '';\n\n\t\t// Reset chat input textarea\n\t\tconst chatInputElement = document.getElementById('chat-input');\n\n\t\tif (chatInputElement) {\n\t\t\tawait tick();\n\t\t\tchatInputElement.style.height = '';\n\t\t\tchatInputElement.style.height = Math.min(chatInputElement.scrollHeight, 320) + 'px';\n\t\t}\n\n\t\tconst _files = JSON.parse(JSON.stringify(files));\n\t\tchatFiles.push(..._files.filter((item) => ['doc', 'file', 'collection'].includes(item.type)));\n\t\tchatFiles = chatFiles.filter(\n\t\t\t// Remove duplicates\n\t\t\t(item, index, array) =>\n\t\t\t\tarray.findIndex((i) => JSON.stringify(i) === JSON.stringify(item)) === index\n\t\t);\n\n\t\tfiles = [];\n\t\tprompt = '';\n\n\t\t// Create user message\n\t\tlet userMessageId = uuidv4();\n\t\tlet userMessage = {\n\t\t\tid: userMessageId,\n\t\t\tparentId: messages.length !== 0 ? messages.at(-1).id : null,\n\t\t\tchildrenIds: [],\n\t\t\trole: 'user',\n\t\t\tcontent: userPrompt,\n\t\t\tfiles: _files.length > 0 ? _files : undefined,\n\t\t\ttimestamp: Math.floor(Date.now() / 1000), // Unix epoch\n\t\t\tmodels: selectedModels\n\t\t};\n\n\t\t// Add message to history and Set currentId to messageId\n\t\thistory.messages[userMessageId] = userMessage;\n\t\thistory.currentId = userMessageId;\n\n\t\t// Append messageId to childrenIds of parent message\n\t\tif (messages.length !== 0) {\n\t\t\thistory.messages[messages.at(-1).id].childrenIds.push(userMessageId);\n\t\t}\n\n\t\t// focus on chat input\n\t\tconst chatInput = document.getElementById('chat-input');\n\t\tchatInput?.focus();\n\n\t\tsaveSessionSelectedModels();\n\n\t\tawait sendPrompt(history, userPrompt, userMessageId, { newChat: true });\n\t};\n\n\tconst sendPromptSocket = async (_history, model, responseMessageId, _chatId) => {\n\t\tconsole.log('🔌 sendPromptSocket:', { modelId: model.id, responseMessageId, chatId: _chatId });\n\t\tconst responseMessage = _history.messages[responseMessageId];\n\t\tconst userMessage = _history.messages[responseMessage.parentId];\n\n\t\tlet files = JSON.parse(JSON.stringify(chatFiles));\n\t\tfiles.push(\n\t\t\t...(userMessage?.files ?? []).filter((item) =>\n\t\t\t\t['doc', 'file', 'collection'].includes(item.type)\n\t\t\t),\n\t\t\t...(responseMessage?.files ?? []).filter((item) => ['web_search_results'].includes(item.type))\n\t\t);\n\t\t// Remove duplicates\n\t\tfiles = files.filter(\n\t\t\t(item, index, array) =>\n\t\t\t\tarray.findIndex((i) => JSON.stringify(i) === JSON.stringify(item)) === index\n\t\t);\n\n\t\tscrollToBottom();\n\t\teventTarget.dispatchEvent(\n\t\t\tnew CustomEvent('chat:start', {\n\t\t\t\tdetail: {\n\t\t\t\t\tid: responseMessageId\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tawait tick();\n\n\t\t// Get user location if needed\n\t\tconst getUserLocation = async () => {\n\t\t\tif ($settings?.userLocation) {\n\t\t\t\ttry {\n\t\t\t\t\treturn await getAndUpdateUserLocation(localStorage.token);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t\t\n\t\t// Get the user location\n\t\tconst userLocation = await getUserLocation();\n\t\t\n\t\t// Log the API key for debugging\n\t\tconsole.log(\"Sending userAPIKey to backend:\", $userAPIKey ? \"Present\" : \"Empty/None\");\n\n\t\t// Set the response message content to processing message (if we have a nice settings)\n\t\tresponseMessage.content = ''\n\t\tif ($settings?.processingMessage ?? false) {\n\t\t\tresponseMessage.content = $settings.processingMessage === true ? '...' : $settings.processingMessage;\n\t\t}\n\n\t\tconst stream =\n\t\t\tmodel?.info?.params?.stream_response ??\n\t\t\t$settings?.params?.stream_response ??\n\t\t\tparams?.stream_response ??\n\t\t\ttrue;\n\n\t\tlet messages = [\n\t\t\tparams?.system || $settings.system || (responseMessage?.userContext ?? null)\n\t\t\t\t? {\n\t\t\t\t\t\trole: 'system',\n\t\t\t\t\t\tcontent: `${promptTemplate(\n\t\t\t\t\t\t\tparams?.system ?? $settings?.system ?? '',\n\t\t\t\t\t\t\t$user.name,\n\t\t\t\t\t\t\tuserLocation,\n\t\t\t\t\t\t\t$userAPIKey\n\t\t\t\t\t\t)}${\n\t\t\t\t\t\t\t(responseMessage?.userContext ?? null)\n\t\t\t\t\t\t\t\t? `\\n\\nUser Context:\\n${responseMessage?.userContext ?? ''}`\n\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t}`\n\t\t\t\t\t}\n\t\t\t\t: undefined,\n\t\t\t...createMessagesList(_history, responseMessageId).map((message) => ({\n\t\t\t\t...message,\n\t\t\t\tcontent: removeDetails(message.content, ['reasoning', 'code_interpreter'])\n\t\t\t}))\n\t\t].filter(Boolean);\n\n\t\tmessages = messages\n\t\t\t.map((message, idx, arr) => ({\n\t\t\t\trole: message.role,\n\t\t\t\t...((message.files?.filter((file) => file.type === 'image').length > 0 ?? false) &&\n\t\t\t\tmessage.role === 'user'\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\t\t\ttext: message?.merged?.content ?? message.content\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...message.files\n\t\t\t\t\t\t\t\t\t.filter((file) => file.type === 'image')\n\t\t\t\t\t\t\t\t\t.map((file) => ({\n\t\t\t\t\t\t\t\t\t\ttype: 'image_url',\n\t\t\t\t\t\t\t\t\t\timage_url: {\n\t\t\t\t\t\t\t\t\t\t\turl: file.url\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tcontent: message?.merged?.content ?? message.content\n\t\t\t\t\t\t})\n\t\t\t}))\n\t\t\t.filter((message) => message?.role === 'user' || message?.content?.trim());\n\n\t\tconst res = await generateOpenAIChatCompletion(\n\t\t\tlocalStorage.token,\n\t\t\t{\n\t\t\t\tstream: stream,\n\t\t\t\tmodel: model.id,\n\t\t\t\tmessages: messages,\n\t\t\t\tparams: {\n\t\t\t\t\t...$settings?.params,\n\t\t\t\t\t...params,\n\n\t\t\t\t\tformat: $settings.requestFormat ?? undefined,\n\t\t\t\t\tkeep_alive: $settings.keepAlive ?? undefined,\n\t\t\t\t\tstop:\n\t\t\t\t\t\t(params?.stop ?? $settings?.params?.stop ?? undefined)\n\t\t\t\t\t\t\t? (params?.stop.split(',').map((token) => token.trim()) ?? $settings.params.stop).map(\n\t\t\t\t\t\t\t\t\t(str) => decodeURIComponent(JSON.parse('\"' + str.replace(/\\\"/g, '\\\\\"') + '\"'))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t},\n\n\t\t\t\tfiles: (files?.length ?? 0) > 0 ? files : undefined,\n\t\t\t\ttool_ids: selectedToolIds.length > 0 ? selectedToolIds : undefined,\n\n\t\t\t\tfeatures: {\n\t\t\t\t\timage_generation:\n\t\t\t\t\t\t$config?.features?.enable_image_generation &&\n\t\t\t\t\t\t($user.role === 'admin' || $user?.permissions?.features?.image_generation)\n\t\t\t\t\t\t\t? imageGenerationEnabled\n\t\t\t\t\t\t\t: false,\n\t\t\t\t\tcode_interpreter:\n\t\t\t\t\t\t$config?.features?.enable_code_interpreter &&\n\t\t\t\t\t\t($user.role === 'admin' || $user?.permissions?.features?.code_interpreter)\n\t\t\t\t\t\t\t? codeInterpreterEnabled\n\t\t\t\t\t\t\t: false,\n\t\t\t\t\tweb_search:\n\t\t\t\t\t\t$config?.features?.enable_web_search &&\n\t\t\t\t\t\t($user.role === 'admin' || $user?.permissions?.features?.web_search)\n\t\t\t\t\t\t\t? webSearchEnabled || ($settings?.webSearch ?? false) === 'always'\n\t\t\t\t\t\t\t: false\n\t\t\t\t},\n\t\t\t\tvariables: (() => {\n\t\t\t\t\tconsole.log(\"Sending userAPIKey to backend:\", $userAPIKey ? \"Present\" : \"Empty/None\");\n\t\t\t\t\t// Create variables without using await\n\t\t\t\t\tconst promptVars = getPromptVariables(\n\t\t\t\t\t\t$user.name,\n\t\t\t\t\t\tuserLocation,\n\t\t\t\t\t\t$userAPIKey\n\t\t\t\t\t);\n\t\t\t\t\treturn promptVars;\n\t\t\t\t})(),\n\t\t\t\tmodel_item: $models.find((m) => m.id === model.id),\n\n\t\t\t\tsession_id: $socket?.id,\n\t\t\t\tchat_id: _chatId,\n\t\t\t\tid: responseMessageId,\n\n\t\t\t\t...(!$temporaryChatEnabled &&\n\t\t\t\t(messages.length == 1 ||\n\t\t\t\t\t(messages.length == 2 &&\n\t\t\t\t\t\tmessages.at(0)?.role === 'system' &&\n\t\t\t\t\t\tmessages.at(1)?.role === 'user')) &&\n\t\t\t\t(selectedModels[0] === model.id || atSelectedModel !== undefined)\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tbackground_tasks: {\n\t\t\t\t\t\t\t\ttitle_generation: $settings?.title?.auto ?? true,\n\t\t\t\t\t\t\t\ttags_generation: $settings?.autoTags ?? true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t: {}),\n\n\t\t\t\t...(stream && (model.info?.meta?.capabilities?.usage ?? false)\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tstream_options: {\n\t\t\t\t\t\t\t\tinclude_usage: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t: {})\n\t\t\t},\n\t\t\t`${WEBUI_BASE_URL}/api`\n\t\t).catch((error) => {\n\t\t\ttoast.error(`${error}`);\n\n\t\t\tresponseMessage.error = {\n\t\t\t\tcontent: error\n\t\t\t};\n\t\t\tresponseMessage.done = true;\n\n\t\t\thistory.messages[responseMessageId] = responseMessage;\n\t\t\thistory.currentId = responseMessageId;\n\t\t\treturn null;\n\t\t});\n\n\t\tconsole.log(res);\n\n\t\tif (res) {\n\t\t\ttaskId = res.task_id;\n\t\t}\n\n\t\tawait tick();\n\t\tscrollToBottom();\n\t};\n\n\t// Send prompt to backend and handle the response\n\tconst sendPrompt = async (_history, userPrompt, userMessageId, options = {}) => {\n\t\tconst { modelId, modelIdx = 0, newChat = false } = options;\n\t\tlet _chatId = $chatId;\n\t\t\n\t\tif (newChat && !$temporaryChatEnabled && !_chatId) {\n\t\t\tconsole.log('🆕 Creating new chat for prompt');\n\t\t\ttry {\n\t\t\t\tchat = await createNewChat(localStorage.token, {\n\t\t\t\t\tid: _chatId,\n\t\t\t\t\ttitle: $i18n.t('New Chat'),\n\t\t\t\t\tmodels: selectedModels,\n\t\t\t\t\tsystem: $settings.system ?? undefined,\n\t\t\t\t\tparams: params,\n\t\t\t\t\thistory: history,\n\t\t\t\t\tmessages: createMessagesList(history, history.currentId),\n\t\t\t\t\ttags: [],\n\t\t\t\t\ttimestamp: Date.now()\n\t\t\t\t});\n\n\t\t\t\t_chatId = chat.id;\n\t\t\t\tawait chatId.set(_chatId);\n\n\t\t\t\tawait chats.set(await getChatList(localStorage.token, $currentChatPage));\n\t\t\t\tcurrentChatPage.set(1);\n\n\t\t\t\t// Use $app/navigation instead of window.history.replaceState\n\t\t\t\ttry {\n\t\t\t\t\twindow.history.pushState({}, '', `/c/${_chatId}`);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('❌ Error updating URL:', e);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error('❌ Error creating chat:', e);\n\t\t\t\t_chatId = null;\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst messages = createMessagesList(_history, userMessageId);\n\t\tconst userMessage = messages.at(-1);\n\n\t\t// Create response message\n\t\tconst responseMessageId = uuidv4();\n\t\tlet model;\n\t\t\n\t\tif (modelId) {\n\t\t\tmodel = $models.find((m) => m.id === modelId);\n\t\t} else {\n\t\t\t// If user message has models defined, use the first one\n\t\t\tconst userModelId = (userMessage?.models ?? selectedModels)[0];\n\t\t\tmodel = $models.find((m) => m.id === userModelId);\n\t\t}\n\n\t\tif (!model) {\n\t\t\ttoast.error($i18n.t('Model not selected'));\n\t\t\treturn;\n\t\t}\n\n\t\t// Special handling for accounting_en model which uses our agent API\n\t\tconst isAgentModel = model.id === 'accounting_en' || model.id.includes('accounting');\n\t\tconsole.log(`🏷️ Model ${model.id} is agent model: ${isAgentModel}`);\n\n\t\t// Create loading message with animation text for agent models\n\t\tconst agentLoadingText = isAgentModel ? $i18n.t('Agent is helping...') : '';\n\t\t\n\t\tconst responseMessage = {\n\t\t\tid: responseMessageId,\n\t\t\tparentId: userMessageId,\n\t\t\tchildrenIds: [],\n\t\t\trole: 'assistant',\n\t\t\tcontent: agentLoadingText,\n\t\t\tmodel: model.id,\n\t\t\tmodelName: model?.name ?? model.id,\n\t\t\tmodelIdx: modelIdx,\n\t\t\ttimestamp: Math.floor(Date.now() / 1000),\n\t\t\t// Flag to indicate this is an agent response\n\t\t\tisAgentResponse: isAgentModel,\n\t\t\t// Add loading indicator for agents\n\t\t\tisLoading: isAgentModel\n\t\t};\n\n\t\t// Add message to history and Set currentId to responseMessageId\n\t\t_history.messages[responseMessageId] = responseMessage;\n\t\t_history.currentId = responseMessageId;\n\t\t_history.messages[userMessageId].childrenIds.push(responseMessageId);\n\n\t\tawait tick();\n\t\t\n\t\tif (autoScroll) {\n\t\t\tscrollToBottom();\n\t\t}\n\n\t\t// If this is an agent model, start the typing animation\n\t\tif (isAgentModel) {\n\t\t\tstartAgentAnimation(responseMessageId);\n\t\t}\n\n\t\t// Send to backend via socket\n\t\tawait sendPromptSocket(_history, model, responseMessageId, _chatId);\n\t\t\n\t\treturn responseMessageId;\n\t};\n\n\t// Animation for agent loading message\n\tconst startAgentAnimation = async (messageId) => {\n\t\tconst loadingTexts = [\n\t\t\t$i18n.t(\"Agent is helping...\"),\n\t\t\t$i18n.t(\"Agent is processing your request...\"),\n\t\t\t$i18n.t(\"Agent is working on it...\"),\n\t\t\t$i18n.t(\"Agent is analyzing...\")\n\t\t];\n\t\tlet textIndex = 0;\n\t\tlet dotCount = 0;\n\t\t\n\t\tconst animateText = () => {\n\t\t\tconst message = history.messages[messageId];\n\t\t\t// Stop animation if message is no longer loading or has content\n\t\t\tif (!message || !message.isLoading || (message.content && message.content.length > 30)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tconst baseText = loadingTexts[textIndex];\n\t\t\tconst dots = \".\".repeat(dotCount % 4);\n\t\t\thistory.messages[messageId].content = baseText + dots;\n\t\t\t\n\t\t\t// Force update in history object to ensure UI updates\n\t\t\thistory = { ...history };\n\t\t\t\n\t\t\t// Increment counters\n\t\t\tdotCount++;\n\t\t\tif (dotCount % 12 === 0) {\n\t\t\t\ttextIndex = (textIndex + 1) % loadingTexts.length;\n\t\t\t}\n\t\t\t\n\t\t\t// Continue animation\n\t\t\tsetTimeout(animateText, 400);\n\t\t};\n\t\t\n\t\tanimateText();\n\t};\n\n\tconst handleOpenAIError = async (error, responseMessage) => {\n\t\tlet errorMessage = '';\n\t\tlet innerError;\n\n\t\tif (error) {\n\t\t\tinnerError = error;\n\t\t}\n\n\t\tconsole.error(innerError);\n\t\tif ('detail' in innerError) {\n\t\t\ttoast.error(innerError.detail);\n\t\t\terrorMessage = innerError.detail;\n\t\t} else if ('error' in innerError) {\n\t\t\tif ('message' in innerError.error) {\n\t\t\t\ttoast.error(innerError.error.message);\n\t\t\t\terrorMessage = innerError.error.message;\n\t\t\t} else {\n\t\t\t\ttoast.error(innerError.error);\n\t\t\t\terrorMessage = innerError.error;\n\t\t\t}\n\t\t} else if ('message' in innerError) {\n\t\t\ttoast.error(innerError.message);\n\t\t\terrorMessage = innerError.message;\n\t\t}\n\n\t\tresponseMessage.error = {\n\t\t\tcontent: $i18n.t(`Uh-oh! There was an issue with the response.`) + '\\n' + errorMessage\n\t\t};\n\t\tresponseMessage.done = true;\n\n\t\tif (responseMessage.statusHistory) {\n\t\t\tresponseMessage.statusHistory = responseMessage.statusHistory.filter(\n\t\t\t\t(status) => status.action !== 'knowledge_search'\n\t\t\t);\n\t\t}\n\n\t\thistory.messages[responseMessage.id] = responseMessage;\n\t};\n\n\tconst stopResponse = () => {\n\t\tif (taskId) {\n\t\t\tconst res = stopTask(localStorage.token, taskId).catch((error) => {\n\t\t\t\treturn null;\n\t\t\t});\n\n\t\t\tif (res) {\n\t\t\t\ttaskId = null;\n\n\t\t\t\tconst responseMessage = history.messages[history.currentId];\n\t\t\t\tresponseMessage.done = true;\n\n\t\t\t\thistory.messages[history.currentId] = responseMessage;\n\n\t\t\t\tif (autoScroll) {\n\t\t\t\t\tscrollToBottom();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst submitMessage = async (parentId, prompt) => {\n\t\tlet userPrompt = prompt;\n\t\tlet userMessageId = uuidv4();\n\n\t\tlet userMessage = {\n\t\t\tid: userMessageId,\n\t\t\tparentId: parentId,\n\t\t\tchildrenIds: [],\n\t\t\trole: 'user',\n\t\t\tcontent: userPrompt,\n\t\t\tmodels: selectedModels\n\t\t};\n\n\t\tif (parentId !== null) {\n\t\t\thistory.messages[parentId].childrenIds = [\n\t\t\t\t...history.messages[parentId].childrenIds,\n\t\t\t\tuserMessageId\n\t\t\t];\n\t\t}\n\n\t\thistory.messages[userMessageId] = userMessage;\n\t\thistory.currentId = userMessageId;\n\n\t\tawait tick();\n\t\tawait sendPrompt(history, userPrompt, userMessageId);\n\t};\n\n\tconst regenerateResponse = async (message) => {\n\t\tconsole.log('regenerateResponse');\n\n\t\tif (history.currentId) {\n\t\t\tlet userMessage = history.messages[message.parentId];\n\t\t\tlet userPrompt = userMessage.content;\n\n\t\t\tif ((userMessage?.models ?? [...selectedModels]).length == 1) {\n\t\t\t\t// If user message has only one model selected, sendPrompt automatically selects it for regeneration\n\t\t\t\tawait sendPrompt(history, userPrompt, userMessage.id);\n\t\t\t} else {\n\t\t\t\t// If there are multiple models selected, use the model of the response message for regeneration\n\t\t\t\t// e.g. many model chat\n\t\t\t\tawait sendPrompt(history, userPrompt, userMessage.id, {\n\t\t\t\t\tmodelId: message.model,\n\t\t\t\t\tmodelIdx: message.modelIdx\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst continueResponse = async () => {\n\t\tconsole.log('continueResponse');\n\t\tconst _chatId = JSON.parse(JSON.stringify($chatId));\n\n\t\tif (history.currentId && history.messages[history.currentId].done == true) {\n\t\t\tconst responseMessage = history.messages[history.currentId];\n\t\t\tresponseMessage.done = false;\n\t\t\tawait tick();\n\n\t\t\tconst model = $models\n\t\t\t\t.filter((m) => m.id === (responseMessage?.selectedModelId ?? responseMessage.model))\n\t\t\t\t.at(0);\n\n\t\t\tif (model) {\n\t\t\t\tawait sendPrompt(history, responseMessage.content, responseMessage.parentId, {\n\t\t\t\t\tmodelId: model.id,\n\t\t\t\t\tmodelIdx: responseMessage.modelIdx\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst mergeResponses = async (messageId, responses, _chatId) => {\n\t\tconsole.log('mergeResponses', messageId, responses);\n\t\tconst message = history.messages[messageId];\n\t\tconst mergedResponse = {\n\t\t\tstatus: true,\n\t\t\tcontent: ''\n\t\t};\n\t\tmessage.merged = mergedResponse;\n\t\thistory.messages[messageId] = message;\n\n\t\ttry {\n\t\t\tconst [res, controller] = await generateMoACompletion(\n\t\t\t\tlocalStorage.token,\n\t\t\t\tmessage.model,\n\t\t\t\thistory.messages[message.parentId].content,\n\t\t\t\tresponses\n\t\t\t);\n\n\t\t\tif (res && res.ok && res.body) {\n\t\t\t\tconst textStream = await createOpenAITextStream(res.body, $settings.splitLargeChunks);\n\t\t\t\tfor await (const update of textStream) {\n\t\t\t\t\tconst { value, done, sources, error, usage } = update;\n\t\t\t\t\tif (error || done) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mergedResponse.content == '' && value == '\\n') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmergedResponse.content += value;\n\t\t\t\t\t\thistory.messages[messageId] = message;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (autoScroll) {\n\t\t\t\t\t\tscrollToBottom();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tawait saveChatHandler(_chatId, history);\n\t\t\t} else {\n\t\t\t\tconsole.error(res);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n\n\tconst initChatHandler = async (history) => {\n\t\tlet _chatId = $chatId;\n\n\t\tif (!$temporaryChatEnabled) {\n\t\t\tchat = await createNewChat(localStorage.token, {\n\t\t\t\tid: _chatId,\n\t\t\t\ttitle: $i18n.t('New Chat'),\n\t\t\t\tmodels: selectedModels,\n\t\t\t\tsystem: $settings.system ?? undefined,\n\t\t\t\tparams: params,\n\t\t\t\thistory: history,\n\t\t\t\tmessages: createMessagesList(history, history.currentId),\n\t\t\t\ttags: [],\n\t\t\t\ttimestamp: Date.now()\n\t\t\t});\n\n\t\t\t_chatId = chat.id;\n\t\t\tawait chatId.set(_chatId);\n\n\t\t\tawait chats.set(await getChatList(localStorage.token, $currentChatPage));\n\t\t\tcurrentChatPage.set(1);\n\n\t\t\twindow.history.replaceState(history.state, '', `/c/${_chatId}`);\n\t\t} else {\n\t\t\t_chatId = 'local';\n\t\t\tawait chatId.set('local');\n\t\t}\n\t\tawait tick();\n\n\t\treturn _chatId;\n\t};\n\n\tconst saveChatHandler = async (_chatId, history) => {\n\t\tif ($chatId == _chatId) {\n\t\t\tif (!$temporaryChatEnabled) {\n\t\t\t\tchat = await updateChatById(localStorage.token, _chatId, {\n\t\t\t\t\tmodels: selectedModels,\n\t\t\t\t\thistory: history,\n\t\t\t\t\tmessages: createMessagesList(history, history.currentId),\n\t\t\t\t\tparams: params,\n\t\t\t\t\tfiles: chatFiles\n\t\t\t\t});\n\t\t\t\tcurrentChatPage.set(1);\n\t\t\t\tawait chats.set(await getChatList(localStorage.token, $currentChatPage));\n\t\t\t}\n\t\t}\n\t};\n\n\tconst initHistoryWithGreetings = () => {\n\t\tlet messageId = uuidv4();\n\t\tconst locale = localStorage.getItem('locale');\n\t\t\n\t\t// Use shorter messages and check locale directly instead of using i18n\n\t\tconst greeting = locale === 'zh-CN' \n\t\t\t? \"您好！我是您的会计助手。请告诉我您需要分析的财务数据或有什么财务问题。\"\n\t\t\t: \"Hello! I'm your accounting assistant. How can I help with your financial data analysis?\";\n\t\t\t\n\t\thistory.messages[messageId] = {\n\t\t\tid: messageId,\n\t\t\trole: 'assistant',\n\t\t\tcontent: greeting,\n\t\t\tmodel: 'Assistant',\n\t\t\tmodelName: 'Assistant',\n\t\t\tparentId: null,\n\t\t\ttimestamp: Math.floor(Date.now() / 1000),\n\t\t\tchildrenIds: [],\n\t\t\tdone: true\n\t\t};\n\t\thistory.currentId = messageId;\n\t};\n</script>\n\n<svelte:head>\n\t<title>\n\t\t{$chatTitle\n\t\t\t? `${$chatTitle.length > 30 ? `${$chatTitle.slice(0, 30)}...` : $chatTitle} | ${$WEBUI_NAME}`\n\t\t\t: `${$WEBUI_NAME}`}\n\t</title>\n</svelte:head>\n\n<audio id=\"audioElement\" src=\"\" style=\"display: none;\" />\n\n<EventConfirmDialog\n\tbind:show={showEventConfirmation}\n\ttitle={eventConfirmationTitle}\n\tmessage={eventConfirmationMessage}\n\tinput={eventConfirmationInput}\n\tinputPlaceholder={eventConfirmationInputPlaceholder}\n\tinputValue={eventConfirmationInputValue}\n\ton:confirm={(e) => {\n\t\tif (e.detail) {\n\t\t\teventCallback(e.detail);\n\t\t} else {\n\t\t\teventCallback(true);\n\t\t}\n\t}}\n\ton:cancel={() => {\n\t\teventCallback(false);\n\t}}\n/>\n\n<div\n\tclass=\"h-screen max-h-[100dvh] transition-width duration-200 ease-in-out {$showSidebar\n\t\t? '  md:max-w-[calc(100%-260px)]'\n\t\t: ' '} w-full max-w-full flex flex-col\"\n\tid=\"chat-container\"\n>\n\t{#if chatIdProp === '' || (!loading && chatIdProp)}\n\t\t{#if $settings?.backgroundImageUrl ?? null}\n\t\t\t<div\n\t\t\t\tclass=\"absolute {$showSidebar\n\t\t\t\t\t? 'md:max-w-[calc(100%-260px)] md:translate-x-[260px]'\n\t\t\t\t\t: ''} top-0 left-0 w-full h-full bg-cover bg-center bg-no-repeat\"\n\t\t\t\tstyle=\"background-image: url({$settings.backgroundImageUrl})  \"\n\t\t\t/>\n\n\t\t\t<div\n\t\t\t\tclass=\"absolute top-0 left-0 w-full h-full bg-linear-to-t from-white to-white/85 dark:from-gray-900 dark:to-gray-900/90 z-0\"\n\t\t\t/>\n\t\t{/if}\n\n\t\t<Navbar\n\t\t\tbind:this={navbarElement}\n\t\t\tchat={{\n\t\t\t\tid: $chatId,\n\t\t\t\tchat: {\n\t\t\t\t\ttitle: $chatTitle,\n\t\t\t\t\tmodels: selectedModels,\n\t\t\t\t\tsystem: $settings.system ?? undefined,\n\t\t\t\t\tparams: params,\n\t\t\t\t\thistory: history,\n\t\t\t\t\ttimestamp: Date.now()\n\t\t\t\t}\n\t\t\t}}\n\t\t\ttitle={$chatTitle}\n\t\t\tbind:selectedModels\n\t\t\tshareEnabled={!!history.currentId}\n\t\t\t{initNewChat}\n\t\t/>\n\n\t\t<PaneGroup direction=\"horizontal\" class=\"w-full h-full\">\n\t\t\t<Pane defaultSize={50} class=\"h-full flex w-full relative\">\n\t\t\t\t{#if $banners.length > 0 && !history.currentId && !$chatId && selectedModels.length <= 1}\n\t\t\t\t\t<div class=\"absolute top-12 left-0 right-0 w-full z-30\">\n\t\t\t\t\t\t<div class=\" flex flex-col gap-1 w-full\">\n\t\t\t\t\t\t\t{#each $banners.filter( (b) => (b.dismissible ? !JSON.parse(localStorage.getItem('dismissedBannerIds') ?? '[]').includes(b.id) : true) ) as banner}\n\t\t\t\t\t\t\t\t<Banner\n\t\t\t\t\t\t\t\t\t{banner}\n\t\t\t\t\t\t\t\t\ton:dismiss={(e) => {\n\t\t\t\t\t\t\t\t\t\tconst bannerId = e.detail;\n\n\t\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\t\t\t\t\t'dismissedBannerIds',\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tbannerId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t...JSON.parse(localStorage.getItem('dismissedBannerIds') ?? '[]')\n\t\t\t\t\t\t\t\t\t\t\t\t].filter((id) => $banners.find((b) => b.id === id))\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t\t<div class=\"flex flex-col flex-auto z-10 w-full @container\">\n\t\t\t\t\t{#if $settings?.landingPageMode === 'chat' || createMessagesList(history, history.currentId).length > 0 || true}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\" pb-2.5 flex flex-col justify-between w-full flex-auto overflow-auto h-0 max-w-full z-10 scrollbar-hidden\"\n\t\t\t\t\t\t\tid=\"messages-container\"\n\t\t\t\t\t\t\tbind:this={messagesContainerElement}\n\t\t\t\t\t\t\ton:scroll={(e) => {\n\t\t\t\t\t\t\t\tautoScroll =\n\t\t\t\t\t\t\t\t\tmessagesContainerElement.scrollHeight - messagesContainerElement.scrollTop <=\n\t\t\t\t\t\t\t\t\tmessagesContainerElement.clientHeight + 5;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\" h-full w-full flex flex-col\">\n\t\t\t\t\t\t\t\t<Messages\n\t\t\t\t\t\t\t\t\tchatId={$chatId}\n\t\t\t\t\t\t\t\t\tbind:history\n\t\t\t\t\t\t\t\t\tbind:autoScroll\n\t\t\t\t\t\t\t\t\tbind:prompt\n\t\t\t\t\t\t\t\t\t{selectedModels}\n\t\t\t\t\t\t\t\t\t{atSelectedModel}\n\t\t\t\t\t\t\t\t\t{sendPrompt}\n\t\t\t\t\t\t\t\t\t{showMessage}\n\t\t\t\t\t\t\t\t\t{submitMessage}\n\t\t\t\t\t\t\t\t\t{continueResponse}\n\t\t\t\t\t\t\t\t\t{regenerateResponse}\n\t\t\t\t\t\t\t\t\t{mergeResponses}\n\t\t\t\t\t\t\t\t\t{chatActionHandler}\n\t\t\t\t\t\t\t\t\t{addMessages}\n\t\t\t\t\t\t\t\t\tbottomPadding={files.length > 0}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\" pb-[1rem]\">\n\t\t\t\t\t\t\t<MessageInput\n\t\t\t\t\t\t\t\t{history}\n\t\t\t\t\t\t\t\t{selectedModels}\n\t\t\t\t\t\t\t\tbind:files\n\t\t\t\t\t\t\t\tbind:prompt\n\t\t\t\t\t\t\t\tbind:autoScroll\n\t\t\t\t\t\t\t\tbind:selectedToolIds\n\t\t\t\t\t\t\t\tbind:imageGenerationEnabled\n\t\t\t\t\t\t\t\tbind:codeInterpreterEnabled\n\t\t\t\t\t\t\t\tbind:webSearchEnabled\n\t\t\t\t\t\t\t\tbind:atSelectedModel\n\t\t\t\t\t\t\t\ttransparentBackground={$settings?.backgroundImageUrl ?? false}\n\t\t\t\t\t\t\t\t{stopResponse}\n\t\t\t\t\t\t\t\t{createMessagePair}\n\t\t\t\t\t\t\t\tonChange={(input) => {\n\t\t\t\t\t\t\t\t\tif (input.prompt) {\n\t\t\t\t\t\t\t\t\t\tlocalStorage.setItem(`chat-input-${$chatId}`, JSON.stringify(input));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlocalStorage.removeItem(`chat-input-${$chatId}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ton:upload={async (e) => {\n\t\t\t\t\t\t\t\t\tconst { type, data } = e.detail;\n\n\t\t\t\t\t\t\t\t\tif (type === 'web') {\n\t\t\t\t\t\t\t\t\t\tawait uploadWeb(data);\n\t\t\t\t\t\t\t\t\t} else if (type === 'youtube') {\n\t\t\t\t\t\t\t\t\t\tawait uploadYoutubeTranscription(data);\n\t\t\t\t\t\t\t\t\t} else if (type === 'google-drive') {\n\t\t\t\t\t\t\t\t\t\tawait uploadGoogleDriveFile(data);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ton:submit={async (e) => {\n\t\t\t\t\t\t\t\t\tif (e.detail || files.length > 0) {\n\t\t\t\t\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\t\t\t\t\tsubmitPrompt(\n\t\t\t\t\t\t\t\t\t\t\t($settings?.richTextInput ?? true)\n\t\t\t\t\t\t\t\t\t\t\t\t? e.detail.replaceAll('\\n\\n', '\\n')\n\t\t\t\t\t\t\t\t\t\t\t\t: e.detail\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"absolute bottom-1 text-xs text-gray-500 text-center line-clamp-1 right-0 left-0\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<!-- {$i18n.t('LLMs can make mistakes. Verify important information.')} -->\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<div class=\"overflow-auto w-full h-full flex items-center\">\n\t\t\t\t\t\t\t<Placeholder\n\t\t\t\t\t\t\t\t{history}\n\t\t\t\t\t\t\t\t{selectedModels}\n\t\t\t\t\t\t\t\tbind:files\n\t\t\t\t\t\t\t\tbind:prompt\n\t\t\t\t\t\t\t\tbind:autoScroll\n\t\t\t\t\t\t\t\tbind:selectedToolIds\n\t\t\t\t\t\t\t\tbind:imageGenerationEnabled\n\t\t\t\t\t\t\t\tbind:codeInterpreterEnabled\n\t\t\t\t\t\t\t\tbind:webSearchEnabled\n\t\t\t\t\t\t\t\tbind:atSelectedModel\n\t\t\t\t\t\t\t\ttransparentBackground={$settings?.backgroundImageUrl ?? false}\n\t\t\t\t\t\t\t\t{stopResponse}\n\t\t\t\t\t\t\t\t{createMessagePair}\n\t\t\t\t\t\t\t\ton:upload={async (e) => {\n\t\t\t\t\t\t\t\t\tconst { type, data } = e.detail;\n\n\t\t\t\t\t\t\t\t\tif (type === 'web') {\n\t\t\t\t\t\t\t\t\t\tawait uploadWeb(data);\n\t\t\t\t\t\t\t\t\t} else if (type === 'youtube') {\n\t\t\t\t\t\t\t\t\t\tawait uploadYoutubeTranscription(data);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ton:submit={async (e) => {\n\t\t\t\t\t\t\t\t\tif (e.detail || files.length > 0) {\n\t\t\t\t\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\t\t\t\t\tsubmitPrompt(\n\t\t\t\t\t\t\t\t\t\t\t($settings?.richTextInput ?? true)\n\t\t\t\t\t\t\t\t\t\t\t\t? e.detail.replaceAll('\\n\\n', '\\n')\n\t\t\t\t\t\t\t\t\t\t\t\t: e.detail\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</Pane>\n\n\t\t\t<ChatControls\n\t\t\t\tbind:this={controlPaneComponent}\n\t\t\t\tbind:history\n\t\t\t\tbind:chatFiles\n\t\t\t\tbind:params\n\t\t\t\tbind:files\n\t\t\t\tbind:pane={controlPane}\n\t\t\t\tchatId={$chatId}\n\t\t\t\tmodelId={selectedModelIds?.at(0) ?? null}\n\t\t\t\tmodels={selectedModelIds.reduce((a, e, i, arr) => {\n\t\t\t\t\tconst model = $models.find((m) => m.id === e);\n\t\t\t\t\tif (model) {\n\t\t\t\t\t\treturn [...a, model];\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}, [])}\n\t\t\t\t{submitPrompt}\n\t\t\t\t{stopResponse}\n\t\t\t\t{showMessage}\n\t\t\t\t{eventTarget}\n\t\t\t/>\n\t\t</PaneGroup>\n\t{:else if loading}\n\t\t<div class=\" flex items-center justify-center h-full w-full\">\n\t\t\t<div class=\"m-auto\">\n\t\t\t\t<Spinner />\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n</div>\n","<script lang=\"ts\">\n\timport { getContext } from 'svelte';\n\timport Modal from '../common/Modal.svelte';\n\n\tconst i18n = getContext('i18n');\n\n\texport let show = false;\n</script>\n\n<Modal bind:show>\n\t<div class=\"text-gray-700 dark:text-gray-100\">\n\t\t<div class=\" flex justify-between dark:text-gray-300 px-5 pt-4\">\n\t\t\t<div class=\" text-lg font-medium self-center\">{$i18n.t('Keyboard shortcuts')}</div>\n\t\t\t<button\n\t\t\t\tclass=\"self-center\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tshow = false;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\tclass=\"w-5 h-5\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div class=\"flex flex-col md:flex-row w-full p-5 md:space-x-4 dark:text-gray-200\">\n\t\t\t<div class=\" flex flex-col w-full sm:flex-row sm:justify-center sm:space-x-6\">\n\t\t\t\t<div class=\"flex flex-col space-y-3 w-full self-start\">\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">{$i18n.t('Open new chat')}</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCtrl/⌘\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShift\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tO\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">{$i18n.t('Focus chat input')}</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShift\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEsc\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">{$i18n.t('Copy last code block')}</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCtrl/⌘\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShift\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">{$i18n.t('Copy last response')}</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCtrl/⌘\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShift\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tC\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">{$i18n.t('Generate prompt pair')}</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCtrl/⌘\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShift\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEnter\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex flex-col space-y-3 w-full self-start\">\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">{$i18n.t('Toggle settings')}</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCtrl/⌘\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">{$i18n.t('Toggle sidebar')}</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCtrl/⌘\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShift\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tS\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">{$i18n.t('Delete chat')}</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCtrl/⌘\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShift\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t⌫/Delete\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">{$i18n.t('Show shortcuts')}</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCtrl/⌘\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t/\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\" flex justify-between dark:text-gray-300 px-5\">\n\t\t\t<div class=\" text-lg font-medium self-center\">{$i18n.t('Input commands')}</div>\n\t\t</div>\n\n\t\t<div class=\"flex flex-col md:flex-row w-full p-5 md:space-x-4 dark:text-gray-200\">\n\t\t\t<div class=\" flex flex-col w-full sm:flex-row sm:justify-center sm:space-x-6\">\n\t\t\t\t<div class=\"flex flex-col space-y-3 w-full self-start\">\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">\n\t\t\t\t\t\t\t{$i18n.t('Attach file from knowledge')}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t#\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">\n\t\t\t\t\t\t\t{$i18n.t('Add custom prompt')}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t/\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">\n\t\t\t\t\t\t\t{$i18n.t('Talk to model')}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t@\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\" text-sm\">\n\t\t\t\t\t\t\t{$i18n.t('Accept autocomplete generation / Jump to prompt variable')}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex space-x-1 text-xs\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" h-fit py-1 px-2 flex items-center justify-center rounded-sm border border-black/10 capitalize text-gray-600 dark:border-white/10 dark:text-gray-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tTAB\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</Modal>\n\n<style>\n\tinput::-webkit-outer-spin-button,\n\tinput::-webkit-inner-spin-button {\n\t\t/* display: none; <- Crashes Chrome on hover */\n\t\t-webkit-appearance: none;\n\t\tmargin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n\t}\n\n\t.tabs::-webkit-scrollbar {\n\t\tdisplay: none; /* for Chrome, Safari and Opera */\n\t}\n\n\t.tabs {\n\t\t-ms-overflow-style: none; /* IE and Edge */\n\t\tscrollbar-width: none; /* Firefox */\n\t}\n\n\tinput[type='number'] {\n\t\t-moz-appearance: textfield; /* Firefox */\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let className = 'w-4 h-4';\n\texport let strokeWidth = '2';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tfill=\"none\"\n\tviewBox=\"0 0 24 24\"\n\tstroke-width={strokeWidth}\n\tstroke=\"currentColor\"\n\tclass={className}\n>\n\t<path\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t\td=\"M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\texport let className = 'size-4';\n\texport let strokeWidth = '2';\n</script>\n\n<svg\n\taria-hidden=\"true\"\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tfill=\"currentColor\"\n\tviewBox=\"0 0 24 24\"\n\tstroke-width={strokeWidth}\n\tclass={className}\n>\n\t<path\n\t\tfill-rule=\"evenodd\"\n\t\td=\"M2 7a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V7Zm5.01 1H5v2.01h2.01V8Zm3 0H8v2.01h2.01V8Zm3 0H11v2.01h2.01V8Zm3 0H14v2.01h2.01V8Zm3 0H17v2.01h2.01V8Zm-12 3H5v2.01h2.01V11Zm3 0H8v2.01h2.01V11Zm3 0H11v2.01h2.01V11Zm3 0H14v2.01h2.01V11Zm3 0H17v2.01h2.01V11Zm-12 3H5v2.01h2.01V14ZM8 14l-.001 2 8.011.01V14H8Zm11.01 0H17v2.01h2.01V14Z\"\n\t\tclip-rule=\"evenodd\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\timport { DropdownMenu } from 'bits-ui';\n\timport { getContext } from 'svelte';\n\n\timport { showSettings } from '$lib/stores';\n\timport { flyAndScale } from '$lib/utils/transitions';\n\n\timport Dropdown from '$lib/components/common/Dropdown.svelte';\n\timport QuestionMarkCircle from '$lib/components/icons/QuestionMarkCircle.svelte';\n\timport Lifebuoy from '$lib/components/icons/Lifebuoy.svelte';\n\timport Keyboard from '$lib/components/icons/Keyboard.svelte';\n\tconst i18n = getContext('i18n');\n\n\texport let showDocsHandler: Function;\n\texport let showShortcutsHandler: Function;\n\n\texport let onClose: Function = () => {};\n</script>\n\n<Dropdown\n\ton:change={(e) => {\n\t\tif (e.detail === false) {\n\t\t\tonClose();\n\t\t}\n\t}}\n>\n\t<slot />\n\n\t<div slot=\"content\">\n\t\t<DropdownMenu.Content\n\t\t\tclass=\"w-full max-w-[200px] rounded-xl px-1 py-1.5 border border-gray-300/30 dark:border-gray-700/50 z-50 bg-white dark:bg-gray-850 dark:text-white shadow-lg\"\n\t\t\tsideOffset={4}\n\t\t\tside=\"top\"\n\t\t\talign=\"end\"\n\t\t\ttransition={flyAndScale}\n\t\t>\n\t\t\t<DropdownMenu.Item\n\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\tid=\"chat-share-button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\twindow.open('https://docs.openwebui.com', '_blank');\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<QuestionMarkCircle className=\"size-5\" />\n\t\t\t\t<div class=\"flex items-center\">{$i18n.t('Documentation')}</div>\n\t\t\t</DropdownMenu.Item>\n\n\t\t\t<DropdownMenu.Item\n\t\t\t\tclass=\"flex gap-2 items-center px-3 py-2 text-sm  cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md\"\n\t\t\t\tid=\"chat-share-button\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tshowShortcutsHandler();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Keyboard className=\"size-5\" />\n\t\t\t\t<div class=\"flex items-center\">{$i18n.t('Keyboard shortcuts')}</div>\n\t\t\t</DropdownMenu.Item>\n\t\t</DropdownMenu.Content>\n\t</div>\n</Dropdown>\n","<script lang=\"ts\">\n\timport { onMount, tick, getContext } from 'svelte';\n\n\tconst i18n = getContext('i18n');\n\n\timport ShortcutsModal from '../chat/ShortcutsModal.svelte';\n\timport Tooltip from '../common/Tooltip.svelte';\n\timport HelpMenu from './Help/HelpMenu.svelte';\n\n\tlet showShortcuts = false;\n</script>\n\n<div class=\" hidden lg:flex fixed bottom-0 right-0 px-1 py-1 z-20\">\n\t<button\n\t\tid=\"show-shortcuts-button\"\n\t\tclass=\"hidden\"\n\t\ton:click={() => {\n\t\t\tshowShortcuts = !showShortcuts;\n\t\t}}\n\t/>\n\n\t<HelpMenu\n\t\tshowDocsHandler={() => {\n\t\t\tshowShortcuts = !showShortcuts;\n\t\t}}\n\t\tshowShortcutsHandler={() => {\n\t\t\tshowShortcuts = !showShortcuts;\n\t\t}}\n\t>\n\t\t<Tooltip content={$i18n.t('Help')} placement=\"left\">\n\t\t\t<button\n\t\t\t\tclass=\"text-gray-600 dark:text-gray-300 bg-gray-300/20 size-4 flex items-center justify-center text-[0.7rem] rounded-full\"\n\t\t\t>\n\t\t\t\t?\n\t\t\t</button>\n\t\t</Tooltip>\n\t</HelpMenu>\n</div>\n\n<ShortcutsModal bind:show={showShortcuts} />\n"],"names":["chatId","tags","res","uuidv4","inputFiles","Tags","addEdge","panBy","get","subscribe","fitView","visibleEdges","edges","addEdgeUtil","updateNodeInternals","updateNodeInternalsSystem","fitViewSystem","nodes","panBySystem","BackgroundVariant","node","viewport","getToolUserValvesById","getToolUserValvesSpecById","models","emoji","CustomNode","allTags","m","files","token","prompt","history","EventConfirmDialog"],"mappings":"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","x_google_ignoreList":[0,1,2,8,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67]}