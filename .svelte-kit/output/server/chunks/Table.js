import { c as create_ssr_component, p as getContext, b as subscribe, l as createEventDispatcher, g as escape, w as null_to_empty, a as add_attribute, e as each } from "./ssr.js";
const css = {
  code: "div.svelte-19dvbdj{box-shadow:0 1px 3px rgba(0, 0, 0, 0.05)}table.svelte-19dvbdj{border-collapse:separate;border-spacing:0;margin-left:0;text-align:left;width:auto;max-width:fit-content}th.svelte-19dvbdj,td.svelte-19dvbdj{white-space:nowrap;width:auto}tr.svelte-19dvbdj{transition:background-color 0.15s ease-in-out}.fixed.svelte-19dvbdj{animation:svelte-19dvbdj-fadeIn 0.2s ease-out}@keyframes svelte-19dvbdj-fadeIn{from{opacity:0}to{opacity:1}}",
  map: `{"version":3,"file":"Table.svelte","sources":["Table.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { getContext } from \\"svelte\\";\\nconst i18n = getContext(\\"i18n\\");\\nexport let data = [];\\nexport let columns = [];\\nexport let className = \\"\\";\\nexport let maxPreviewRows = 12;\\nexport let showFullPreview = false;\\nimport { createEventDispatcher } from \\"svelte\\";\\nconst dispatch = createEventDispatcher();\\nlet showAllRows = false;\\nlet showModal = false;\\nfunction formatNumber(value) {\\n  if (typeof value === \\"number\\") {\\n    return new Intl.NumberFormat(\\"en-US\\", {\\n      minimumFractionDigits: value % 1 === 0 ? 0 : 2,\\n      maximumFractionDigits: 2\\n    }).format(value);\\n  }\\n  return value;\\n}\\nfunction isNumeric(value) {\\n  return typeof value === \\"number\\" || typeof value === \\"string\\" && !isNaN(parseFloat(value));\\n}\\nfunction downloadCSV() {\\n  if (!data || !columns || data.length === 0) return;\\n  const csvHeader = columns.map((col) => \`\\"\${col}\\"\`).join(\\",\\");\\n  const csvRows = data.map((row) => {\\n    return columns.map((col) => {\\n      const value = row[col];\\n      if (value === null || value === void 0) return '\\"\\"';\\n      if (typeof value === \\"string\\") return \`\\"\${value.replace(/\\"/g, '\\"\\"')}\\"\`;\\n      return \`\\"\${value}\\"\`;\\n    }).join(\\",\\");\\n  });\\n  const csvString = [csvHeader, ...csvRows].join(\\"\\\\n\\");\\n  const blob = new Blob([csvString], { type: \\"text/csv;charset=utf-8;\\" });\\n  const url = URL.createObjectURL(blob);\\n  const link = document.createElement(\\"a\\");\\n  link.setAttribute(\\"href\\", url);\\n  link.setAttribute(\\"download\\", \\"table-data.csv\\");\\n  link.style.visibility = \\"hidden\\";\\n  document.body.appendChild(link);\\n  link.click();\\n  document.body.removeChild(link);\\n}\\nfunction toggleFullPreview() {\\n  if (showFullPreview) {\\n    dispatch(\\"fullPreview\\");\\n  } else {\\n    showModal = true;\\n  }\\n}\\n$: needsTruncation = data.length > maxPreviewRows;\\n$: displayData = needsTruncation && !showAllRows ? data.slice(0, maxPreviewRows) : data;\\n<\/script>\\n\\n<!-- Full preview modal -->\\n{#if showModal}\\n  <div class=\\"fixed inset-0 z-[100] flex items-center justify-center px-4 bg-black/50\\" on:click|self={() => showModal = false}>\\n    <div class=\\"bg-white dark:bg-gray-800 rounded-lg shadow-lg w-full max-w-4xl max-h-[90vh] flex flex-col\\">\\n      <!-- Modal header -->\\n      <div class=\\"flex justify-between items-center p-4 border-b dark:border-gray-700\\">\\n        <h3 class=\\"text-lg font-medium text-gray-800 dark:text-gray-200\\">{$i18n.t('Full Data Table')}</h3>\\n        <button \\n          class=\\"p-1.5 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700\\"\\n          title={$i18n.t('View full table')}\\n          on:click={() => showModal = false}\\n        >\\n          <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"h-5 w-5\\" viewBox=\\"0 0 20 20\\" fill=\\"currentColor\\">\\n            <path fill-rule=\\"evenodd\\" d=\\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\\" clip-rule=\\"evenodd\\" />\\n          </svg>\\n        </button>\\n      </div>\\n      \\n      <!-- Modal body with scrollable table -->\\n      <div class=\\"overflow-auto p-1 flex-grow\\">\\n        <table class=\\"min-w-full divide-y divide-gray-200 dark:divide-gray-700 text-sm\\">\\n          <thead class=\\"bg-gray-100 dark:bg-gray-800 sticky top-0 z-10\\">\\n            <tr>\\n              {#each columns as column}\\n                <th \\n                  scope=\\"col\\" \\n                  class=\\"px-4 py-3 text-left font-medium text-gray-600 dark:text-gray-300 uppercase tracking-wider {isNumeric(data[0]?.[column]) ? 'text-right' : 'text-left'}\\"\\n                >\\n                  {column}\\n                </th>\\n              {/each}\\n            </tr>\\n          </thead>\\n          <tbody class=\\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-800\\">\\n            {#each data as row, rowIndex}\\n              <tr class=\\"hover:bg-gray-50 dark:hover:bg-gray-800/50 {rowIndex % 2 === 0 ? '' : 'bg-gray-50 dark:bg-gray-800/20'}\\">\\n                {#each columns as column}\\n                  <td class=\\"px-4 py-3 {isNumeric(row[column]) ? 'text-right' : 'text-left'} whitespace-nowrap\\">\\n                    {isNumeric(row[column]) ? formatNumber(row[column]) : row[column]}\\n                  </td>\\n                {/each}\\n              </tr>\\n            {/each}\\n          </tbody>\\n        </table>\\n      </div>\\n      \\n      <!-- Modal footer with download button -->\\n      <div class=\\"p-4 border-t dark:border-gray-700 flex justify-end\\">\\n        <button \\n          class=\\"px-4 py-2 bg-gray-200 dark:bg-gray-700 rounded-md hover:bg-gray-300 dark:hover:bg-gray-600 flex items-center gap-2 text-sm\\"\\n          on:click={downloadCSV}\\n        >\\n          <svg xmlns=\\"http://www.w3.org/2000/svg\\" fill=\\"none\\" viewBox=\\"0 0 24 24\\" stroke-width=\\"1.5\\" stroke=\\"currentColor\\" class=\\"w-4 h-4\\">\\n            <path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" d=\\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3\\" />\\n          </svg>\\n          {$i18n.t('Download CSV')}\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n{/if}\\n\\n<div class={\`inline-block rounded-lg border border-gray-200 dark:border-gray-700 \${className}\`} style=\\"text-align: left;\\">\\n  <div class=\\"relative\\">\\n    <!-- Table toolbar -->\\n    <div class=\\"absolute top-2 right-2 flex gap-2 z-10\\">\\n      <button \\n        class=\\"p-1.5 bg-gray-100 dark:bg-gray-700 rounded shadow-sm hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\\"\\n        title={$i18n.t('View full table')}\\n        on:click={toggleFullPreview}\\n      >\\n        <svg xmlns=\\"http://www.w3.org/2000/svg\\" fill=\\"none\\" viewBox=\\"0 0 24 24\\" stroke-width=\\"1.5\\" stroke=\\"currentColor\\" class=\\"w-4 h-4\\">\\n          <path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" d=\\"M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15\\" />\\n        </svg>\\n      </button>\\n      \\n      <button \\n        class=\\"p-1.5 bg-gray-100 dark:bg-gray-700 rounded shadow-sm hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\\"\\n        title={$i18n.t('Download as CSV')}\\n        on:click={downloadCSV}\\n      >\\n        <svg xmlns=\\"http://www.w3.org/2000/svg\\" fill=\\"none\\" viewBox=\\"0 0 24 24\\" stroke-width=\\"1.5\\" stroke=\\"currentColor\\" class=\\"w-4 h-4\\">\\n          <path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" d=\\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3\\" />\\n        </svg>\\n      </button>\\n    </div>\\n    \\n    <table class=\\"divide-y divide-gray-200 dark:divide-gray-700 text-sm table-auto\\">\\n      <thead class=\\"bg-gray-100 dark:bg-gray-800\\">\\n        <tr>\\n          {#each columns as column}\\n            <th \\n              scope=\\"col\\" \\n              class=\\"px-4 py-3 text-left font-medium text-gray-600 dark:text-gray-300 uppercase tracking-wider {isNumeric(data[0]?.[column]) ? 'text-right' : 'text-left'}\\"\\n            >\\n              {column}\\n            </th>\\n          {/each}\\n        </tr>\\n      </thead>\\n      <tbody class=\\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-800\\">\\n        {#each displayData as row, rowIndex}\\n          <tr class=\\"hover:bg-gray-50 dark:hover:bg-gray-800/50 {rowIndex % 2 === 0 ? '' : 'bg-gray-50 dark:bg-gray-800/20'}\\">\\n            {#each columns as column}\\n              <td class=\\"px-4 py-3 {isNumeric(row[column]) ? 'text-right' : 'text-left'} whitespace-nowrap\\">\\n                {isNumeric(row[column]) ? formatNumber(row[column]) : row[column]}\\n              </td>\\n            {/each}\\n          </tr>\\n        {/each}\\n      </tbody>\\n    </table>\\n    \\n    {#if needsTruncation && !showAllRows}\\n      <div class=\\"w-full flex justify-center py-2 border-t border-gray-200 dark:border-gray-700\\">\\n        <button \\n          class=\\"text-sm text-blue-600 dark:text-blue-400 hover:underline flex items-center gap-1\\"\\n          on:click={() => showAllRows = true}\\n        >\\n          <svg xmlns=\\"http://www.w3.org/2000/svg\\" fill=\\"none\\" viewBox=\\"0 0 24 24\\" stroke-width=\\"1.5\\" stroke=\\"currentColor\\" class=\\"w-4 h-4\\">\\n            <path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" d=\\"M9 12.75l3 3m0 0l3-3m-3 3v-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\" />\\n          </svg>\\n          {$i18n.t('Show all {{count}} rows', { count: data.length })}\\n        </button>\\n      </div>\\n    {/if}\\n  </div>\\n</div>\\n\\n<style>\\n  /* Add subtle box shadow for depth */\\n  div {\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\\n  }\\n  \\n  /* Ensure table takes appropriate width based on content */\\n  table {\\n    border-collapse: separate;\\n    border-spacing: 0;\\n    margin-left: 0;\\n    text-align: left;\\n    width: auto;\\n    max-width: fit-content;\\n  }\\n  \\n  /* Column styling for content-based width */\\n  th, td {\\n    white-space: nowrap;\\n    width: auto;\\n  }\\n  \\n  /* Add transition for smoother hover effects */\\n  tr {\\n    transition: background-color 0.15s ease-in-out;\\n  }\\n  \\n  /* Modal animation */\\n  .fixed {\\n    animation: fadeIn 0.2s ease-out;\\n  }\\n  \\n  @keyframes fadeIn {\\n    from { opacity: 0; }\\n    to { opacity: 1; }\\n  }\\n</style> "],"names":[],"mappings":"AA4LE,kBAAI,CACF,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAC1C,CAGA,oBAAM,CACJ,eAAe,CAAE,QAAQ,CACzB,cAAc,CAAE,CAAC,CACjB,WAAW,CAAE,CAAC,CACd,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,WACb,CAGA,iBAAE,CAAE,iBAAG,CACL,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IACT,CAGA,iBAAG,CACD,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,WACrC,CAGA,qBAAO,CACL,SAAS,CAAE,qBAAM,CAAC,IAAI,CAAC,QACzB,CAEA,WAAW,qBAAO,CAChB,IAAK,CAAE,OAAO,CAAE,CAAG,CACnB,EAAG,CAAE,OAAO,CAAE,CAAG,CACnB"}`
};
function formatNumber(value) {
  if (typeof value === "number") {
    return new Intl.NumberFormat(
      "en-US",
      {
        minimumFractionDigits: value % 1 === 0 ? 0 : 2,
        maximumFractionDigits: 2
      }
    ).format(value);
  }
  return value;
}
function isNumeric(value) {
  return typeof value === "number" || typeof value === "string" && !isNaN(parseFloat(value));
}
const Table = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let needsTruncation;
  let displayData;
  let $i18n, $$unsubscribe_i18n;
  const i18n = getContext("i18n");
  $$unsubscribe_i18n = subscribe(i18n, (value) => $i18n = value);
  let { data = [] } = $$props;
  let { columns = [] } = $$props;
  let { className = "" } = $$props;
  let { maxPreviewRows = 12 } = $$props;
  let { showFullPreview = false } = $$props;
  createEventDispatcher();
  let showAllRows = false;
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  if ($$props.columns === void 0 && $$bindings.columns && columns !== void 0) $$bindings.columns(columns);
  if ($$props.className === void 0 && $$bindings.className && className !== void 0) $$bindings.className(className);
  if ($$props.maxPreviewRows === void 0 && $$bindings.maxPreviewRows && maxPreviewRows !== void 0) $$bindings.maxPreviewRows(maxPreviewRows);
  if ($$props.showFullPreview === void 0 && $$bindings.showFullPreview && showFullPreview !== void 0) $$bindings.showFullPreview(showFullPreview);
  $$result.css.add(css);
  needsTruncation = data.length > maxPreviewRows;
  displayData = needsTruncation && !showAllRows ? data.slice(0, maxPreviewRows) : data;
  $$unsubscribe_i18n();
  return ` ${``} <div class="${escape(null_to_empty(`inline-block rounded-lg border border-gray-200 dark:border-gray-700 ${className}`), true) + " svelte-19dvbdj"}" style="text-align: left;"><div class="relative svelte-19dvbdj"> <div class="absolute top-2 right-2 flex gap-2 z-10 svelte-19dvbdj"><button class="p-1.5 bg-gray-100 dark:bg-gray-700 rounded shadow-sm hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors"${add_attribute("title", $i18n.t("View full table"), 0)}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15"></path></svg></button> <button class="p-1.5 bg-gray-100 dark:bg-gray-700 rounded shadow-sm hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors"${add_attribute("title", $i18n.t("Download as CSV"), 0)}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4"><path stroke-linecap="round" stroke-linejoin="round" d="M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3"></path></svg></button></div> <table class="divide-y divide-gray-200 dark:divide-gray-700 text-sm table-auto svelte-19dvbdj"><thead class="bg-gray-100 dark:bg-gray-800"><tr class="svelte-19dvbdj">${each(columns, (column) => {
    return `<th scope="col" class="${"px-4 py-3 text-left font-medium text-gray-600 dark:text-gray-300 uppercase tracking-wider " + escape(
      isNumeric(data[0]?.[column]) ? "text-right" : "text-left",
      true
    ) + " svelte-19dvbdj"}">${escape(column)} </th>`;
  })}</tr></thead> <tbody class="bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-800">${each(displayData, (row, rowIndex) => {
    return `<tr class="${"hover:bg-gray-50 dark:hover:bg-gray-800/50 " + escape(
      rowIndex % 2 === 0 ? "" : "bg-gray-50 dark:bg-gray-800/20",
      true
    ) + " svelte-19dvbdj"}">${each(columns, (column) => {
      return `<td class="${"px-4 py-3 " + escape(isNumeric(row[column]) ? "text-right" : "text-left", true) + " whitespace-nowrap svelte-19dvbdj"}">${escape(isNumeric(row[column]) ? formatNumber(row[column]) : row[column])} </td>`;
    })} </tr>`;
  })}</tbody></table> ${needsTruncation && !showAllRows ? `<div class="w-full flex justify-center py-2 border-t border-gray-200 dark:border-gray-700 svelte-19dvbdj"><button class="text-sm text-blue-600 dark:text-blue-400 hover:underline flex items-center gap-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75l3 3m0 0l3-3m-3 3v-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg> ${escape($i18n.t("Show all {{count}} rows", { count: data.length }))}</button></div>` : ``}</div> </div>`;
});
export {
  Table as T
};
//# sourceMappingURL=Table.js.map
