{"version":3,"file":"Table.js","sources":["../../../../src/lib/components/common/Table.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { getContext } from 'svelte';\n  const i18n: any = getContext('i18n');\n  export let data: any[] = [];\n  export let columns: string[] = [];\n  export let className = \"\";\n  export let maxPreviewRows = 12;\n  export let showFullPreview = false;\n  \n  import { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n  \n  let showAllRows = false;\n  let showModal = false;\n\n  // Format number with commas for thousand separators\n  function formatNumber(value: any) {\n    if (typeof value === 'number') {\n      return new Intl.NumberFormat('en-US', { \n        minimumFractionDigits: value % 1 === 0 ? 0 : 2,\n        maximumFractionDigits: 2 \n      }).format(value);\n    }\n    return value;\n  }\n\n  // Determine if a value is numeric for alignment purposes\n  function isNumeric(value: any) {\n    return typeof value === 'number' || (typeof value === 'string' && !isNaN(parseFloat(value)));\n  }\n  \n  // Convert data to CSV and trigger download\n  function downloadCSV() {\n    if (!data || !columns || data.length === 0) return;\n    \n    // Create CSV header row\n    const csvHeader = columns.map(col => `\"${col}\"`).join(',');\n    \n    // Create CSV data rows\n    const csvRows = data.map(row => {\n      return columns.map(col => {\n        const value = row[col];\n        // Properly format and escape values\n        if (value === null || value === undefined) return '\"\"';\n        if (typeof value === 'string') return `\"${value.replace(/\"/g, '\"\"')}\"`;\n        return `\"${value}\"`;\n      }).join(',');\n    });\n    \n    // Combine header and rows\n    const csvString = [csvHeader, ...csvRows].join('\\n');\n    \n    // Create a blob and download\n    const blob = new Blob([csvString], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', 'table-data.csv');\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n  \n  // Toggle modal for full view\n  function toggleFullPreview() {\n    if (showFullPreview) {\n      dispatch('fullPreview');\n    } else {\n      showModal = true;\n    }\n  }\n  \n  // Calculate if we need to show truncated view\n  $: needsTruncation = data.length > maxPreviewRows;\n  $: displayData = needsTruncation && !showAllRows ? data.slice(0, maxPreviewRows) : data;\n</script>\n\n<!-- Full preview modal -->\n{#if showModal}\n  <div class=\"fixed inset-0 z-[100] flex items-center justify-center px-4 bg-black/50\" on:click|self={() => showModal = false}>\n    <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg w-full max-w-4xl max-h-[90vh] flex flex-col\">\n      <!-- Modal header -->\n      <div class=\"flex justify-between items-center p-4 border-b dark:border-gray-700\">\n        <h3 class=\"text-lg font-medium text-gray-800 dark:text-gray-200\">{$i18n.t('Full Data Table')}</h3>\n        <button \n          class=\"p-1.5 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700\"\n          title={$i18n.t('View full table')}\n          on:click={() => showModal = false}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n          </svg>\n        </button>\n      </div>\n      \n      <!-- Modal body with scrollable table -->\n      <div class=\"overflow-auto p-1 flex-grow\">\n        <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700 text-sm\">\n          <thead class=\"bg-gray-100 dark:bg-gray-800 sticky top-0 z-10\">\n            <tr>\n              {#each columns as column}\n                <th \n                  scope=\"col\" \n                  class=\"px-4 py-3 text-left font-medium text-gray-600 dark:text-gray-300 uppercase tracking-wider {isNumeric(data[0]?.[column]) ? 'text-right' : 'text-left'}\"\n                >\n                  {column}\n                </th>\n              {/each}\n            </tr>\n          </thead>\n          <tbody class=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-800\">\n            {#each data as row, rowIndex}\n              <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800/50 {rowIndex % 2 === 0 ? '' : 'bg-gray-50 dark:bg-gray-800/20'}\">\n                {#each columns as column}\n                  <td class=\"px-4 py-3 {isNumeric(row[column]) ? 'text-right' : 'text-left'} whitespace-nowrap\">\n                    {isNumeric(row[column]) ? formatNumber(row[column]) : row[column]}\n                  </td>\n                {/each}\n              </tr>\n            {/each}\n          </tbody>\n        </table>\n      </div>\n      \n      <!-- Modal footer with download button -->\n      <div class=\"p-4 border-t dark:border-gray-700 flex justify-end\">\n        <button \n          class=\"px-4 py-2 bg-gray-200 dark:bg-gray-700 rounded-md hover:bg-gray-300 dark:hover:bg-gray-600 flex items-center gap-2 text-sm\"\n          on:click={downloadCSV}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3\" />\n          </svg>\n          {$i18n.t('Download CSV')}\n        </button>\n      </div>\n    </div>\n  </div>\n{/if}\n\n<div class={`inline-block rounded-lg border border-gray-200 dark:border-gray-700 ${className}`} style=\"text-align: left;\">\n  <div class=\"relative\">\n    <!-- Table toolbar -->\n    <div class=\"absolute top-2 right-2 flex gap-2 z-10\">\n      <button \n        class=\"p-1.5 bg-gray-100 dark:bg-gray-700 rounded shadow-sm hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n        title={$i18n.t('View full table')}\n        on:click={toggleFullPreview}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15\" />\n        </svg>\n      </button>\n      \n      <button \n        class=\"p-1.5 bg-gray-100 dark:bg-gray-700 rounded shadow-sm hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n        title={$i18n.t('Download as CSV')}\n        on:click={downloadCSV}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3\" />\n        </svg>\n      </button>\n    </div>\n    \n    <table class=\"divide-y divide-gray-200 dark:divide-gray-700 text-sm table-auto\">\n      <thead class=\"bg-gray-100 dark:bg-gray-800\">\n        <tr>\n          {#each columns as column}\n            <th \n              scope=\"col\" \n              class=\"px-4 py-3 text-left font-medium text-gray-600 dark:text-gray-300 uppercase tracking-wider {isNumeric(data[0]?.[column]) ? 'text-right' : 'text-left'}\"\n            >\n              {column}\n            </th>\n          {/each}\n        </tr>\n      </thead>\n      <tbody class=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-800\">\n        {#each displayData as row, rowIndex}\n          <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800/50 {rowIndex % 2 === 0 ? '' : 'bg-gray-50 dark:bg-gray-800/20'}\">\n            {#each columns as column}\n              <td class=\"px-4 py-3 {isNumeric(row[column]) ? 'text-right' : 'text-left'} whitespace-nowrap\">\n                {isNumeric(row[column]) ? formatNumber(row[column]) : row[column]}\n              </td>\n            {/each}\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n    \n    {#if needsTruncation && !showAllRows}\n      <div class=\"w-full flex justify-center py-2 border-t border-gray-200 dark:border-gray-700\">\n        <button \n          class=\"text-sm text-blue-600 dark:text-blue-400 hover:underline flex items-center gap-1\"\n          on:click={() => showAllRows = true}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 12.75l3 3m0 0l3-3m-3 3v-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n          {$i18n.t('Show all {{count}} rows', { count: data.length })}\n        </button>\n      </div>\n    {/if}\n  </div>\n</div>\n\n<style>\n  /* Add subtle box shadow for depth */\n  div {\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  }\n  \n  /* Ensure table takes appropriate width based on content */\n  table {\n    border-collapse: separate;\n    border-spacing: 0;\n    margin-left: 0;\n    text-align: left;\n    width: auto;\n    max-width: fit-content;\n  }\n  \n  /* Column styling for content-based width */\n  th, td {\n    white-space: nowrap;\n    width: auto;\n  }\n  \n  /* Add transition for smoother hover effects */\n  tr {\n    transition: background-color 0.15s ease-in-out;\n  }\n  \n  /* Modal animation */\n  .fixed {\n    animation: fadeIn 0.2s ease-out;\n  }\n  \n  @keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n  }\n</style> "],"names":[],"mappings":";;;;;SAgBW,aAAa,OAAA;aACT,UAAU,UAAA;AACR,WAAA,IAAA,KAAK;AAAA,MAAa;AAAA;QAC3B,uBAAuB,QAAQ,MAAM,IAAI,IAAI;AAAA,QAC7C,uBAAuB;AAAA,MACtB;AAAA,IAAA,EAAA,OAAO,KAAK;AAAA;AAEV,SAAA;;SAIA,UAAU,OAAA;AACH,SAAA,OAAA,UAAU,YAAoB,OAAA,UAAU,YAAa,CAAA,MAAM,WAAW,KAAK,CAAA;;;;;;AA1BrF,QAAA,OAAY,WAAW,MAAM;;AACxB,MAAA,EAAA,OAAA,CAAA,EAAA,IAAA;AACA,MAAA,EAAA,UAAA,CAAA,EAAA,IAAA;QACA,YAAY,GAAA,IAAA;QACZ,iBAAiB,GAAA,IAAA;QACjB,kBAAkB,MAAA,IAAA;AAGZ,wBAAA;;;;;;;AAgEd,oBAAkB,KAAK,SAAS;AAChC,gBAAc,mBAAoB,OAAc,KAAK,MAAM,GAAG,cAAc,IAAI;;aAkEF,EAAA,gBAAA,OAAA,cAAA,uEAAA,SAAS,EAM7E,GAAA,IAAA,IAAA,iBAAA,uQAAA,cAAA,SAAA,MAAM,EAAE,iBAAiB,GAUzB,CAAA,CAAA,0eAAA,cAAA,SAAA,MAAM,EAAE,iBAAiB,wfAYvB,SAAO,YAAA;;MAGwF,UAAU,KAAK,CAAC,IAAI,MAAM,CAAA,IAAK,eAAe;AAAA;qCAE/I,MAAM,CAAA;AAAA,iHAMN,aAAW,CAAA,KAAA,aAAA;;MACuC,WAAW,MAAM,IAAI,KAAK;AAAA;mCACxE,SAAO,YAAA;AACU,aAAA,cAAA,eAAA,OAAA,UAAU,IAAI,MAAM,CAAK,IAAA,eAAe,aAC3D,IAAA,IAAA,mCAAA,KAAA,OAAA,UAAU,IAAI,MAAM,CAAA,IAAK,aAAa,IAAI,MAAM,CAAA,IAAK,IAAI,MAAM,CAAA,CAAA;AAAA;EAQvE,CAAA,CAAA,oBAAA,wfASE,MAAM,EAAE,6BAA6B,OAAO,KAAK,OAAM,CAAA,CAAA,CAAA;;"}