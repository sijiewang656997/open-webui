{"version":3,"file":"index4.js","sources":["../../../../src/lib/i18n/index.ts"],"sourcesContent":["import i18next from 'i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport type { i18n as i18nType } from 'i18next';\nimport { writable } from 'svelte/store';\n\nconst createI18nStore = (i18n: i18nType) => {\n\tconst i18nWritable = writable(i18n);\n\n\ti18n.on('initialized', () => {\n\t\ti18nWritable.set(i18n);\n\t});\n\ti18n.on('loaded', () => {\n\t\ti18nWritable.set(i18n);\n\t});\n\ti18n.on('added', () => i18nWritable.set(i18n));\n\ti18n.on('languageChanged', () => {\n\t\ti18nWritable.set(i18n);\n\t});\n\treturn i18nWritable;\n};\n\nconst createIsLoadingStore = (i18n: i18nType) => {\n\tconst isLoading = writable(false);\n\n\t// if loaded resources are empty || {}, set loading to true\n\ti18n.on('loaded', (resources) => {\n\t\t// console.log('loaded:', resources);\n\t\tObject.keys(resources).length !== 0 && isLoading.set(false);\n\t});\n\n\t// if resources failed loading, set loading to true\n\ti18n.on('failedLoading', () => {\n\t\tisLoading.set(true);\n\t});\n\n\treturn isLoading;\n};\n\nexport const initI18n = (defaultLocale: string | undefined) => {\n\tlet detectionOrder = defaultLocale\n\t\t? ['querystring', 'localStorage']\n\t\t: ['querystring', 'localStorage', 'navigator'];\n\tlet fallbackDefaultLocale = defaultLocale ? [defaultLocale] : ['en-US'];\n\n\tconst loadResource = (language: string, namespace: string) =>\n\t\timport(`./locales/${language}/${namespace}.json`);\n\n\ti18next\n\t\t.use(resourcesToBackend(loadResource))\n\t\t.use(LanguageDetector)\n\t\t.init({\n\t\t\tdebug: false,\n\t\t\tdetection: {\n\t\t\t\torder: detectionOrder,\n\t\t\t\tcaches: ['localStorage'],\n\t\t\t\tlookupQuerystring: 'lang',\n\t\t\t\tlookupLocalStorage: 'locale'\n\t\t\t},\n\t\t\tfallbackLng: {\n\t\t\t\tdefault: fallbackDefaultLocale\n\t\t\t},\n\t\t\tns: 'translation',\n\t\t\treturnEmptyString: false,\n\t\t\tinterpolation: {\n\t\t\t\tescapeValue: false // not needed for svelte as it escapes by default\n\t\t\t}\n\t\t});\n\n\ti18next.changeLanguage('en-US');\n\tconsole.log('Current locale:', localStorage.getItem('locale'));\n};\n\nconst i18n = createI18nStore(i18next);\nconst isLoadingStore = createIsLoadingStore(i18next);\n\nexport const getLanguages = async () => {\n\tconst languages = (await import(`./locales/languages.json`)).default;\n\treturn languages;\n};\nexport default i18n;\nexport const isLoading = isLoadingStore;\n"],"names":["i18n","isLoading"],"mappings":";;;;AAMA,MAAM,kBAAkB,CAACA,UAAmB;AACrC,QAAA,eAAe,SAASA,KAAI;AAElCA,QAAK,GAAG,eAAe,MAAM;AAC5B,iBAAa,IAAIA,KAAI;AAAA,EAAA,CACrB;AACDA,QAAK,GAAG,UAAU,MAAM;AACvB,iBAAa,IAAIA,KAAI;AAAA,EAAA,CACrB;AACDA,QAAK,GAAG,SAAS,MAAM,aAAa,IAAIA,KAAI,CAAC;AAC7CA,QAAK,GAAG,mBAAmB,MAAM;AAChC,iBAAa,IAAIA,KAAI;AAAA,EAAA,CACrB;AACM,SAAA;AACR;AAEA,MAAM,uBAAuB,CAACA,UAAmB;AAC1CC,QAAAA,aAAY,SAAS,KAAK;AAGhCD,QAAK,GAAG,UAAU,CAAC,cAAc;AAEhC,WAAO,KAAK,SAAS,EAAE,WAAW,KAAKC,WAAU,IAAI,KAAK;AAAA,EAAA,CAC1D;AAGDD,QAAK,GAAG,iBAAiB,MAAM;AAC9BC,eAAU,IAAI,IAAI;AAAA,EAAA,CAClB;AAEMA,SAAAA;AACR;AAoCM,MAAA,OAAO,gBAAgB,OAAO;AACb,qBAAqB,OAAO;"}