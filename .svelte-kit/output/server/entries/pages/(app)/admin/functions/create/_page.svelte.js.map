{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../../../src/routes/(app)/admin/functions/create/+page.svelte"],"sourcesContent":["<script>\n\timport { toast } from 'svelte-sonner';\n\timport { onMount, getContext } from 'svelte';\n\timport { goto } from '$app/navigation';\n\n\timport { config, functions, models, settings } from '$lib/stores';\n\timport { createNewFunction, getFunctions } from '$lib/apis/functions';\n\timport FunctionEditor from '$lib/components/admin/Functions/FunctionEditor.svelte';\n\timport { getModels } from '$lib/apis';\n\timport { compareVersion, extractFrontmatter } from '$lib/utils';\n\timport { WEBUI_VERSION } from '$lib/constants';\n\n\tconst i18n = getContext('i18n');\n\n\tlet mounted = false;\n\tlet clone = false;\n\tlet func = null;\n\n\tconst saveHandler = async (data) => {\n\t\tconsole.log(data);\n\n\t\tconst manifest = extractFrontmatter(data.content);\n\t\tif (compareVersion(manifest?.required_open_webui_version ?? '0.0.0', WEBUI_VERSION)) {\n\t\t\tconsole.log('Version is lower than required');\n\t\t\ttoast.error(\n\t\t\t\t$i18n.t(\n\t\t\t\t\t'Open WebUI version (v{{OPEN_WEBUI_VERSION}}) is lower than required version (v{{REQUIRED_VERSION}})',\n\t\t\t\t\t{\n\t\t\t\t\t\tOPEN_WEBUI_VERSION: WEBUI_VERSION,\n\t\t\t\t\t\tREQUIRED_VERSION: manifest?.required_open_webui_version ?? '0.0.0'\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst res = await createNewFunction(localStorage.token, {\n\t\t\tid: data.id,\n\t\t\tname: data.name,\n\t\t\tmeta: data.meta,\n\t\t\tcontent: data.content\n\t\t}).catch((error) => {\n\t\t\ttoast.error(`${error}`);\n\t\t\treturn null;\n\t\t});\n\n\t\tif (res) {\n\t\t\ttoast.success($i18n.t('Function created successfully'));\n\t\t\tfunctions.set(await getFunctions(localStorage.token));\n\t\t\tmodels.set(\n\t\t\t\tawait getModels(\n\t\t\t\t\tlocalStorage.token,\n\t\t\t\t\t$config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tawait goto('/admin/functions');\n\t\t}\n\t};\n\n\tonMount(() => {\n\t\twindow.addEventListener('message', async (event) => {\n\t\t\tif (\n\t\t\t\t!['https://openwebui.com', 'https://www.openwebui.com', 'http://localhost:9999'].includes(\n\t\t\t\t\tevent.origin\n\t\t\t\t)\n\t\t\t)\n\t\t\t\treturn;\n\n\t\t\tfunc = JSON.parse(event.data);\n\t\t\tconsole.log(func);\n\t\t});\n\n\t\tif (window.opener ?? false) {\n\t\t\twindow.opener.postMessage('loaded', '*');\n\t\t}\n\n\t\tif (sessionStorage.function) {\n\t\t\tfunc = JSON.parse(sessionStorage.function);\n\t\t\tsessionStorage.removeItem('function');\n\n\t\t\tconsole.log(func);\n\t\t\tclone = true;\n\t\t}\n\n\t\tmounted = true;\n\t});\n</script>\n\n{#if mounted}\n\t{#key func?.content}\n\t\t<FunctionEditor\n\t\t\tid={func?.id ?? ''}\n\t\t\tname={func?.name ?? ''}\n\t\t\tmeta={func?.meta ?? { description: '' }}\n\t\t\tcontent={func?.content ?? ''}\n\t\t\t{clone}\n\t\t\tonSave={(value) => {\n\t\t\t\tsaveHandler(value);\n\t\t\t}}\n\t\t/>\n\t{/key}\n{/if}\n"],"names":[],"mappings":";;;;;;;;;;;;;;QAYO,OAAO,WAAW,MAAM;;;;;;;"}