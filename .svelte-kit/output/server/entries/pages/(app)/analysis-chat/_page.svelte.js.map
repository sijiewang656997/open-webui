{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../node_modules/svelte-chartjs/dist/utils/svelte.js","../../../../../../../node_modules/svelte-chartjs/dist/Chart.svelte","../../../../../../../src/routes/(app)/analysis-chat/+page.svelte"],"sourcesContent":["import { SvelteComponent, bubble, listen, current_component, } from 'svelte/internal';\nimport { onMount, onDestroy } from 'svelte';\nconst eventPrefix = /^on/;\nconst events = [];\nObject.keys(globalThis).forEach(key => {\n    if (eventPrefix.test(key)) {\n        events.push(key.replace(eventPrefix, ''));\n    }\n});\nexport function useForwardEvents(getRef) {\n    const component = current_component;\n    const destructors = [];\n    function forward(e) {\n        bubble(component, e);\n    }\n    onMount(() => {\n        const ref = getRef();\n        events.forEach(ref instanceof Element\n            ? event => destructors.push(listen(ref, event, forward))\n            : event => destructors.push(ref.$on(event, forward)));\n    });\n    onDestroy(() => {\n        while (destructors.length) {\n            destructors.pop()();\n        }\n    });\n}\n","<script>import { onMount, afterUpdate, onDestroy } from \"svelte\";\nimport { Chart as ChartJS } from \"chart.js\";\nimport { useForwardEvents } from \"./utils/index.js\";\nfunction clean(props2) {\n  let { data: data2, type: type2, options: options2, plugins: plugins2, children, $$scope, $$slots, ...rest } = props2;\n  return rest;\n}\nexport let type;\nexport let data = {\n  datasets: []\n};\nexport let options = {};\nexport let plugins = [];\nexport let updateMode = void 0;\nexport let chart = null;\nlet canvasRef;\nlet props = clean($$props);\nonMount(() => {\n  chart = new ChartJS(canvasRef, {\n    type,\n    data,\n    options,\n    plugins\n  });\n});\nafterUpdate(() => {\n  if (!chart)\n    return;\n  chart.data = data;\n  Object.assign(chart.options, options);\n  chart.update(updateMode);\n});\nonDestroy(() => {\n  if (chart)\n    chart.destroy();\n  chart = null;\n});\nuseForwardEvents(() => canvasRef);\n</script>\n\n<canvas bind:this={canvasRef} {...props} />\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { goto } from '$app/navigation';\n\timport { get } from 'svelte/store';\n\timport { user } from '$lib/stores';\n\timport i18n from '$lib/i18n';\n\timport { Chart } from 'svelte-chartjs';\n\timport type { ChartData, ChartTypeRegistry } from 'chart.js';\n\timport {\n\t\tChart as ChartJS,\n\t\tLineController,\n\t\tLineElement,\n\t\tPointElement,\n\t\tLinearScale,\n\t\tTitle,\n\t\tCategoryScale,\n\t\tTooltip,\n\t\tLegend\n\t} from 'chart.js';\n\timport Table from '$lib/components/common/Table.svelte';\n\timport { createDocxTemplateReport, downloadDocxDocument } from '$lib/utils/docxTemplateUtils';\n\timport { WEBUI_BASE_URL } from '$lib/constants';\n\tlet language_local = \"\"\n\n\tif (localStorage.getItem('locale') === \"zh-CN\") {\n                    language_local = 'zh-cn';\n                } else {\n                    language_local = 'en';\n                }\n\n\tChartJS.register(\n\t\tLineController,\n\t\tLineElement,\n\t\tPointElement,\n\t\tLinearScale,\n\t\tTitle,\n\t\tCategoryScale,\n\t\tTooltip,\n\t\tLegend\n\t);\n\n\tinterface Message {\n\t\trole: string;\n\t\tcontent: string;\n\t\tmetadata?: any;\n\t\tresults?: {\n\t\t\tcolumns: string[];\n\t\t\trecords: [string, number][];\n\t\t};\n\t}\n\n\tinterface AnalysisChartData extends ChartData<'line'> {\n\t\tlabels: string[];\n\t\tdatasets: {\n\t\t\tlabel: string;\n\t\t\tdata: number[];\n\t\t\tborderColor: string;\n\t\t\ttension: number;\n\t\t}[];\n\t}\n\n\tlet messages: Message[] = [];\n\tlet input = '';\n\tlet isLoading = false;\n\tlet error = '';\n\tlet isDownloading = false;\n\n\tasync function handleSubmit() {\n\t\tif (!input.trim()) return;\n\t\tif (!input.startsWith('@analysis')) {\n\t\t\terror = 'Please start your message with @analysis';\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log('[DEBUG] Submitting input:', input);\n\n\t\tisLoading = true;\n\t\terror = '';\n\t\tmessages = [];\n\n\t\ttry {\n\t\t\tconst token = localStorage.getItem('token');\n\t\t\tif (!token) {\n\t\t\t\tthrow new Error('No authentication token found');\n\t\t\t}\n\n\t\t\tconst requestBody = {\n\t\t\t\tconversation_id: 'analysis_stream',\n\t\t\t\tmessage: input\n\t\t\t};\n\t\t\tconst requestHeaders = {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': 'Bearer token_59b8b43a_aiurmmm0_upload_long_demo', //`token_59b8b43a_aiurmmm0_upload_long_demoBearer ${token}`,\n\t\t\t\t'Accept-Language': language_local\n\t\t\t};\n\t\t\tconsole.log('[DEBUG] Sending fetch to proxy/api/analysis/stream', requestBody, requestHeaders);\n\n\t\t\tconst response = await fetch(`${WEBUI_BASE_URL}/proxy/api/analysis/stream`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: requestHeaders,\n\t\t\t\tbody: JSON.stringify(requestBody)\n\t\t\t});\n\n\t\t\tconsole.log('[DEBUG] Response status:', response.status);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Failed to fetch analysis');\n\t\t\t}\n\n\t\t\tconst reader = response.body?.getReader();\n\t\t\tif (!reader) throw new Error('No reader available');\n\n\t\t\tconst decoder = new TextDecoder();\n\t\t\tlet buffer = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst { done, value } = await reader.read();\n\t\t\t\tif (done) break;\n\n\t\t\t\tbuffer += decoder.decode(value, { stream: true });\n\t\t\t\tconst lines = buffer.split('\\n');\n\t\t\t\tbuffer = lines.pop() || '';\n\n\t\t\t\tfor (const line of lines) {\n\t\t\t\t\tif (!line.trim()) continue;\n\t\t\t\t\tconsole.log('[DEBUG] Received line:', line);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst data = JSON.parse(line);\n\t\t\t\t\t\tif (data.type === 'node') {\n\t\t\t\t\t\t\tconst newMessage = {\n\t\t\t\t\t\t\t\trole: 'assistant',\n\t\t\t\t\t\t\t\tcontent: data.content,\n\t\t\t\t\t\t\t\tmetadata: data.metadata,\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconsole.log('[DEBUG] Adding message:', newMessage);\n\t\t\t\t\t\t\tmessages = [...messages, newMessage];\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('[DEBUG] Error parsing line:', e, line);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('[DEBUG] Error in handleSubmit:', e);\n\t\t\terror = e instanceof Error ? e.message : 'An error occurred';\n\t\t} finally {\n\t\t\tisLoading = false;\n\t\t}\n\t}\n\n\tfunction formatChartData(results: Message['results']): AnalysisChartData | null {\n\t\tif (!results || !results.records) return null;\n\t\tconst chartData: AnalysisChartData = {\n\t\t\tlabels: results.records.map((r) => r[0]),\n\t\t\tdatasets: [{\n\t\t\t\tlabel: 'Value',\n\t\t\t\tdata: results.records.map((r) => r[1]),\n\t\t\t\tborderColor: 'rgb(75, 192, 192)',\n\t\t\t\ttension: 0.1\n\t\t\t}]\n\t\t};\n\t\treturn chartData;\n\t}\n\n\tfunction toTableObjects(columns: string[], records: [string, number][]) {\n\t\treturn records.map(row => {\n\t\t\tconst obj: Record<string, any> = {};\n\t\t\tcolumns.forEach((col, i) => {\n\t\t\t\tobj[col] = row[i];\n\t\t\t});\n\t\t\treturn obj;\n\t\t});\n\t}\n\n\tasync function downloadWordReport() {\n\t\ttry {\n\t\t\tconsole.log('[DOCX DEBUG] Starting Word document download with Docxtemplater');\n\t\t\tisDownloading = true;\n\t\t\t\n\t\t\t// Combine all message contents for the report\n\t\t\tconst combinedContent = messages.map(message => {\n\t\t\t\t// Clean HTML tags and format the content\n\t\t\t\treturn message.content.replace(/<[^>]+>/g, '');\n\t\t\t}).join('\\n\\n');\n\t\t\t\n\t\t\t// Use the first message's results for the table, if available\n\t\t\tconst tableData = messages.find(msg => msg.results?.columns && msg.results.records)?.results;\n\t\t\t\n\t\t\t// Create the document using our new utility function\n\t\t\tconst blob = await createDocxTemplateReport(\n\t\t\t\tcombinedContent,\n\t\t\t\t'Analysis Report',\n\t\t\t\ttableData\n\t\t\t);\n\t\t\t\n\t\t\t// Generate filename with timestamp\n\t\t\tconst timestamp = new Date().toISOString().replace(/[-:.]/g, '').substring(0, 14);\n\t\t\tconst filename = `analysis_report_${timestamp}.docx`;\n\t\t\t\n\t\t\t// Download the document\n\t\t\tdownloadDocxDocument(blob, filename);\n\t\t\t\n\t\t\tconsole.log('[DOCX DEBUG] Download complete');\n\t\t} catch (error) {\n\t\t\tconsole.error('[DOCX DEBUG] Error in downloadWordReport:', error);\n\t\t\talert('Failed to download report. Please try again.');\n\t\t} finally {\n\t\t\tisDownloading = false;\n\t\t}\n\t}\n</script>\n\n<div class=\"flex flex-row w-full h-full max-h-[100dvh]\">\n\t<!-- Main content area -->\n\t<div class=\"flex-1 flex flex-col h-full\">\n\t\t<div class=\"flex items-center justify-between px-4 pt-4 pb-2\">\n\t\t\t<h1 class=\"text-2xl font-bold\">Analysis Report</h1>\n\t\t\t<button \n\t\t\t\ton:click={downloadWordReport} \n\t\t\t\tclass=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition flex items-center\"\n\t\t\t\tdisabled={isDownloading || messages.length === 0}\n\t\t\t>\n\t\t\t\t{#if isDownloading}\n\t\t\t\t\t<svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n\t\t\t\t\t\t<path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t\tDownloading...\n\t\t\t\t{:else}\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l2.414 2.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t\tDownload as Word\n\t\t\t\t{/if}\n\t\t\t</button>\n\t\t</div>\n\t\t<div class=\"flex-1 overflow-y-auto p-4 space-y-4\">\n\t\t\t{#each messages as message}\n\t\t\t\t<div class=\"bg-white dark:bg-gray-800 rounded-lg p-4 shadow\">\n\t\t\t\t\t<div class=\"prose dark:prose-invert max-w-none\">\n\t\t\t\t\t\t{@html message.content}\n\t\t\t\t\t</div>\n\t\t\t\t\t{#if message.results}\n\t\t\t\t\t\t<div class=\"mt-4\">\n\t\t\t\t\t\t\t{#if message.results.records}\n\t\t\t\t\t\t\t\t<!-- Table Section Header -->\n\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-2 font-medium text-gray-700 dark:text-gray-300 mb-2\">\n\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" class=\"w-4 h-4\">\n\t\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 0 1-1.125-1.125M3.375 19.5h7.5c.621 0 1.125-.504 1.125-1.125m-9.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-7.5A1.125 1.125 0 0 1 12 18.375m9.75-12.75c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125m19.5 0v1.5c0 .621-.504 1.125-1.125 1.125M2.25 5.625v1.5c0 .621.504 1.125 1.125 1.125m0 0h17.25m-17.25 0h7.5c.621 0 1.125.504 1.125 1.125M3.375 8.25c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m1.125-3.75h7.5c.621 0 1.125.504 1.125 1.125m-9.75 0h9.75\" />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\tData Table\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"overflow-x-auto\">\n\t\t\t\t\t\t\t\t\t<Table \n\t\t\t\t\t\t\t\t\t\tdata={toTableObjects(message.results.columns, message.results.records)}\n\t\t\t\t\t\t\t\t\t\tcolumns={message.results.columns}\n\t\t\t\t\t\t\t\t\t\tclassName=\"border w-full table-improved\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"mt-4 h-64\">\n\t\t\t\t\t\t\t\t\t{#if message.results}\n\t\t\t\t\t\t\t\t\t\t{#await Promise.resolve(formatChartData(message.results)) then chartData}\n\t\t\t\t\t\t\t\t\t\t\t{#if chartData}\n\t\t\t\t\t\t\t\t\t\t\t\t<Chart\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"line\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={chartData}\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaintainAspectRatio: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t{/await}\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t\t<div class=\"p-4 border-t\">\n\t\t\t<form on:submit|preventDefault={handleSubmit} class=\"flex items-center gap-4\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tbind:value={input}\n\t\t\t\t\tplaceholder=\"Send a message starting with @analysis\"\n\t\t\t\t\tclass=\"flex-1 py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-lg dark:bg-gray-800\"\n\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclass=\"py-2 px-4 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition\"\n\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t>\n\t\t\t\t\t{#if isLoading}\n\t\t\t\t\t\t<span class=\"flex items-center\">\n\t\t\t\t\t\t\t<svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t<circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n\t\t\t\t\t\t\t\t<path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"></path>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\tProcessing...\n\t\t\t\t\t\t</span>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\tSend\n\t\t\t\t\t{/if}\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t{#if error}\n\t\t\t\t<p class=\"mt-2 text-red-500\">{error}</p>\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n:global(.table-improved) {\n\twidth: calc(100% + 1rem) !important;\n\tmax-width: none !important;\n\tmargin-left: -0.5rem;\n\tmargin-right: -0.5rem;\n}\n:global(.table-improved thead) {\n\tbackground-color: #e8f4ff !important;\n}\n:global(.dark .table-improved thead) {\n\tbackground-color: #1e3a5f !important;\n}\n:global(.table-improved th) {\n\tfont-weight: 600;\n\tpadding: 0.75rem 1rem !important;\n}\n:global(.table-improved td) {\n\tpadding: 0.625rem 1rem !important;\n}\n</style> "],"names":["ChartJS"],"mappings":";;;;;;;;;AAEA,MAAM,cAAc;AACpB,MAAM,SAAS,CAAA;AACf,OAAO,KAAK,UAAU,EAAE,QAAQ,SAAO;AACnC,MAAI,YAAY,KAAK,GAAG,GAAG;AACvB,WAAO,KAAK,IAAI,QAAQ,aAAa,EAAE,CAAC;AAAA,EAC3C;AACL,CAAC;AACM,SAAS,iBAAiB,QAAQ;AAErC,QAAM,cAAc,CAAA;AAUpB,YAAU,MAAM;AACZ,WAAO,YAAY,QAAQ;AACvB,kBAAY,IAAG;IAClB;AAAA,EACT,CAAK;AACL;ACvBS,SAAA,MAAM,QAAM;QACb,MAAM,OAAO,MAAM,OAAO,SAAS,UAAU,SAAS,UAAU,UAAU,SAAS,SAAO,GAAK,KAAI,IAAK;SACvG;;;QAEE,KAAI,IAAA;AACJ,MAAA,EAAA,SACT,UAAQ,CAAA,EAAA,EAAA,IAAA;QAEC,UAAO,GAAA,IAAA;QACP,UAAO,GAAA,IAAA;AACP,MAAA,EAAA,oBAAmB,IAAA;AACnB,MAAA,EAAA,QAAQ,KAAI,IAAA;MACnB;MACA,QAAQ,MAAM,OAAO;AAgBzB,YAAS,MAAA;QACH,MACF,OAAM;AACR,YAAQ;AAAA;AAEV,mBAAgC;;;;;;;AAGE,SAAA,UAAA,OAAA,CAAA,cAAA,KAAK,gCAApB,WAAS,CAAA,CAAA;;;;;;SC+GlB,gBAAgB,SAAA;AACnB,MAAA,CAAA,WAAA,CAAY,QAAQ,QAAgB,QAAA;AACnC,QAAA,YAAA;AAAA,IACL,QAAQ,QAAQ,QAAQ,IAAK,OAAM,EAAE,CAAC,CAAA;AAAA,IACtC,UAAA;AAAA;QACC,OAAO;AAAA,QACP,MAAM,QAAQ,QAAQ,IAAK,OAAM,EAAE,CAAC,CAAA;AAAA,QACpC,aAAa;AAAA,QACb,SAAS;AAAA;;;AAGJ,SAAA;;AAGC,SAAA,eAAe,SAAmB,SAAA;AACnC,SAAA,QAAQ,IAAI,SAAA;AACZ,UAAA,MAAA,CAAA;AACN,YAAQ,SAAS,KAAK,MAAA;AACrB,UAAI,GAAG,IAAI,IAAI,CAAC;AAAA;AAEV,WAAA;AAAA;;;MAnJL,aAAa,QAAQ,QAAQ,MAAM,QAAA;AAMvCA,UAAQ,SACP,gBACA,aACA,cACA,aACA,OACA,eACA,SACA,MAAA;AAuBG,MAAA,WAAA,CAAA;MACA,QAAQ;;AA+JC,SAAA,gWAAiB,SAAS,WAAW;gGAiBzC,UAAQ,aAAA;AAGL,WAAA,uIAAA,QAAQ,OAAO,+BAElB,QAAQ,+BAEN,QAAQ,QAAQ;;;;cAUZ,eAAe,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,OAAO;AAAA,iBAC5D,QAAQ,QAAQ;AAAA;;;;IAKrB,CAAA,iCAAA,QAAQ;;;;;;mBAEN;;;;kBAGG;AAAA;cAEL,YAAY;AAAA,cACZ,qBAAqB;AAAA;;;;;;IAPjB,EAAA,QAAQ,QAAQ,gBAAgB,QAAQ,OAAO,CAAA,CAAA,CAAA;EA2BlD,CAAA,CAAA,mPAHE,EAAA,GAAA,cAAA,SAAA,OAQF,CAAA,CAAA;;","x_google_ignoreList":[0,1]}