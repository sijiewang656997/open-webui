{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../../../src/lib/apis/knowledge/index.ts","../../../../../../../../../src/lib/components/workspace/Knowledge/KnowledgeBase/AddTextContentModal.svelte","../../../../../../../../../src/lib/components/workspace/Knowledge/KnowledgeBase.svelte"],"sourcesContent":["import { WEBUI_API_BASE_URL } from '$lib/constants';\n\nexport const createNewKnowledge = async (\n\ttoken: string,\n\tname: string,\n\tdescription: string,\n\taccessControl: null | object\n) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/knowledge/create`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tname: name,\n\t\t\tdescription: description,\n\t\t\taccess_control: accessControl\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getKnowledgeBases = async (token: string = '') => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/knowledge/`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getKnowledgeBaseList = async (token: string = '') => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/knowledge/list`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getKnowledgeById = async (token: string, id: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/knowledge/${id}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\ntype KnowledgeUpdateForm = {\n\tname?: string;\n\tdescription?: string;\n\tdata?: object;\n\taccess_control?: null | object;\n};\n\nexport const updateKnowledgeById = async (token: string, id: string, form: KnowledgeUpdateForm) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/knowledge/${id}/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tname: form?.name ? form.name : undefined,\n\t\t\tdescription: form?.description ? form.description : undefined,\n\t\t\tdata: form?.data ? form.data : undefined,\n\t\t\taccess_control: form.access_control\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const addFileToKnowledgeById = async (token: string, id: string, fileId: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/knowledge/${id}/file/add`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tfile_id: fileId\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const updateFileFromKnowledgeById = async (token: string, id: string, fileId: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/knowledge/${id}/file/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tfile_id: fileId\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const removeFileFromKnowledgeById = async (token: string, id: string, fileId: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/knowledge/${id}/file/remove`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tfile_id: fileId\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const resetKnowledgeById = async (token: string, id: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/knowledge/${id}/reset`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const deleteKnowledgeById = async (token: string, id: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/knowledge/${id}/delete`, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n","<script lang=\"ts\">\n\timport { toast } from 'svelte-sonner';\n\timport dayjs from 'dayjs';\n\n\timport { onMount, getContext, createEventDispatcher } from 'svelte';\n\tconst i18n = getContext('i18n');\n\tconst dispatch = createEventDispatcher();\n\n\timport Modal from '$lib/components/common/Modal.svelte';\n\timport RichTextInput from '$lib/components/common/RichTextInput.svelte';\n\timport XMark from '$lib/components/icons/XMark.svelte';\n\timport Mic from '$lib/components/icons/Mic.svelte';\n\timport Tooltip from '$lib/components/common/Tooltip.svelte';\n\timport VoiceRecording from '$lib/components/chat/MessageInput/VoiceRecording.svelte';\n\texport let show = false;\n\n\tlet name = 'Untitled';\n\tlet content = '';\n\n\tlet voiceInput = false;\n</script>\n\n<Modal size=\"full\" containerClassName=\"\" className=\"h-full bg-white dark:bg-gray-900\" bind:show>\n\t<div class=\"absolute top-0 right-0 p-5\">\n\t\t<button\n\t\t\tclass=\"self-center dark:text-white\"\n\t\t\ttype=\"button\"\n\t\t\ton:click={() => {\n\t\t\t\tshow = false;\n\t\t\t}}\n\t\t>\n\t\t\t<XMark className=\"size-3.5\" />\n\t\t</button>\n\t</div>\n\t<div class=\"flex flex-col md:flex-row w-full h-full md:space-x-4 dark:text-gray-200\">\n\t\t<form\n\t\t\tclass=\"flex flex-col w-full h-full\"\n\t\t\ton:submit|preventDefault={() => {\n\t\t\t\tif (name.trim() === '' || content.trim() === '') {\n\t\t\t\t\ttoast.error($i18n.t('Please fill in all fields.'));\n\t\t\t\t\tname = name.trim();\n\t\t\t\t\tcontent = content.trim();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdispatch('submit', {\n\t\t\t\t\tname,\n\t\t\t\t\tcontent\n\t\t\t\t});\n\t\t\t\tshow = false;\n\t\t\t\tname = '';\n\t\t\t\tcontent = '';\n\t\t\t}}\n\t\t>\n\t\t\t<div class=\" flex-1 w-full h-full flex justify-center overflow-auto px-5 py-4\">\n\t\t\t\t<div class=\" max-w-3xl py-2 md:py-10 w-full flex flex-col gap-2\">\n\t\t\t\t\t<div class=\"shrink-0 w-full flex justify-between items-center\">\n\t\t\t\t\t\t<div class=\"w-full\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclass=\"w-full text-3xl font-semibold bg-transparent outline-hidden\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tbind:value={name}\n\t\t\t\t\t\t\t\tplaceholder={$i18n.t('Title')}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\" flex-1 w-full h-full\">\n\t\t\t\t\t\t<RichTextInput\n\t\t\t\t\t\t\tbind:value={content}\n\t\t\t\t\t\t\tplaceholder={$i18n.t('Write something...')}\n\t\t\t\t\t\t\tpreserveBreaks={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tclass=\"flex flex-row items-center justify-end text-sm font-medium shrink-0 mt-1 p-4 gap-1.5\"\n\t\t\t>\n\t\t\t\t<div class=\"\">\n\t\t\t\t\t{#if voiceInput}\n\t\t\t\t\t\t<div class=\" max-w-full w-full\">\n\t\t\t\t\t\t\t<VoiceRecording\n\t\t\t\t\t\t\t\tbind:recording={voiceInput}\n\t\t\t\t\t\t\t\tclassName=\"p-1\"\n\t\t\t\t\t\t\t\ton:cancel={() => {\n\t\t\t\t\t\t\t\t\tvoiceInput = false;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ton:confirm={(e) => {\n\t\t\t\t\t\t\t\t\tconst { text, filename } = e.detail;\n\t\t\t\t\t\t\t\t\tcontent = `${content}${text} `;\n\n\t\t\t\t\t\t\t\t\tvoiceInput = false;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<Tooltip content={$i18n.t('Voice Input')}>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\" p-2 bg-gray-50 text-gray-700 dark:bg-gray-700 dark:text-white transition rounded-full\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\ton:click={async () => {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tlet stream = await navigator.mediaDevices\n\t\t\t\t\t\t\t\t\t\t\t.getUserMedia({ audio: true })\n\t\t\t\t\t\t\t\t\t\t\t.catch(function (err) {\n\t\t\t\t\t\t\t\t\t\t\t\ttoast.error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$i18n.t(`Permission denied when accessing microphone: {{error}}`, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tif (stream) {\n\t\t\t\t\t\t\t\t\t\t\tvoiceInput = true;\n\t\t\t\t\t\t\t\t\t\t\tconst tracks = stream.getTracks();\n\t\t\t\t\t\t\t\t\t\t\ttracks.forEach((track) => track.stop());\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tstream = null;\n\t\t\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\t\t\ttoast.error($i18n.t('Permission denied when accessing microphone'));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Mic className=\"size-5\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\" shrink-0\">\n\t\t\t\t\t<Tooltip content={$i18n.t('Save')}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\" px-3.5 py-2 bg-black text-white dark:bg-white dark:text-black transition rounded-full\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{$i18n.t('Save')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</Modal>\n\n<style>\n\tinput::-webkit-outer-spin-button,\n\tinput::-webkit-inner-spin-button {\n\t\t/* display: none; <- Crashes Chrome on hover */\n\t\t-webkit-appearance: none;\n\t\tmargin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n\t}\n\n\t.tabs::-webkit-scrollbar {\n\t\tdisplay: none; /* for Chrome, Safari and Opera */\n\t}\n\n\t.tabs {\n\t\t-ms-overflow-style: none; /* IE and Edge */\n\t\tscrollbar-width: none; /* Firefox */\n\t}\n\n\tinput[type='number'] {\n\t\t-moz-appearance: textfield; /* Firefox */\n\t}\n</style>\n","<script lang=\"ts\">\n\timport Fuse from 'fuse.js';\n\timport { toast } from 'svelte-sonner';\n\timport { v4 as uuidv4 } from 'uuid';\n\timport { PaneGroup, Pane, PaneResizer } from 'paneforge';\n\n\timport { onMount, getContext, onDestroy, tick } from 'svelte';\n\tconst i18n = getContext('i18n');\n\n\timport { goto } from '$app/navigation';\n\timport { page } from '$app/stores';\n\timport { mobile, showSidebar, knowledge as _knowledge } from '$lib/stores';\n\n\timport { updateFileDataContentById, uploadFile, deleteFileById } from '$lib/apis/files';\n\timport {\n\t\taddFileToKnowledgeById,\n\t\tgetKnowledgeById,\n\t\tgetKnowledgeBases,\n\t\tremoveFileFromKnowledgeById,\n\t\tresetKnowledgeById,\n\t\tupdateFileFromKnowledgeById,\n\t\tupdateKnowledgeById\n\t} from '$lib/apis/knowledge';\n\n\timport { transcribeAudio } from '$lib/apis/audio';\n\timport { blobToFile } from '$lib/utils';\n\timport { processFile } from '$lib/apis/retrieval';\n\n\timport Spinner from '$lib/components/common/Spinner.svelte';\n\timport Files from './KnowledgeBase/Files.svelte';\n\timport AddFilesPlaceholder from '$lib/components/AddFilesPlaceholder.svelte';\n\n\timport AddContentMenu from './KnowledgeBase/AddContentMenu.svelte';\n\timport AddTextContentModal from './KnowledgeBase/AddTextContentModal.svelte';\n\n\timport SyncConfirmDialog from '../../common/ConfirmDialog.svelte';\n\timport RichTextInput from '$lib/components/common/RichTextInput.svelte';\n\timport EllipsisVertical from '$lib/components/icons/EllipsisVertical.svelte';\n\timport Drawer from '$lib/components/common/Drawer.svelte';\n\timport ChevronLeft from '$lib/components/icons/ChevronLeft.svelte';\n\timport LockClosed from '$lib/components/icons/LockClosed.svelte';\n\timport AccessControlModal from '../common/AccessControlModal.svelte';\n\n\tlet largeScreen = true;\n\n\tlet pane;\n\tlet showSidepanel = true;\n\tlet minSize = 0;\n\n\ttype Knowledge = {\n\t\tid: string;\n\t\tname: string;\n\t\tdescription: string;\n\t\tdata: {\n\t\t\tfile_ids: string[];\n\t\t};\n\t\tfiles: any[];\n\t};\n\n\tlet id = null;\n\tlet knowledge: Knowledge | null = null;\n\tlet query = '';\n\n\tlet showAddTextContentModal = false;\n\tlet showSyncConfirmModal = false;\n\tlet showAccessControlModal = false;\n\n\tlet inputFiles = null;\n\n\tlet filteredItems = [];\n\t$: if (knowledge && knowledge.files) {\n\t\tfuse = new Fuse(knowledge.files, {\n\t\t\tkeys: ['meta.name', 'meta.description']\n\t\t});\n\t}\n\n\t$: if (fuse) {\n\t\tfilteredItems = query\n\t\t\t? fuse.search(query).map((e) => {\n\t\t\t\t\treturn e.item;\n\t\t\t\t})\n\t\t\t: (knowledge?.files ?? []);\n\t}\n\n\tlet selectedFile = null;\n\tlet selectedFileId = null;\n\n\t$: if (selectedFileId) {\n\t\tconst file = (knowledge?.files ?? []).find((file) => file.id === selectedFileId);\n\t\tif (file) {\n\t\t\tfile.data = file.data ?? { content: '' };\n\t\t\tselectedFile = file;\n\t\t} else {\n\t\t\tselectedFile = null;\n\t\t}\n\t} else {\n\t\tselectedFile = null;\n\t}\n\n\tlet fuse = null;\n\tlet debounceTimeout = null;\n\tlet mediaQuery;\n\tlet dragged = false;\n\n\tconst createFileFromText = (name, content) => {\n\t\tconst blob = new Blob([content], { type: 'text/plain' });\n\t\tconst file = blobToFile(blob, `${name}.txt`);\n\n\t\tconsole.log(file);\n\t\treturn file;\n\t};\n\n\tconst uploadFileHandler = async (file) => {\n\t\tconsole.log(file);\n\n\t\tconst tempItemId = uuidv4();\n\t\tconst fileItem = {\n\t\t\ttype: 'file',\n\t\t\tfile: '',\n\t\t\tid: null,\n\t\t\turl: '',\n\t\t\tname: file.name,\n\t\t\tsize: file.size,\n\t\t\tstatus: 'uploading',\n\t\t\terror: '',\n\t\t\titemId: tempItemId\n\t\t};\n\n\t\tif (fileItem.size == 0) {\n\t\t\ttoast.error($i18n.t('You cannot upload an empty file.'));\n\t\t\treturn null;\n\t\t}\n\n\t\tknowledge.files = [...(knowledge.files ?? []), fileItem];\n\n\t\ttry {\n\t\t\tconst uploadedFile = await uploadFile(localStorage.token, file).catch((e) => {\n\t\t\t\ttoast.error(`${e}`);\n\t\t\t\treturn null;\n\t\t\t});\n\n\t\t\tif (uploadedFile) {\n\t\t\t\tconsole.log(uploadedFile);\n\t\t\t\tknowledge.files = knowledge.files.map((item) => {\n\t\t\t\t\tif (item.itemId === tempItemId) {\n\t\t\t\t\t\titem.id = uploadedFile.id;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove temporary item id\n\t\t\t\t\tdelete item.itemId;\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tawait addFileHandler(uploadedFile.id);\n\t\t\t} else {\n\t\t\t\ttoast.error($i18n.t('Failed to upload file.'));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\ttoast.error(`${e}`);\n\t\t}\n\t};\n\n\tconst uploadDirectoryHandler = async () => {\n\t\t// Check if File System Access API is supported\n\t\tconst isFileSystemAccessSupported = 'showDirectoryPicker' in window;\n\n\t\ttry {\n\t\t\tif (isFileSystemAccessSupported) {\n\t\t\t\t// Modern browsers (Chrome, Edge) implementation\n\t\t\t\tawait handleModernBrowserUpload();\n\t\t\t} else {\n\t\t\t\t// Firefox fallback\n\t\t\t\tawait handleFirefoxUpload();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\thandleUploadError(error);\n\t\t}\n\t};\n\n\t// Helper function to check if a path contains hidden folders\n\tconst hasHiddenFolder = (path) => {\n\t\treturn path.split('/').some((part) => part.startsWith('.'));\n\t};\n\n\t// Modern browsers implementation using File System Access API\n\tconst handleModernBrowserUpload = async () => {\n\t\tconst dirHandle = await window.showDirectoryPicker();\n\t\tlet totalFiles = 0;\n\t\tlet uploadedFiles = 0;\n\n\t\t// Function to update the UI with the progress\n\t\tconst updateProgress = () => {\n\t\t\tconst percentage = (uploadedFiles / totalFiles) * 100;\n\t\t\ttoast.info(`Upload Progress: ${uploadedFiles}/${totalFiles} (${percentage.toFixed(2)}%)`);\n\t\t};\n\n\t\t// Recursive function to count all files excluding hidden ones\n\t\tasync function countFiles(dirHandle) {\n\t\t\tfor await (const entry of dirHandle.values()) {\n\t\t\t\t// Skip hidden files and directories\n\t\t\t\tif (entry.name.startsWith('.')) continue;\n\n\t\t\t\tif (entry.kind === 'file') {\n\t\t\t\t\ttotalFiles++;\n\t\t\t\t} else if (entry.kind === 'directory') {\n\t\t\t\t\t// Only process non-hidden directories\n\t\t\t\t\tif (!entry.name.startsWith('.')) {\n\t\t\t\t\t\tawait countFiles(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Recursive function to process directories excluding hidden files and folders\n\t\tasync function processDirectory(dirHandle, path = '') {\n\t\t\tfor await (const entry of dirHandle.values()) {\n\t\t\t\t// Skip hidden files and directories\n\t\t\t\tif (entry.name.startsWith('.')) continue;\n\n\t\t\t\tconst entryPath = path ? `${path}/${entry.name}` : entry.name;\n\n\t\t\t\t// Skip if the path contains any hidden folders\n\t\t\t\tif (hasHiddenFolder(entryPath)) continue;\n\n\t\t\t\tif (entry.kind === 'file') {\n\t\t\t\t\tconst file = await entry.getFile();\n\t\t\t\t\tconst fileWithPath = new File([file], entryPath, { type: file.type });\n\n\t\t\t\t\tawait uploadFileHandler(fileWithPath);\n\t\t\t\t\tuploadedFiles++;\n\t\t\t\t\tupdateProgress();\n\t\t\t\t} else if (entry.kind === 'directory') {\n\t\t\t\t\t// Only process non-hidden directories\n\t\t\t\t\tif (!entry.name.startsWith('.')) {\n\t\t\t\t\t\tawait processDirectory(entry, entryPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait countFiles(dirHandle);\n\t\tupdateProgress();\n\n\t\tif (totalFiles > 0) {\n\t\t\tawait processDirectory(dirHandle);\n\t\t} else {\n\t\t\tconsole.log('No files to upload.');\n\t\t}\n\t};\n\n\t// Firefox fallback implementation using traditional file input\n\tconst handleFirefoxUpload = async () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Create hidden file input\n\t\t\tconst input = document.createElement('input');\n\t\t\tinput.type = 'file';\n\t\t\tinput.webkitdirectory = true;\n\t\t\tinput.directory = true;\n\t\t\tinput.multiple = true;\n\t\t\tinput.style.display = 'none';\n\n\t\t\t// Add input to DOM temporarily\n\t\t\tdocument.body.appendChild(input);\n\n\t\t\tinput.onchange = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst files = Array.from(input.files)\n\t\t\t\t\t\t// Filter out files from hidden folders\n\t\t\t\t\t\t.filter((file) => !hasHiddenFolder(file.webkitRelativePath));\n\n\t\t\t\t\tlet totalFiles = files.length;\n\t\t\t\t\tlet uploadedFiles = 0;\n\n\t\t\t\t\t// Function to update the UI with the progress\n\t\t\t\t\tconst updateProgress = () => {\n\t\t\t\t\t\tconst percentage = (uploadedFiles / totalFiles) * 100;\n\t\t\t\t\t\ttoast.info(\n\t\t\t\t\t\t\t`Upload Progress: ${uploadedFiles}/${totalFiles} (${percentage.toFixed(2)}%)`\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tupdateProgress();\n\n\t\t\t\t\t// Process all files\n\t\t\t\t\tfor (const file of files) {\n\t\t\t\t\t\t// Skip hidden files (additional check)\n\t\t\t\t\t\tif (!file.name.startsWith('.')) {\n\t\t\t\t\t\t\tconst relativePath = file.webkitRelativePath || file.name;\n\t\t\t\t\t\t\tconst fileWithPath = new File([file], relativePath, { type: file.type });\n\n\t\t\t\t\t\t\tawait uploadFileHandler(fileWithPath);\n\t\t\t\t\t\t\tuploadedFiles++;\n\t\t\t\t\t\t\tupdateProgress();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Clean up\n\t\t\t\t\tdocument.body.removeChild(input);\n\t\t\t\t\tresolve();\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tinput.onerror = (error) => {\n\t\t\t\tdocument.body.removeChild(input);\n\t\t\t\treject(error);\n\t\t\t};\n\n\t\t\t// Trigger file picker\n\t\t\tinput.click();\n\t\t});\n\t};\n\n\t// Error handler\n\tconst handleUploadError = (error) => {\n\t\tif (error.name === 'AbortError') {\n\t\t\ttoast.info('Directory selection was cancelled');\n\t\t} else {\n\t\t\ttoast.error('Error accessing directory');\n\t\t\tconsole.error('Directory access error:', error);\n\t\t}\n\t};\n\n\t// Helper function to maintain file paths within zip\n\tconst syncDirectoryHandler = async () => {\n\t\tif ((knowledge?.files ?? []).length > 0) {\n\t\t\tconst res = await resetKnowledgeById(localStorage.token, id).catch((e) => {\n\t\t\t\ttoast.error(`${e}`);\n\t\t\t});\n\n\t\t\tif (res) {\n\t\t\t\tknowledge = res;\n\t\t\t\ttoast.success($i18n.t('Knowledge reset successfully.'));\n\n\t\t\t\t// Upload directory\n\t\t\t\tuploadDirectoryHandler();\n\t\t\t}\n\t\t} else {\n\t\t\tuploadDirectoryHandler();\n\t\t}\n\t};\n\n\tconst addFileHandler = async (fileId) => {\n\t\tconst updatedKnowledge = await addFileToKnowledgeById(localStorage.token, id, fileId).catch(\n\t\t\t(e) => {\n\t\t\t\ttoast.error(`${e}`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t);\n\n\t\tif (updatedKnowledge) {\n\t\t\tknowledge = updatedKnowledge;\n\t\t\ttoast.success($i18n.t('File added successfully.'));\n\t\t} else {\n\t\t\ttoast.error($i18n.t('Failed to add file.'));\n\t\t\tknowledge.files = knowledge.files.filter((file) => file.id !== fileId);\n\t\t}\n\t};\n\n\tconst deleteFileHandler = async (fileId) => {\n\t\ttry {\n\t\t\tconsole.log('Starting file deletion process for:', fileId);\n\n\t\t\t// Remove from knowledge base only\n\t\t\tconst updatedKnowledge = await removeFileFromKnowledgeById(localStorage.token, id, fileId);\n\n\t\t\tconsole.log('Knowledge base updated:', updatedKnowledge);\n\n\t\t\tif (updatedKnowledge) {\n\t\t\t\tknowledge = updatedKnowledge;\n\t\t\t\ttoast.success($i18n.t('File removed successfully.'));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('Error in deleteFileHandler:', e);\n\t\t\ttoast.error(`${e}`);\n\t\t}\n\t};\n\n\tconst updateFileContentHandler = async () => {\n\t\tconst fileId = selectedFile.id;\n\t\tconst content = selectedFile.data.content;\n\n\t\tconst res = updateFileDataContentById(localStorage.token, fileId, content).catch((e) => {\n\t\t\ttoast.error(`${e}`);\n\t\t});\n\n\t\tconst updatedKnowledge = await updateFileFromKnowledgeById(\n\t\t\tlocalStorage.token,\n\t\t\tid,\n\t\t\tfileId\n\t\t).catch((e) => {\n\t\t\ttoast.error(`${e}`);\n\t\t});\n\n\t\tif (res && updatedKnowledge) {\n\t\t\tknowledge = updatedKnowledge;\n\t\t\ttoast.success($i18n.t('File content updated successfully.'));\n\t\t}\n\t};\n\n\tconst changeDebounceHandler = () => {\n\t\tconsole.log('debounce');\n\t\tif (debounceTimeout) {\n\t\t\tclearTimeout(debounceTimeout);\n\t\t}\n\n\t\tdebounceTimeout = setTimeout(async () => {\n\t\t\tif (knowledge.name.trim() === '' || knowledge.description.trim() === '') {\n\t\t\t\ttoast.error($i18n.t('Please fill in all fields.'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst res = await updateKnowledgeById(localStorage.token, id, {\n\t\t\t\t...knowledge,\n\t\t\t\tname: knowledge.name,\n\t\t\t\tdescription: knowledge.description,\n\t\t\t\taccess_control: knowledge.access_control\n\t\t\t}).catch((e) => {\n\t\t\t\ttoast.error(`${e}`);\n\t\t\t});\n\n\t\t\tif (res) {\n\t\t\t\ttoast.success($i18n.t('Knowledge updated successfully'));\n\t\t\t\t_knowledge.set(await getKnowledgeBases(localStorage.token));\n\t\t\t}\n\t\t}, 1000);\n\t};\n\n\tconst handleMediaQuery = async (e) => {\n\t\tif (e.matches) {\n\t\t\tlargeScreen = true;\n\t\t} else {\n\t\t\tlargeScreen = false;\n\t\t}\n\t};\n\n\tconst onDragOver = (e) => {\n\t\te.preventDefault();\n\n\t\t// Check if a file is being draggedOver.\n\t\tif (e.dataTransfer?.types?.includes('Files')) {\n\t\t\tdragged = true;\n\t\t} else {\n\t\t\tdragged = false;\n\t\t}\n\t};\n\n\tconst onDragLeave = () => {\n\t\tdragged = false;\n\t};\n\n\tconst onDrop = async (e) => {\n\t\te.preventDefault();\n\t\tdragged = false;\n\n\t\tif (e.dataTransfer?.types?.includes('Files')) {\n\t\t\tif (e.dataTransfer?.files) {\n\t\t\t\tconst inputFiles = e.dataTransfer?.files;\n\n\t\t\t\tif (inputFiles && inputFiles.length > 0) {\n\t\t\t\t\tfor (const file of inputFiles) {\n\t\t\t\t\t\tawait uploadFileHandler(file);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttoast.error($i18n.t(`File not found.`));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tonMount(async () => {\n\t\t// listen to resize 1024px\n\t\tmediaQuery = window.matchMedia('(min-width: 1024px)');\n\n\t\tmediaQuery.addEventListener('change', handleMediaQuery);\n\t\thandleMediaQuery(mediaQuery);\n\n\t\t// Select the container element you want to observe\n\t\tconst container = document.getElementById('collection-container');\n\n\t\t// initialize the minSize based on the container width\n\t\tminSize = !largeScreen ? 100 : Math.floor((300 / container.clientWidth) * 100);\n\n\t\t// Create a new ResizeObserver instance\n\t\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\t\tfor (let entry of entries) {\n\t\t\t\tconst width = entry.contentRect.width;\n\t\t\t\t// calculate the percentage of 300\n\t\t\t\tconst percentage = (300 / width) * 100;\n\t\t\t\t// set the minSize to the percentage, must be an integer\n\t\t\t\tminSize = !largeScreen ? 100 : Math.floor(percentage);\n\n\t\t\t\tif (showSidepanel) {\n\t\t\t\t\tif (pane && pane.isExpanded() && pane.getSize() < minSize) {\n\t\t\t\t\t\tpane.resize(minSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Start observing the container's size changes\n\t\tresizeObserver.observe(container);\n\n\t\tif (pane) {\n\t\t\tpane.expand();\n\t\t}\n\n\t\tid = $page.params.id;\n\n\t\tconst res = await getKnowledgeById(localStorage.token, id).catch((e) => {\n\t\t\ttoast.error(`${e}`);\n\t\t\treturn null;\n\t\t});\n\n\t\tif (res) {\n\t\t\tknowledge = res;\n\t\t} else {\n\t\t\tgoto('/workspace/knowledge');\n\t\t}\n\n\t\tconst dropZone = document.querySelector('body');\n\t\tdropZone?.addEventListener('dragover', onDragOver);\n\t\tdropZone?.addEventListener('drop', onDrop);\n\t\tdropZone?.addEventListener('dragleave', onDragLeave);\n\t});\n\n\tonDestroy(() => {\n\t\tmediaQuery?.removeEventListener('change', handleMediaQuery);\n\t\tconst dropZone = document.querySelector('body');\n\t\tdropZone?.removeEventListener('dragover', onDragOver);\n\t\tdropZone?.removeEventListener('drop', onDrop);\n\t\tdropZone?.removeEventListener('dragleave', onDragLeave);\n\t});\n</script>\n\n{#if dragged}\n\t<div\n\t\tclass=\"fixed {$showSidebar\n\t\t\t? 'left-0 md:left-[260px] md:w-[calc(100%-260px)]'\n\t\t\t: 'left-0'}  w-full h-full flex z-50 touch-none pointer-events-none\"\n\t\tid=\"dropzone\"\n\t\trole=\"region\"\n\t\taria-label=\"Drag and Drop Container\"\n\t>\n\t\t<div class=\"absolute w-full h-full backdrop-blur-sm bg-gray-800/40 flex justify-center\">\n\t\t\t<div class=\"m-auto pt-64 flex flex-col justify-center\">\n\t\t\t\t<div class=\"max-w-md\">\n\t\t\t\t\t<AddFilesPlaceholder>\n\t\t\t\t\t\t<div class=\" mt-2 text-center text-sm dark:text-gray-200 w-full\">\n\t\t\t\t\t\t\tDrop any files here to add to my documents\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</AddFilesPlaceholder>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n{/if}\n\n<SyncConfirmDialog\n\tbind:show={showSyncConfirmModal}\n\tmessage={$i18n.t(\n\t\t'This will reset the knowledge base and sync all files. Do you wish to continue?'\n\t)}\n\ton:confirm={() => {\n\t\tsyncDirectoryHandler();\n\t}}\n/>\n\n<AddTextContentModal\n\tbind:show={showAddTextContentModal}\n\ton:submit={(e) => {\n\t\tconst file = createFileFromText(e.detail.name, e.detail.content);\n\t\tuploadFileHandler(file);\n\t}}\n/>\n\n<input\n\tid=\"files-input\"\n\tbind:files={inputFiles}\n\ttype=\"file\"\n\tmultiple\n\thidden\n\ton:change={async () => {\n\t\tif (inputFiles && inputFiles.length > 0) {\n\t\t\tfor (const file of inputFiles) {\n\t\t\t\tawait uploadFileHandler(file);\n\t\t\t}\n\n\t\t\tinputFiles = null;\n\t\t\tconst fileInputElement = document.getElementById('files-input');\n\n\t\t\tif (fileInputElement) {\n\t\t\t\tfileInputElement.value = '';\n\t\t\t}\n\t\t} else {\n\t\t\ttoast.error($i18n.t(`File not found.`));\n\t\t}\n\t}}\n/>\n\n<div class=\"flex flex-col w-full translate-y-1\" id=\"collection-container\">\n\t{#if id && knowledge}\n\t\t<AccessControlModal\n\t\t\tbind:show={showAccessControlModal}\n\t\t\tbind:accessControl={knowledge.access_control}\n\t\t\tonChange={() => {\n\t\t\t\tchangeDebounceHandler();\n\t\t\t}}\n\t\t\taccessRoles={['read', 'write']}\n\t\t/>\n\t\t<div class=\"w-full mb-2.5\">\n\t\t\t<div class=\" flex w-full\">\n\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t<div class=\"flex items-center justify-between w-full px-0.5 mb-1\">\n\t\t\t\t\t\t<div class=\"w-full\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclass=\"text-left w-full font-semibold text-2xl font-primary bg-transparent outline-hidden\"\n\t\t\t\t\t\t\t\tbind:value={knowledge.name}\n\t\t\t\t\t\t\t\tplaceholder=\"Knowledge Name\"\n\t\t\t\t\t\t\t\ton:input={() => {\n\t\t\t\t\t\t\t\t\tchangeDebounceHandler();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"self-center shrink-0\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"bg-gray-50 hover:bg-gray-100 text-black dark:bg-gray-850 dark:hover:bg-gray-800 dark:text-white transition px-2 py-1 rounded-full flex gap-1 items-center\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\tshowAccessControlModal = true;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<LockClosed strokeWidth=\"2.5\" className=\"size-3.5\" />\n\n\t\t\t\t\t\t\t\t<div class=\"text-sm font-medium shrink-0\">\n\t\t\t\t\t\t\t\t\t{$i18n.t('Access')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"flex w-full px-1\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclass=\"text-left text-xs w-full text-gray-500 bg-transparent outline-hidden\"\n\t\t\t\t\t\t\tbind:value={knowledge.description}\n\t\t\t\t\t\t\tplaceholder=\"Knowledge Description\"\n\t\t\t\t\t\t\ton:input={() => {\n\t\t\t\t\t\t\t\tchangeDebounceHandler();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"flex flex-row flex-1 h-full max-h-full pb-2.5 gap-3\">\n\t\t\t{#if largeScreen}\n\t\t\t\t<div class=\"flex-1 flex justify-start w-full h-full max-h-full\">\n\t\t\t\t\t{#if selectedFile}\n\t\t\t\t\t\t<div class=\" flex flex-col w-full h-full max-h-full\">\n\t\t\t\t\t\t\t<div class=\"shrink-0 mb-2 flex items-center\">\n\t\t\t\t\t\t\t\t{#if !showSidepanel}\n\t\t\t\t\t\t\t\t\t<div class=\"-translate-x-2\">\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass=\"w-full text-left text-sm p-1.5 rounded-lg dark:text-gray-300 dark:hover:text-white hover:bg-black/5 dark:hover:bg-gray-850\"\n\t\t\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tpane.expand();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<ChevronLeft strokeWidth=\"2.5\" />\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t<div class=\" flex-1 text-xl font-medium\">\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass=\"hover:text-gray-500 dark:hover:text-gray-100 hover:underline grow line-clamp-1\"\n\t\t\t\t\t\t\t\t\t\thref={selectedFile.id ? `/api/v1/files/${selectedFile.id}/content` : '#'}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{selectedFile?.meta?.name}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"self-center w-fit text-sm py-1 px-2.5 dark:text-gray-300 dark:hover:text-white hover:bg-black/5 dark:hover:bg-white/5 rounded-lg\"\n\t\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\t\tupdateFileContentHandler();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{$i18n.t('Save')}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" flex-1 w-full h-full max-h-full text-sm bg-transparent outline-hidden overflow-y-auto scrollbar-hidden\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#key selectedFile.id}\n\t\t\t\t\t\t\t\t\t<RichTextInput\n\t\t\t\t\t\t\t\t\t\tclassName=\"input-prose-sm\"\n\t\t\t\t\t\t\t\t\t\tbind:value={selectedFile.data.content}\n\t\t\t\t\t\t\t\t\t\tplaceholder={$i18n.t('Add content here')}\n\t\t\t\t\t\t\t\t\t\tpreserveBreaks={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/key}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<div class=\"h-full flex w-full\">\n\t\t\t\t\t\t\t<div class=\"m-auto text-xs text-center text-gray-200 dark:text-gray-700\">\n\t\t\t\t\t\t\t\t{$i18n.t('Drag and drop a file to upload or select a file to view')}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t{:else if !largeScreen && selectedFileId !== null}\n\t\t\t\t<Drawer\n\t\t\t\t\tclassName=\"h-full\"\n\t\t\t\t\tshow={selectedFileId !== null}\n\t\t\t\t\ton:close={() => {\n\t\t\t\t\t\tselectedFileId = null;\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div class=\"flex flex-col justify-start h-full max-h-full p-2\">\n\t\t\t\t\t\t<div class=\" flex flex-col w-full h-full max-h-full\">\n\t\t\t\t\t\t\t<div class=\"shrink-0 mt-1 mb-2 flex items-center\">\n\t\t\t\t\t\t\t\t<div class=\"mr-2\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"w-full text-left text-sm p-1.5 rounded-lg dark:text-gray-300 dark:hover:text-white hover:bg-black/5 dark:hover:bg-gray-850\"\n\t\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\t\tselectedFileId = null;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ChevronLeft strokeWidth=\"2.5\" />\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\" flex-1 text-xl line-clamp-1\">\n\t\t\t\t\t\t\t\t\t{selectedFile?.meta?.name}\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"self-center w-fit text-sm py-1 px-2.5 dark:text-gray-300 dark:hover:text-white hover:bg-black/5 dark:hover:bg-white/5 rounded-lg\"\n\t\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\t\tupdateFileContentHandler();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{$i18n.t('Save')}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\" flex-1 w-full h-full max-h-full py-2.5 px-3.5 rounded-lg text-sm bg-transparent overflow-y-auto scrollbar-hidden\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#key selectedFile.id}\n\t\t\t\t\t\t\t\t\t<RichTextInput\n\t\t\t\t\t\t\t\t\t\tclassName=\"input-prose-sm\"\n\t\t\t\t\t\t\t\t\t\tbind:value={selectedFile.data.content}\n\t\t\t\t\t\t\t\t\t\tplaceholder={$i18n.t('Add content here')}\n\t\t\t\t\t\t\t\t\t\tpreserveBreaks={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/key}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Drawer>\n\t\t\t{/if}\n\n\t\t\t<div\n\t\t\t\tclass=\"{largeScreen ? 'shrink-0 w-72 max-w-72' : 'flex-1'}\n\t\t\tflex\n\t\t\tpy-2\n\t\t\trounded-2xl\n\t\t\tborder\n\t\t\tborder-gray-50\n\t\t\th-full\n\t\t\tdark:border-gray-850\"\n\t\t\t>\n\t\t\t\t<div class=\" flex flex-col w-full space-x-2 rounded-lg h-full\">\n\t\t\t\t\t<div class=\"w-full h-full flex flex-col\">\n\t\t\t\t\t\t<div class=\" px-3\">\n\t\t\t\t\t\t\t<div class=\"flex mb-0.5\">\n\t\t\t\t\t\t\t\t<div class=\" self-center ml-1 mr-3\">\n\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\t\tclass=\"w-4 h-4\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\t\td=\"M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z\"\n\t\t\t\t\t\t\t\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclass=\" w-full text-sm pr-4 py-1 rounded-r-xl outline-hidden bg-transparent\"\n\t\t\t\t\t\t\t\t\tbind:value={query}\n\t\t\t\t\t\t\t\t\tplaceholder={$i18n.t('Search Collection')}\n\t\t\t\t\t\t\t\t\ton:focus={() => {\n\t\t\t\t\t\t\t\t\t\tselectedFileId = null;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<AddContentMenu\n\t\t\t\t\t\t\t\t\t\ton:upload={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tif (e.detail.type === 'directory') {\n\t\t\t\t\t\t\t\t\t\t\t\tuploadDirectoryHandler();\n\t\t\t\t\t\t\t\t\t\t\t} else if (e.detail.type === 'text') {\n\t\t\t\t\t\t\t\t\t\t\t\tshowAddTextContentModal = true;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById('files-input').click();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\ton:sync={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tshowSyncConfirmModal = true;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{#if filteredItems.length > 0}\n\t\t\t\t\t\t\t<div class=\" flex overflow-y-auto h-full w-full scrollbar-hidden text-xs\">\n\t\t\t\t\t\t\t\t<Files\n\t\t\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\t\t\tfiles={filteredItems}\n\t\t\t\t\t\t\t\t\t{selectedFileId}\n\t\t\t\t\t\t\t\t\ton:click={(e) => {\n\t\t\t\t\t\t\t\t\t\tselectedFileId = selectedFileId === e.detail ? null : e.detail;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ton:delete={(e) => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(e.detail);\n\n\t\t\t\t\t\t\t\t\t\tselectedFileId = null;\n\t\t\t\t\t\t\t\t\t\tdeleteFileHandler(e.detail);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<div class=\"my-3 flex flex-col justify-center text-center text-gray-500 text-xs\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{$i18n.t('No content found')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t{:else}\n\t\t<Spinner />\n\t{/if}\n</div>\n"],"names":["res","knowledge","uuidv4","inputFiles"],"mappings":"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"}