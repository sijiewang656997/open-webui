{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../../../src/lib/apis/prompts/index.ts","../../../../../../../../../src/lib/components/common/Textarea.svelte","../../../../../../../../../src/lib/components/icons/LockClosed.svelte","../../../../../../../../../src/lib/components/workspace/common/AccessControlModal.svelte","../../../../../../../../../src/lib/components/workspace/Prompts/PromptEditor.svelte","../../../../../../../../../src/routes/(app)/workspace/prompts/create/+page.svelte"],"sourcesContent":["import { WEBUI_API_BASE_URL } from '$lib/constants';\n\ntype PromptItem = {\n\tcommand: string;\n\ttitle: string;\n\tcontent: string;\n\taccess_control?: null | object;\n};\n\nexport const createNewPrompt = async (token: string, prompt: PromptItem) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/create`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...prompt,\n\t\t\tcommand: `/${prompt.command}`\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getPrompts = async (token: string = '') => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getPromptList = async (token: string = '') => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/list`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getPromptByCommand = async (token: string, command: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/command/${command}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const updatePromptByCommand = async (token: string, prompt: PromptItem) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/command/${prompt.command}/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...prompt,\n\t\t\tcommand: `/${prompt.command}`\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const deletePromptByCommand = async (token: string, command: string) => {\n\tlet error = null;\n\n\tcommand = command.charAt(0) === '/' ? command.slice(1) : command;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/command/${command}/delete`, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n","<script lang=\"ts\">\n\timport { onMount, tick } from 'svelte';\n\n\texport let value = '';\n\texport let placeholder = '';\n\texport let rows = 1;\n\texport let required = false;\n\texport let className =\n\t\t'w-full rounded-lg px-3 py-2 text-sm bg-gray-50 dark:text-gray-300 dark:bg-gray-850 outline-hidden  h-full';\n\n\tlet textareaElement;\n\n\t// Adjust height on mount and after setting the element.\n\tonMount(async () => {\n\t\tawait tick();\n\t\tresize();\n\n\t\trequestAnimationFrame(() => {\n\t\t\t// setInterveal to cehck until textareaElement is set\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tif (textareaElement) {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tresize();\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\t});\n\n\tconst resize = () => {\n\t\tif (textareaElement) {\n\t\t\ttextareaElement.style.height = '';\n\t\t\ttextareaElement.style.height = `${textareaElement.scrollHeight}px`;\n\t\t}\n\t};\n</script>\n\n<textarea\n\tbind:this={textareaElement}\n\tbind:value\n\t{placeholder}\n\tclass={className}\n\tstyle=\"field-sizing: content;\"\n\t{rows}\n\t{required}\n\ton:input={(e) => {\n\t\tresize();\n\t}}\n\ton:focus={() => {\n\t\tresize();\n\t}}\n/>\n","<script lang=\"ts\">\n\texport let className = 'size-4';\n\texport let strokeWidth = '1.5';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tfill=\"none\"\n\tviewBox=\"0 0 24 24\"\n\tstroke-width={strokeWidth}\n\tstroke=\"currentColor\"\n\tclass={className}\n>\n\t<path\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t\td=\"M16.5 10.5V6.75a4.5 4.5 0 1 0-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 0 0 2.25-2.25v-6.75a2.25 2.25 0 0 0-2.25-2.25H6.75a2.25 2.25 0 0 0-2.25 2.25v6.75a2.25 2.25 0 0 0 2.25 2.25Z\"\n\t/>\n</svg>\n","<script>\n\timport { getContext } from 'svelte';\n\tconst i18n = getContext('i18n');\n\n\timport Modal from '$lib/components/common/Modal.svelte';\n\timport AccessControl from './AccessControl.svelte';\n\n\texport let show = false;\n\texport let accessControl = null;\n\texport let accessRoles = ['read'];\n\n\texport let onChange = () => {};\n</script>\n\n<Modal size=\"sm\" bind:show>\n\t<div>\n\t\t<div class=\" flex justify-between dark:text-gray-100 px-5 pt-3 pb-1\">\n\t\t\t<div class=\" text-lg font-medium self-center font-primary\">\n\t\t\t\t{$i18n.t('Access Control')}\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tclass=\"self-center\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\tshow = false;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\tclass=\"w-5 h-5\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div class=\"w-full px-5 pb-4 dark:text-white\">\n\t\t\t<AccessControl bind:accessControl {onChange} {accessRoles} />\n\t\t</div>\n\t</div>\n</Modal>\n","<script lang=\"ts\">\n\timport { onMount, tick, getContext } from 'svelte';\n\n\timport Textarea from '$lib/components/common/Textarea.svelte';\n\timport { toast } from 'svelte-sonner';\n\timport Tooltip from '$lib/components/common/Tooltip.svelte';\n\timport AccessControl from '../common/AccessControl.svelte';\n\timport LockClosed from '$lib/components/icons/LockClosed.svelte';\n\timport AccessControlModal from '../common/AccessControlModal.svelte';\n\n\texport let onSubmit: Function;\n\texport let edit = false;\n\texport let prompt = null;\n\n\tconst i18n = getContext('i18n');\n\n\tlet loading = false;\n\n\tlet title = '';\n\tlet command = '';\n\tlet content = '';\n\n\tlet accessControl = null;\n\n\tlet showAccessControlModal = false;\n\n\t$: if (!edit) {\n\t\tcommand = title !== '' ? `${title.replace(/\\s+/g, '-').toLowerCase()}` : '';\n\t}\n\n\tconst submitHandler = async () => {\n\t\tloading = true;\n\n\t\tif (validateCommandString(command)) {\n\t\t\tawait onSubmit({\n\t\t\t\ttitle,\n\t\t\t\tcommand,\n\t\t\t\tcontent,\n\t\t\t\taccess_control: accessControl\n\t\t\t});\n\t\t} else {\n\t\t\ttoast.error(\n\t\t\t\t$i18n.t('Only alphanumeric characters and hyphens are allowed in the command string.')\n\t\t\t);\n\t\t}\n\n\t\tloading = false;\n\t};\n\n\tconst validateCommandString = (inputString) => {\n\t\t// Regular expression to match only alphanumeric characters and hyphen\n\t\tconst regex = /^[a-zA-Z0-9-]+$/;\n\n\t\t// Test the input string against the regular expression\n\t\treturn regex.test(inputString);\n\t};\n\n\tonMount(async () => {\n\t\tif (prompt) {\n\t\t\ttitle = prompt.title;\n\t\t\tawait tick();\n\n\t\t\tcommand = prompt.command.at(0) === '/' ? prompt.command.slice(1) : prompt.command;\n\t\t\tcontent = prompt.content;\n\n\t\t\taccessControl = prompt?.access_control ?? null;\n\t\t}\n\t});\n</script>\n\n<AccessControlModal\n\tbind:show={showAccessControlModal}\n\tbind:accessControl\n\taccessRoles={['read', 'write']}\n/>\n\n<div class=\"w-full max-h-full flex justify-center\">\n\t<form\n\t\tclass=\"flex flex-col w-full mb-10\"\n\t\ton:submit|preventDefault={() => {\n\t\t\tsubmitHandler();\n\t\t}}\n\t>\n\t\t<div class=\"my-2\">\n\t\t\t<Tooltip\n\t\t\t\tcontent={`${$i18n.t('Only alphanumeric characters and hyphens are allowed')} - ${$i18n.t(\n\t\t\t\t\t'Activate this command by typing \"/{{COMMAND}}\" to chat input.',\n\t\t\t\t\t{\n\t\t\t\t\t\tCOMMAND: command\n\t\t\t\t\t}\n\t\t\t\t)}`}\n\t\t\t\tplacement=\"bottom-start\"\n\t\t\t>\n\t\t\t\t<div class=\"flex flex-col w-full\">\n\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclass=\"text-2xl font-semibold w-full bg-transparent outline-hidden\"\n\t\t\t\t\t\t\tplaceholder={$i18n.t('Title')}\n\t\t\t\t\t\t\tbind:value={title}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div class=\"self-center shrink-0\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"bg-gray-50 hover:bg-gray-100 text-black dark:bg-gray-850 dark:hover:bg-gray-800 dark:text-white transition px-2 py-1 rounded-full flex gap-1 items-center\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\tshowAccessControlModal = true;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<LockClosed strokeWidth=\"2.5\" className=\"size-3.5\" />\n\n\t\t\t\t\t\t\t\t<div class=\"text-sm font-medium shrink-0\">\n\t\t\t\t\t\t\t\t\t{$i18n.t('Access')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"flex gap-0.5 items-center text-xs text-gray-500\">\n\t\t\t\t\t\t<div class=\"\">/</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclass=\" w-full bg-transparent outline-hidden\"\n\t\t\t\t\t\t\tplaceholder={$i18n.t('Command')}\n\t\t\t\t\t\t\tbind:value={command}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tdisabled={edit}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t</div>\n\n\t\t<div class=\"my-2\">\n\t\t\t<div class=\"flex w-full justify-between\">\n\t\t\t\t<div class=\" self-center text-sm font-semibold\">{$i18n.t('Prompt Content')}</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"mt-2\">\n\t\t\t\t<div>\n\t\t\t\t\t<Textarea\n\t\t\t\t\t\tclassName=\"text-sm w-full bg-transparent outline-hidden overflow-y-hidden resize-none\"\n\t\t\t\t\t\tplaceholder={$i18n.t('Write a summary in 50 words that summarizes [topic or keyword].')}\n\t\t\t\t\t\tbind:value={content}\n\t\t\t\t\t\trows={6}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"text-xs text-gray-400 dark:text-gray-500\">\n\t\t\t\t\tⓘ {$i18n.t('Format your variables using brackets like this:')}&nbsp;<span\n\t\t\t\t\t\tclass=\" text-gray-600 dark:text-gray-300 font-medium\"\n\t\t\t\t\t\t>{'{{'}{$i18n.t('variable')}{'}}'}</span\n\t\t\t\t\t>.\n\t\t\t\t\t{$i18n.t('Make sure to enclose them with')}\n\t\t\t\t\t<span class=\" text-gray-600 dark:text-gray-300 font-medium\">{'{{'}</span>\n\t\t\t\t\t{$i18n.t('and')}\n\t\t\t\t\t<span class=\" text-gray-600 dark:text-gray-300 font-medium\">{'}}'}</span>.\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"text-xs text-gray-400 dark:text-gray-500\">\n\t\t\t\t\t{$i18n.t('Utilize')}<span class=\" text-gray-600 dark:text-gray-300 font-medium\">\n\t\t\t\t\t\t{` {{CLIPBOARD}}`}</span\n\t\t\t\t\t>\n\t\t\t\t\t{$i18n.t('variable to have them replaced with clipboard content.')}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"my-4 flex justify-end pb-20\">\n\t\t\t<button\n\t\t\t\tclass=\" text-sm w-full lg:w-fit px-4 py-2 transition rounded-lg {loading\n\t\t\t\t\t? ' cursor-not-allowed bg-black hover:bg-gray-900 text-white dark:bg-white dark:hover:bg-gray-100 dark:text-black'\n\t\t\t\t\t: 'bg-black hover:bg-gray-900 text-white dark:bg-white dark:hover:bg-gray-100 dark:text-black'} flex w-full justify-center\"\n\t\t\t\ttype=\"submit\"\n\t\t\t\tdisabled={loading}\n\t\t\t>\n\t\t\t\t<div class=\" self-center font-medium\">{$i18n.t('Save & Create')}</div>\n\n\t\t\t\t{#if loading}\n\t\t\t\t\t<div class=\"ml-1.5 self-center\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tclass=\" w-4 h-4\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t><style>\n\t\t\t\t\t\t\t\t.spinner_ajPY {\n\t\t\t\t\t\t\t\t\ttransform-origin: center;\n\t\t\t\t\t\t\t\t\tanimation: spinner_AtaB 0.75s infinite linear;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@keyframes spinner_AtaB {\n\t\t\t\t\t\t\t\t\t100% {\n\t\t\t\t\t\t\t\t\t\ttransform: rotate(360deg);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</style><path\n\t\t\t\t\t\t\t\td=\"M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z\"\n\t\t\t\t\t\t\t\topacity=\".25\"\n\t\t\t\t\t\t\t/><path\n\t\t\t\t\t\t\t\td=\"M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0,0,0,4.11,10.7a8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z\"\n\t\t\t\t\t\t\t\tclass=\"spinner_ajPY\"\n\t\t\t\t\t\t\t/></svg\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</button>\n\t\t</div>\n\t</form>\n</div>\n","<script lang=\"ts\">\n\timport { toast } from 'svelte-sonner';\n\timport { goto } from '$app/navigation';\n\timport { prompts } from '$lib/stores';\n\timport { onMount, tick, getContext } from 'svelte';\n\n\tconst i18n = getContext('i18n');\n\n\timport { createNewPrompt, getPrompts } from '$lib/apis/prompts';\n\timport PromptEditor from '$lib/components/workspace/Prompts/PromptEditor.svelte';\n\n\tlet prompt = null;\n\tconst onSubmit = async (_prompt) => {\n\t\tconst prompt = await createNewPrompt(localStorage.token, _prompt).catch((error) => {\n\t\t\ttoast.error(`${error}`);\n\t\t\treturn null;\n\t\t});\n\n\t\tif (prompt) {\n\t\t\ttoast.success($i18n.t('Prompt created successfully'));\n\n\t\t\tawait prompts.set(await getPrompts(localStorage.token));\n\t\t\tawait goto('/workspace/prompts');\n\t\t}\n\t};\n\n\tonMount(async () => {\n\t\twindow.addEventListener('message', async (event) => {\n\t\t\tif (\n\t\t\t\t!['https://openwebui.com', 'https://www.openwebui.com', 'http://localhost:5173'].includes(\n\t\t\t\t\tevent.origin\n\t\t\t\t)\n\t\t\t)\n\t\t\t\treturn;\n\t\t\tconst _prompt = JSON.parse(event.data);\n\t\t\tconsole.log(_prompt);\n\n\t\t\tprompt = {\n\t\t\t\ttitle: _prompt.title,\n\t\t\t\tcommand: _prompt.command,\n\t\t\t\tcontent: _prompt.content,\n\t\t\t\taccess_control: null\n\t\t\t};\n\t\t});\n\n\t\tif (window.opener ?? false) {\n\t\t\twindow.opener.postMessage('loaded', '*');\n\t\t}\n\n\t\tif (sessionStorage.prompt) {\n\t\t\tconst _prompt = JSON.parse(sessionStorage.prompt);\n\n\t\t\tprompt = {\n\t\t\t\ttitle: _prompt.title,\n\t\t\t\tcommand: _prompt.command,\n\t\t\t\tcontent: _prompt.content,\n\t\t\t\taccess_control: null\n\t\t\t};\n\t\t\tsessionStorage.removeItem('prompt');\n\t\t}\n\t});\n</script>\n\n{#key prompt}\n\t<PromptEditor {prompt} {onSubmit} />\n{/key}\n"],"names":["res","prompt"],"mappings":"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"}