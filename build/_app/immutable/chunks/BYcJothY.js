import{O as c}from"./CisIfe-u.js";const s=async(a="",l="",o="")=>{let t=null;const n=await fetch(`${c}/verify`,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify({url:l,key:o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>{var i;return t=`Ollama: ${((i=e==null?void 0:e.error)==null?void 0:i.message)??"Network Problem"}`,[]});if(t)throw t;return n},h=async(a="")=>{let l=null;const o=await fetch(`${c}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?l=t.detail:l="Server connection failed",null));if(l)throw l;return o},u=async(a="",l)=>{let o=null;const t=await fetch(`${c}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({...l})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?o=n.detail:o="Server connection failed",null));if(o)throw o;return t},p=async(a,l)=>{let o=null;const t=await fetch(`${c}/api/version`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?o=n.detail:o="Server connection failed",null));if(o)throw o;return(t==null?void 0:t.version)??!1},d=async(a="",l=null)=>{let o=null;const t=await fetch(`${c}/api/tags${l!==null?`/${l}`:""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?o=n.detail:o="Server connection failed",null));if(o)throw o;return((t==null?void 0:t.models)??[]).map(n=>({id:n.model,name:n.name??n.model,...n})).sort((n,e)=>n.name.localeCompare(e.name))},f=async(a,l,o=null)=>{let t=null;const n=await fetch(`${c}/api/create${o!==null?`/${o}`:""}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify(l)}).catch(e=>(t=e,null));if(t)throw t;return n},y=async(a,l,o=null)=>{let t=null;const n=await fetch(`${c}/api/delete${o!==null?`/${o}`:""}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({name:l})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>(console.log(e),!0)).catch(e=>(console.log(e),t=e,"detail"in e&&(t=e.detail),null));if(t)throw t;return n},w=async(a,l,o=null)=>{let t=null;const n=new AbortController,e=await fetch(`${c}/api/pull${o!==null?`/${o}`:""}`,{signal:n.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({name:l})}).catch(i=>(console.log(i),t=i,"detail"in i&&(t=i.detail),null));if(t)throw t;return[e,n]},$=async(a,l,o=null)=>{let t=null;const n=await fetch(`${c}/models/download${o!==null?`/${o}`:""}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({url:l})}).catch(e=>(console.log(e),t=e,"detail"in e&&(t=e.detail),null));if(t)throw t;return n},m=async(a,l,o=null)=>{let t=null;const n=new FormData;n.append("file",l);const e=await fetch(`${c}/models/upload${o!==null?`/${o}`:""}`,{method:"POST",headers:{Authorization:`Bearer ${a}`},body:n}).catch(i=>(console.log(i),t=i,"detail"in i&&(t=i.detail),null));if(t)throw t;return e};export{$ as a,h as b,f as c,y as d,u as e,p as f,d as g,w as p,m as u,s as v};
//# sourceMappingURL=BYcJothY.js.map
