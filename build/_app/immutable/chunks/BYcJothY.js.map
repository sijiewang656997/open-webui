{"version":3,"file":"BYcJothY.js","sources":["../../../../../../src/lib/apis/ollama/index.ts"],"sourcesContent":["import { OLLAMA_API_BASE_URL } from '$lib/constants';\n\nexport const verifyOllamaConnection = async (\n\ttoken: string = '',\n\turl: string = '',\n\tkey: string = ''\n) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/verify`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\turl,\n\t\t\tkey\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = `Ollama: ${err?.error?.message ?? 'Network Problem'}`;\n\t\t\treturn [];\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getOllamaConfig = async (token: string = '') => {\n\tlet error = null;\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/config`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\t...(token && { authorization: `Bearer ${token}` })\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\tif ('detail' in err) {\n\t\t\t\terror = err.detail;\n\t\t\t} else {\n\t\t\t\terror = 'Server connection failed';\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\ntype OllamaConfig = {\n\tENABLE_OLLAMA_API: boolean;\n\tOLLAMA_BASE_URLS: string[];\n\tOLLAMA_API_CONFIGS: object;\n};\n\nexport const updateOllamaConfig = async (token: string = '', config: OllamaConfig) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/config/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\t...(token && { authorization: `Bearer ${token}` })\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...config\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\tif ('detail' in err) {\n\t\t\t\terror = err.detail;\n\t\t\t} else {\n\t\t\t\terror = 'Server connection failed';\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getOllamaUrls = async (token: string = '') => {\n\tlet error = null;\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/urls`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\t...(token && { authorization: `Bearer ${token}` })\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\tif ('detail' in err) {\n\t\t\t\terror = err.detail;\n\t\t\t} else {\n\t\t\t\terror = 'Server connection failed';\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res.OLLAMA_BASE_URLS;\n};\n\nexport const updateOllamaUrls = async (token: string = '', urls: string[]) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/urls/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\t...(token && { authorization: `Bearer ${token}` })\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\turls: urls\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\tif ('detail' in err) {\n\t\t\t\terror = err.detail;\n\t\t\t} else {\n\t\t\t\terror = 'Server connection failed';\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res.OLLAMA_BASE_URLS;\n};\n\nexport const getOllamaVersion = async (token: string, urlIdx?: number) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/version${urlIdx ? `/${urlIdx}` : ''}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\t...(token && { authorization: `Bearer ${token}` })\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\tif ('detail' in err) {\n\t\t\t\terror = err.detail;\n\t\t\t} else {\n\t\t\t\terror = 'Server connection failed';\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res?.version ?? false;\n};\n\nexport const getOllamaModels = async (token: string = '', urlIdx: null | number = null) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/tags${urlIdx !== null ? `/${urlIdx}` : ''}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\t...(token && { authorization: `Bearer ${token}` })\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\tif ('detail' in err) {\n\t\t\t\terror = err.detail;\n\t\t\t} else {\n\t\t\t\terror = 'Server connection failed';\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn (res?.models ?? [])\n\t\t.map((model) => ({ id: model.model, name: model.name ?? model.model, ...model }))\n\t\t.sort((a, b) => {\n\t\t\treturn a.name.localeCompare(b.name);\n\t\t});\n};\n\nexport const generatePrompt = async (token: string = '', model: string, conversation: string) => {\n\tlet error = null;\n\n\tif (conversation === '') {\n\t\tconversation = '[no existing conversation]';\n\t}\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/generate`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tmodel: model,\n\t\t\tprompt: `Conversation:\n\t\t\t${conversation}\n\n\t\t\tAs USER in the conversation above, your task is to continue the conversation. Remember, Your responses should be crafted as if you're a human conversing in a natural, realistic manner, keeping in mind the context and flow of the dialogue. Please generate a fitting response to the last message in the conversation, or if there is no existing conversation, initiate one as a normal person would.\n\t\t\t\n\t\t\tResponse:\n\t\t\t`\n\t\t})\n\t}).catch((err) => {\n\t\tconsole.log(err);\n\t\tif ('detail' in err) {\n\t\t\terror = err.detail;\n\t\t}\n\t\treturn null;\n\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const generateEmbeddings = async (token: string = '', model: string, text: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/embeddings`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tmodel: model,\n\t\t\tprompt: text\n\t\t})\n\t}).catch((err) => {\n\t\terror = err;\n\t\treturn null;\n\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const generateTextCompletion = async (token: string = '', model: string, text: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/generate`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tmodel: model,\n\t\t\tprompt: text,\n\t\t\tstream: true\n\t\t})\n\t}).catch((err) => {\n\t\terror = err;\n\t\treturn null;\n\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const generateChatCompletion = async (token: string = '', body: object) => {\n\tlet controller = new AbortController();\n\tlet error = null;\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/chat`, {\n\t\tsignal: controller.signal,\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify(body)\n\t}).catch((err) => {\n\t\terror = err;\n\t\treturn null;\n\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn [res, controller];\n};\n\nexport const createModel = async (token: string, payload: object, urlIdx: string | null = null) => {\n\tlet error = null;\n\n\tconst res = await fetch(\n\t\t`${OLLAMA_API_BASE_URL}/api/create${urlIdx !== null ? `/${urlIdx}` : ''}`,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${token}`\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload)\n\t\t}\n\t).catch((err) => {\n\t\terror = err;\n\t\treturn null;\n\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const deleteModel = async (token: string, tagName: string, urlIdx: string | null = null) => {\n\tlet error = null;\n\n\tconst res = await fetch(\n\t\t`${OLLAMA_API_BASE_URL}/api/delete${urlIdx !== null ? `/${urlIdx}` : ''}`,\n\t\t{\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${token}`\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: tagName\n\t\t\t})\n\t\t}\n\t)\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\tconsole.log(json);\n\t\t\treturn true;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\terror = err;\n\n\t\t\tif ('detail' in err) {\n\t\t\t\terror = err.detail;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const pullModel = async (token: string, tagName: string, urlIdx: number | null = null) => {\n\tlet error = null;\n\tconst controller = new AbortController();\n\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/pull${urlIdx !== null ? `/${urlIdx}` : ''}`, {\n\t\tsignal: controller.signal,\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tname: tagName\n\t\t})\n\t}).catch((err) => {\n\t\tconsole.log(err);\n\t\terror = err;\n\n\t\tif ('detail' in err) {\n\t\t\terror = err.detail;\n\t\t}\n\n\t\treturn null;\n\t});\n\tif (error) {\n\t\tthrow error;\n\t}\n\treturn [res, controller];\n};\n\nexport const downloadModel = async (\n\ttoken: string,\n\tdownload_url: string,\n\turlIdx: string | null = null\n) => {\n\tlet error = null;\n\n\tconst res = await fetch(\n\t\t`${OLLAMA_API_BASE_URL}/models/download${urlIdx !== null ? `/${urlIdx}` : ''}`,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${token}`\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\turl: download_url\n\t\t\t})\n\t\t}\n\t).catch((err) => {\n\t\tconsole.log(err);\n\t\terror = err;\n\n\t\tif ('detail' in err) {\n\t\t\terror = err.detail;\n\t\t}\n\n\t\treturn null;\n\t});\n\tif (error) {\n\t\tthrow error;\n\t}\n\treturn res;\n};\n\nexport const uploadModel = async (token: string, file: File, urlIdx: string | null = null) => {\n\tlet error = null;\n\n\tconst formData = new FormData();\n\tformData.append('file', file);\n\n\tconst res = await fetch(\n\t\t`${OLLAMA_API_BASE_URL}/models/upload${urlIdx !== null ? `/${urlIdx}` : ''}`,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`\n\t\t\t},\n\t\t\tbody: formData\n\t\t}\n\t).catch((err) => {\n\t\tconsole.log(err);\n\t\terror = err;\n\n\t\tif ('detail' in err) {\n\t\t\terror = err.detail;\n\t\t}\n\n\t\treturn null;\n\t});\n\tif (error) {\n\t\tthrow error;\n\t}\n\treturn res;\n};\n\n// export const pullModel = async (token: string, tagName: string) => {\n// \treturn await fetch(`${OLLAMA_API_BASE_URL}/pull`, {\n// \t\tmethod: 'POST',\n// \t\theaders: {\n// \t\t\t'Content-Type': 'text/event-stream',\n// \t\t\tAuthorization: `Bearer ${token}`\n// \t\t},\n// \t\tbody: JSON.stringify({\n// \t\t\tname: tagName\n// \t\t})\n// \t});\n// };\n"],"names":["verifyOllamaConnection","token","url","key","error","res","OLLAMA_API_BASE_URL","err","_a","getOllamaConfig","updateOllamaConfig","config","getOllamaVersion","urlIdx","getOllamaModels","model","a","b","createModel","payload","deleteModel","tagName","json","pullModel","controller","downloadModel","download_url","uploadModel","file","formData"],"mappings":"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"}