import{a as s}from"./CisIfe-u.js";import{a as i}from"./B9ns8vb-.js";const h=async a=>{let o=null;const n=await fetch(`${s}/users/default/permissions`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return n},d=async(a,o)=>{let n=null;const t=await fetch(`${s}/users/default/permissions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),n=e.detail,null));if(n)throw n;return t},p=async(a,o,n)=>{let t=null;const e=await fetch(`${s}/users/update/role`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({id:o,role:n})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return e},f=async a=>{let o=null;const n=await fetch(`${s}/users/`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return n||[]},w=async a=>{let o=null;const n=await fetch(`${s}/users/user/settings`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return n},y=async(a,o)=>{let n=null;const t=await fetch(`${s}/users/user/settings/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),n=e.detail,null));if(n)throw n;return t},g=async(a,o)=>{let n=null;const t=await fetch(`${s}/users/${o}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),n=e.detail,null));if(n)throw n;return t},l=async(a,o)=>{let n=null;const t=await fetch(`${s}/users/user/info/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),n=e.detail,null));if(n)throw n;return t},j=async a=>{const o=await i().catch(n=>(console.log(n),null));return o?(await l(a,{location:o}),o):(console.log("Failed to get user location"),null)},m=async(a,o)=>{let n=null;const t=await fetch(`${s}/users/${o}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),n=e.detail,null));if(n)throw n;return t},$=async(a,o,n)=>{let t=null;const e=await fetch(`${s}/users/${o}/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({profile_image_url:n.profile_image_url,email:n.email,name:n.name,password:n.password!==""?n.password:void 0})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return e};export{p as a,f as b,h as c,m as d,d as e,l as f,g,y as h,w as i,j,$ as u};
//# sourceMappingURL=CDg80BRM.js.map
