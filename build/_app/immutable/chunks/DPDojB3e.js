import{a as c}from"./CisIfe-u.js";const s=async(r,e)=>{let n=null;const o=await fetch(`${c}/groups/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({...e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(n=t.detail,console.log(t),null));if(n)throw n;return o},l=async(r="")=>{let e=null;const n=await fetch(`${c}/groups/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(e=o.detail,console.log(o),null));if(e)throw e;return n},u=async(r,e,n)=>{let o=null;const t=await fetch(`${c}/groups/id/${e}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({...n})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>a).catch(a=>(o=a.detail,console.log(a),null));if(o)throw o;return t},p=async(r,e)=>{let n=null;const o=await fetch(`${c}/groups/id/${e}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t.detail,console.log(t),null));if(n)throw n;return o};export{s as c,p as d,l as g,u};
//# sourceMappingURL=DPDojB3e.js.map
