{"version":3,"file":"42.Bv0tQXrn.js","sources":["../../../../../../src/lib/apis/syncService/index.ts","../../../../../../src/lib/components/SyncButton.svelte","../../../../../../src/routes/sync/+page.svelte"],"sourcesContent":["// 导入适当的依赖\nimport { writable } from 'svelte/store';\n\n// 定义类型\ninterface SyncState {\n  inProgress: boolean;\n  progress: number;\n  error: string | null;\n  result: any | null;\n}\n\ninterface ColumnTypes {\n  [key: string]: 'DATE' | 'INTEGER' | 'DECIMAL' | 'VARCHAR';\n}\n\ninterface TableData {\n  data: any[][];\n  columns?: string[];\n  columnTypes?: ColumnTypes;\n  rowCount?: number;\n  encoding?: string;\n}\n\ninterface SyncData {\n  data: {\n    supporting_tables: {\n      [key: string]: TableData;\n    };\n    master_table: TableData | null;\n    timestamp: string;\n  };\n}\n\ninterface RawDataTable {\n  name?: string;\n  data: any[][];\n  columns?: string[];\n  dateColumns?: number[];\n  weekEndingColumns?: number[];\n}\n\ninterface RawData {\n  masterTable?: RawDataTable;\n  supportingTables?: {\n    [key: string]: RawDataTable;\n  };\n}\n\n// 创建同步状态的store\nexport const syncState = writable<SyncState>({\n  inProgress: false,\n  progress: 0,\n  error: null,\n  result: null\n});\n\n/**\n * 获取所有数据\n * 根据您的应用需求自定义\n */\nexport async function getAllData(): Promise<RawData> {\n  try {\n    // 这里实现您自己的数据获取逻辑\n    const response = await fetch('/api/data');\n    if (!response.ok) {\n      throw new Error(`获取数据失败: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error: any) {\n    console.error('获取数据失败:', error);\n    throw new Error(`获取数据失败: ${error.message}`);\n  }\n}\n\n/**\n * 处理和清理数据\n * 基于您之前分享的代码，实现数据清理和标准化\n */\nexport function processData(rawData: RawData): SyncData {\n  // 实现从您之前代码中提取的清理逻辑\n  // 例如：处理日期格式、列名规范化等\n  \n  // 根据您的syncExcelData函数来格式化数据\n  const formattedData: SyncData = {\n    data: {\n      supporting_tables: {},\n      master_table: null,\n      timestamp: new Date().toISOString()\n    }\n  };\n  \n  // 处理支持表\n  if (rawData.supportingTables) {\n    Object.entries(rawData.supportingTables).forEach(([name, table]) => {\n      formattedData.data.supporting_tables[name] = {\n        data: table.data,\n        columns: table.columns || table.data[0],\n        columnTypes: detectColumnTypes(table.data),\n        rowCount: table.data.length,\n        encoding: 'utf-8'\n      };\n    });\n  }\n  \n  // 处理主表\n  if (rawData.masterTable) {\n    formattedData.data.master_table = {\n      data: rawData.masterTable.data,\n      columns: rawData.masterTable.columns || rawData.masterTable.data[0],\n      columnTypes: detectColumnTypes(rawData.masterTable.data),\n      rowCount: rawData.masterTable.data.length\n    };\n  }\n  \n  return formattedData;\n}\n\n/**\n * 从您的代码中提取的列类型检测功能\n */\nfunction detectColumnTypes(data: any[][]): ColumnTypes {\n  if (!data || data.length < 2) return {};\n  \n  const columnTypes: ColumnTypes = {};\n  const headers = data[0];\n  const dateRegex = /^(?:\\d{4}[-/]\\d{2}[-/]\\d{2}|\\d{2}[-/]\\d{2}[-/]\\d{4})$/;\n  \n  headers.forEach((header: any, columnIndex: number) => {\n    // 确保header是字符串\n    const headerStr = String(header || '');\n    \n    // 检查标题是否包含'date'\n    if (headerStr.toLowerCase().includes('date')) {\n      columnTypes[headerStr] = 'DATE';\n      return;\n    }\n    \n    // 获取第一个非空值\n    const dataRows = data.slice(1);\n    const firstValidRow = dataRows.find(row => \n      row && row[columnIndex] && String(row[columnIndex]).trim() !== ''\n    );\n    \n    if (firstValidRow) {\n      const value = String(firstValidRow[columnIndex]).trim();\n      if (dateRegex.test(value)) {\n        columnTypes[headerStr] = 'DATE';\n        return;\n      }\n    }\n    \n    // 检查数据类型\n    let isNumber = true;\n    let hasDecimals = false;\n    \n    for (const row of dataRows) {\n      if (!row || row.length <= columnIndex) continue;\n      \n      const value = row[columnIndex];\n      if (value && String(value).trim() !== '') {\n        const numValue = String(value).replace(/,/g, '');\n        \n        if (isNaN(Number(numValue))) {\n          isNumber = false;\n          break;\n        }\n        if (numValue.includes('.')) {\n          hasDecimals = true;\n        }\n      }\n    }\n    \n    if (isNumber) {\n      columnTypes[headerStr] = hasDecimals ? 'DECIMAL' : 'INTEGER';\n    } else {\n      columnTypes[headerStr] = 'VARCHAR';\n    }\n  });\n  \n  return columnTypes;\n}\n\n/**\n * 转换日期格式为ISO格式 (YYYY-MM-DD)\n */\nexport function convertToISODateFormat(dateString: string): string {\n  if (!dateString) return dateString;\n  \n  try {\n    // 提取日期部分，处理\"WEEK ENDING\"格式\n    let datePart = dateString;\n    if (typeof datePart === 'string' && datePart.toLowerCase().includes('week ending')) {\n      datePart = datePart.toLowerCase().replace('week ending', '').trim();\n    }\n    \n    // 检查MM/DD/YYYY格式\n    const mmddyyyyRegex = /^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})$/;\n    const match = datePart.match(mmddyyyyRegex);\n    \n    if (match) {\n      const month = match[1].padStart(2, '0');\n      const day = match[2].padStart(2, '0');\n      const year = match[3];\n      return `${year}-${month}-${day}`;\n    }\n    \n    return datePart; // 如果不匹配预期格式，则按原样返回\n  } catch (e) {\n    console.error(`Error converting date format: ${dateString}`, e);\n    return dateString;\n  }\n}\n\n/**\n * 发送数据到后端\n */\nexport async function sendToBackend(processedData: SyncData): Promise<any> {\n  try {\n    const response = await fetch('/api/sync', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept-Language': 'zh-CN'\n      },\n      body: JSON.stringify(processedData)\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || `服务器错误 (${response.status})`);\n    }\n    \n    return await response.json();\n  } catch (error: any) {\n    console.error('同步数据失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 执行完整的同步流程\n */\nexport async function performSync(): Promise<any> {\n  syncState.update(state => ({ ...state, inProgress: true, progress: 0, error: null, result: null }));\n  \n  try {\n    // 步骤 1: 获取数据\n    syncState.update(state => ({ ...state, progress: 10 }));\n    const allData = await getAllData();\n    \n    // 步骤 2: 处理数据\n    syncState.update(state => ({ ...state, progress: 40 }));\n    const processedData = processData(allData);\n    \n    // 步骤 3: 发送到后端\n    syncState.update(state => ({ ...state, progress: 70 }));\n    const response = await sendToBackend(processedData);\n    \n    // 处理成功响应\n    syncState.update(state => ({ \n      ...state, \n      progress: 100,\n      result: response\n    }));\n    \n    return response;\n    \n  } catch (error: any) {\n    syncState.update(state => ({ ...state, error: error.message }));\n    throw error;\n  } finally {\n    syncState.update(state => ({ ...state, inProgress: false }));\n  }\n}\n\n/**\n * 获取当前同步状态\n */\nexport function getSyncState(): SyncState {\n  let currentState: SyncState = {\n    inProgress: false,\n    progress: 0,\n    error: null,\n    result: null\n  };\n  \n  const unsubscribe = syncState.subscribe(state => {\n    currentState = state;\n  });\n  \n  unsubscribe();\n  return currentState;\n}","<script>\n    import { createEventDispatcher } from 'svelte';\n    import { performSync, getSyncState } from '$lib/apis/syncService';\n    \n    const dispatch = createEventDispatcher();\n    let isSyncing = false;\n    let syncStatus = {\n      inProgress: false,\n      success: false,\n      error: null,\n      progress: 0\n    };\n  \n    async function handleSync() {\n      try {\n        syncStatus.inProgress = true;\n        syncStatus.progress = 10;\n        isSyncing = true;\n        \n        const response = await performSync();\n        \n        syncStatus.progress = 100;\n        syncStatus.success = true;\n        dispatch('synccomplete', response);\n        \n      } catch (error) {\n        syncStatus.error = error.message;\n        dispatch('syncerror', { error });\n      } finally {\n        syncStatus.inProgress = false;\n        isSyncing = false;\n      }\n    }\n  </script>\n  \n  <div class=\"sync-container\">\n    <button \n      class=\"sync-button\" \n      on:click={handleSync} \n      disabled={isSyncing}\n    >\n      {#if isSyncing}\n        <span class=\"spinner\"></span>同步中...\n      {:else}\n        <svg viewBox=\"0 0 24 24\" class=\"sync-icon\">\n          <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46c.78-1.23 1.24-2.69 1.24-4.26 0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"/>\n        </svg>\n        同步数据\n      {/if}\n    </button>\n    \n    {#if syncStatus.inProgress}\n      <div class=\"progress-bar\">\n        <div class=\"progress-fill\" style=\"width: {syncStatus.progress}%\"></div>\n      </div>\n    {/if}\n    \n    {#if syncStatus.error}\n      <div class=\"error-message\">\n        {syncStatus.error}\n      </div>\n    {/if}\n  </div>\n  \n  <style>\n    .sync-container {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n    }\n    \n    .sync-button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 8px;\n      padding: 8px 16px;\n      background-color: #3b82f6;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-weight: 500;\n      transition: background-color 0.2s;\n    }\n    \n    .sync-button:hover:not([disabled]) {\n      background-color: #2563eb;\n    }\n    \n    .sync-button:disabled {\n      background-color: #93c5fd;\n      cursor: not-allowed;\n    }\n    \n    .sync-icon {\n      width: 18px;\n      height: 18px;\n      fill: currentColor;\n    }\n    \n    .spinner {\n      border: 2px solid rgba(255, 255, 255, 0.3);\n      border-radius: 50%;\n      border-top: 2px solid #fff;\n      width: 16px;\n      height: 16px;\n      animation: spin 1s linear infinite;\n    }\n    \n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n    \n    .progress-bar {\n      width: 100%;\n      height: 4px;\n      background-color: #e5e7eb;\n      border-radius: 2px;\n      overflow: hidden;\n    }\n    \n    .progress-fill {\n      height: 100%;\n      background-color: #3b82f6;\n      transition: width 0.3s ease;\n    }\n    \n    .error-message {\n      color: #ef4444;\n      font-size: 14px;\n      margin-top: 4px;\n    }\n  </style>","<script>\n    import SyncButton from '$lib/components/SyncButton.svelte';\n    \n    let syncResult = null;\n    let syncError = null;\n    \n    function handleSyncComplete(event) {\n      syncResult = event.detail;\n      syncError = null;\n    }\n    \n    function handleSyncError(event) {\n      syncError = event.detail.error;\n      syncResult = null;\n    }\n  </script>\n  \n  <!-- 现有设置内容 -->\n  \n  <section class=\"sync-section\">\n    <h2>数据同步</h2>\n    <p>将您的数据同步到后端系统</p>\n    \n    <SyncButton \n      on:synccomplete={handleSyncComplete}\n      on:syncerror={handleSyncError}\n    />\n    \n    {#if syncResult}\n      <div class=\"result-panel\">\n        <h3>同步成功</h3>\n        <div class=\"result-summary\">\n          {#if syncResult.summary}\n            <p><strong>表格总数:</strong> {syncResult.summary.tableCount || 0}</p>\n            <p><strong>行数:</strong> {syncResult.summary.rowCount || 0}</p>\n            <p><strong>同步时间:</strong> {new Date(syncResult.timestamp).toLocaleString()}</p>\n          {/if}\n        </div>\n      </div>\n    {/if}\n    \n    {#if syncError}\n      <div class=\"error-panel\">\n        <h3>同步失败</h3>\n        <p>{syncError}</p>\n      </div>\n    {/if}\n  </section>\n  \n  <style>\n    /* 添加以下样式到现有样式中 */\n    \n    .sync-section {\n      margin-top: 30px;\n      padding: 20px;\n      border-radius: 8px;\n      background-color: #f9fafb;\n      border: 1px solid #e5e7eb;\n    }\n    \n    .result-panel {\n      margin-top: 20px;\n      padding: 15px;\n      background-color: #ecfdf5;\n      border-radius: 6px;\n      border-left: 4px solid #10b981;\n    }\n    \n    .error-panel {\n      margin-top: 20px;\n      padding: 15px;\n      background-color: #fef2f2;\n      border-radius: 6px;\n      border-left: 4px solid #ef4444;\n    }\n    \n    h3 {\n      color: #111827;\n      margin-top: 0;\n      font-size: 1.1rem;\n    }\n    \n    .result-summary {\n      font-size: 0.9rem;\n    }\n  </style>"],"names":["syncState","writable","getAllData","response","error","processData","rawData","formattedData","name","table","detectColumnTypes","data","columnTypes","headers","dateRegex","header","columnIndex","headerStr","dataRows","firstValidRow","row","value","isNumber","hasDecimals","numValue","sendToBackend","processedData","errorData","performSync","state","allData","insert_hydration","target","svg","anchor","append_hydration","path","span","set_style","div0","ctx","div1","t_value","div","dirty","set_data","t","create_if_block_2","if_block1","create_if_block_1","if_block2","create_if_block","button","dispatch","createEventDispatcher","isSyncing","syncStatus","handleSync","$$invalidate","if_block","h3","t2_value","t6_value","t10_value","p0","strong0","p1","strong1","p2","strong2","t2","t6","t10","p","section","h2","syncResult","syncError","handleSyncComplete","event","handleSyncError"],"mappings":"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"}